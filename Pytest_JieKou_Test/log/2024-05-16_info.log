{"CreateTime": "2024-05-16 12:27:13", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【创建永久二维码ticket接口】用例1：参数全部正确- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:27:13", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【创建永久二维码ticket接口】用例1：参数全部正确- 测试用例,执行成功！实际响应结果为：{"ticket": "gQHf8DwAAAAAAAAAAS5odHRwOi8vd2VpeGluLnFxLmNvbS9xLzAyV0h6QndqZUVmb0QxMDAwME0wM1MAAgQhi0VmAwQAAAAA", "url": "http://weixin.qq.com/q/02WHzBwjeEfoD10000M03S"}"}
{"CreateTime": "2024-05-16 12:27:13", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【创建永久二维码ticket接口】用例1：参数全部正确- 测试用例,执行成功！实际响应结果为：{"ticket": "gQHf8DwAAAAAAAAAAS5odHRwOi8vd2VpeGluLnFxLmNvbS9xLzAyV0h6QndqZUVmb0QxMDAwME0wM1MAAgQhi0VmAwQAAAAA", "url": "http://weixin.qq.com/q/02WHzBwjeEfoD10000M03S"}"}
{"CreateTime": "2024-05-16 12:27:13", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【通过ticket换取二维码接口】用例1：参数全部正确- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:27:37", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【拉黑用户至黑名单接口】用例1：openid_list参数正确- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:27:37", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【拉黑用户至黑名单接口】用例1：openid_list参数正确- 测试用例,执行成功！实际响应结果为：{'errcode': 0, 'errmsg': 'ok'}"}
{"CreateTime": "2024-05-16 12:27:37", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【拉黑用户至黑名单接口】用例1：openid_list参数正确- 测试用例,执行成功！实际响应结果为：{"errcode": 0, "errmsg": "ok"}"}
{"CreateTime": "2024-05-16 12:27:37", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【拉黑用户至黑名单接口】用例2：openid为无效数字- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:27:37", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【拉黑用户至黑名单接口】用例2：openid为无效数字- 测试用例,执行成功！实际响应结果为：{'errcode': 40003, 'errmsg': 'invalid openid hint: [nFHcJU5Vf-vO3z5a] rid: 66458b39-66f5c520-252fd624'}"}
{"CreateTime": "2024-05-16 12:27:37", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【拉黑用户至黑名单接口】用例2：openid为无效数字- 测试用例,执行成功！实际响应结果为：{"errcode": 40003, "errmsg": "invalid openid hint: [nFHcJU5Vf-vO3z5a] rid: 66458b39-66f5c520-252fd624"}"}
{"CreateTime": "2024-05-16 12:27:38", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【拉黑用户至黑名单接口】用例3：请求body缺失- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:27:38", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【拉黑用户至黑名单接口】用例3：请求body缺失- 测试用例,执行成功！实际响应结果为：{'errcode': 44002, 'errmsg': 'empty post data hint: [nFHc0Ymre-2tr6ya] rid: 66458b39-5660b7ac-6f4d5ff6'}"}
{"CreateTime": "2024-05-16 12:27:38", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【拉黑用户至黑名单接口】用例3：请求body缺失- 测试用例,执行成功！实际响应结果为：{"errcode": 44002, "errmsg": "empty post data hint: [nFHc0Ymre-2tr6ya] rid: 66458b39-5660b7ac-6f4d5ff6"}"}
{"CreateTime": "2024-05-16 12:27:38", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【拉黑用户至黑名单接口】用例4：参数openid_list为空- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:27:38", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【拉黑用户至黑名单接口】用例4：参数openid_list为空- 测试用例,执行成功！实际响应结果为：{'errcode': 40003, 'errmsg': 'invalid openid hint: [nFHcb9sQf-Rx.MeA] rid: 66458b3a-78fd1379-4bf5c1c5'}"}
{"CreateTime": "2024-05-16 12:27:38", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【拉黑用户至黑名单接口】用例4：参数openid_list为空- 测试用例,执行成功！实际响应结果为：{"errcode": 40003, "errmsg": "invalid openid hint: [nFHcb9sQf-Rx.MeA] rid: 66458b3a-78fd1379-4bf5c1c5"}"}
{"CreateTime": "2024-05-16 12:27:38", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【拉黑用户至黑名单接口】用例5：openid为无效汉字- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:27:38", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【拉黑用户至黑名单接口】用例5：openid为无效汉字- 测试用例,执行成功！实际响应结果为：{'errcode': 40003, 'errmsg': 'invalid openid hint: [nFHc2Hj2e-fGoStA] rid: 66458b3a-7127952b-6c90dc6d'}"}
{"CreateTime": "2024-05-16 12:27:38", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【拉黑用户至黑名单接口】用例5：openid为无效汉字- 测试用例,执行成功！实际响应结果为：{"errcode": 40003, "errmsg": "invalid openid hint: [nFHc2Hj2e-fGoStA] rid: 66458b3a-7127952b-6c90dc6d"}"}
{"CreateTime": "2024-05-16 12:27:39", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【取消拉黑用户至黑名单接口】用例1：参数access_token、openid_list都正确- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:27:39", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【取消拉黑用户至黑名单接口】用例1：参数access_token、openid_list都正确- 测试用例,执行成功！实际响应结果为：{'errcode': 0, 'errmsg': 'ok'}"}
{"CreateTime": "2024-05-16 12:27:39", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【取消拉黑用户至黑名单接口】用例1：参数access_token、openid_list都正确- 测试用例,执行成功！实际响应结果为：{"errcode": 0, "errmsg": "ok"}"}
{"CreateTime": "2024-05-16 12:27:39", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【取消拉黑用户至黑名单接口】用例2：openid为无效字符串- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:27:39", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【取消拉黑用户至黑名单接口】用例2：openid为无效字符串- 测试用例,执行成功！实际响应结果为：{'errcode': 40003, 'errmsg': 'invalid openid hint: [nFHcdpEVf-GsixFA] rid: 66458b3b-641cd243-140ecf09'}"}
{"CreateTime": "2024-05-16 12:27:39", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【取消拉黑用户至黑名单接口】用例2：openid为无效字符串- 测试用例,执行成功！实际响应结果为：{"errcode": 40003, "errmsg": "invalid openid hint: [nFHcdpEVf-GsixFA] rid: 66458b3b-641cd243-140ecf09"}"}
{"CreateTime": "2024-05-16 12:27:39", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【取消拉黑用户至黑名单接口】用例3：请求body缺失- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:27:39", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【取消拉黑用户至黑名单接口】用例3：请求body缺失- 测试用例,执行成功！实际响应结果为：{'errcode': 44002, 'errmsg': 'empty post data hint: [nFHcJU5Vf-Ki0GtA] rid: 66458b3b-19fdfec4-41834c1f'}"}
{"CreateTime": "2024-05-16 12:27:40", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【取消拉黑用户至黑名单接口】用例3：请求body缺失- 测试用例,执行成功！实际响应结果为：{"errcode": 44002, "errmsg": "empty post data hint: [nFHcJU5Vf-Ki0GtA] rid: 66458b3b-19fdfec4-41834c1f"}"}
{"CreateTime": "2024-05-16 12:27:40", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【取消拉黑用户至黑名单接口】用例4：openid参数为空- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:27:40", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【取消拉黑用户至黑名单接口】用例4：openid参数为空- 测试用例,执行成功！实际响应结果为：{'errcode': 40003, 'errmsg': 'invalid openid hint: [nFHcLoEVf-GbounA] rid: 66458b3c-13ec4e87-1bcd6fb7'}"}
{"CreateTime": "2024-05-16 12:27:40", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【取消拉黑用户至黑名单接口】用例4：openid参数为空- 测试用例,执行成功！实际响应结果为：{"errcode": 40003, "errmsg": "invalid openid hint: [nFHcLoEVf-GbounA] rid: 66458b3c-13ec4e87-1bcd6fb7"}"}
{"CreateTime": "2024-05-16 12:27:40", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【获取微信黑名单列表】用例1：参数全部正常- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:27:40", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【获取微信黑名单列表】用例1：参数全部正常- 测试用例,执行成功！实际响应结果为：{"total": 3, "count": 3, "data": {"openid": ["oDqjY5xYp972631jH7IsDR3pl2x0", "oDqjY5-wrnuyN9OBXaN0md8rLsyQ", "oDqjY50sO3UCivurTfvnATmCMuN0"]}, "next_openid": "oDqjY50sO3UCivurTfvnATmCMuN0"}"}
{"CreateTime": "2024-05-16 12:27:40", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【获取微信黑名单列表】用例1：参数全部正常- 测试用例,执行成功！实际响应结果为：{"total": 3, "count": 3, "data": {"openid": ["oDqjY5xYp972631jH7IsDR3pl2x0", "oDqjY5-wrnuyN9OBXaN0md8rLsyQ", "oDqjY50sO3UCivurTfvnATmCMuN0"]}, "next_openid": "oDqjY50sO3UCivurTfvnATmCMuN0"}"}
{"CreateTime": "2024-05-16 12:27:41", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【获取微信黑名单列表】用例2：参数begin_openid为null- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:27:41", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【获取微信黑名单列表】用例2：参数begin_openid为null- 测试用例,执行成功！实际响应结果为：{"total": 3, "count": 3, "data": {"openid": ["oDqjY5xYp972631jH7IsDR3pl2x0", "oDqjY5-wrnuyN9OBXaN0md8rLsyQ", "oDqjY50sO3UCivurTfvnATmCMuN0"]}, "next_openid": "oDqjY50sO3UCivurTfvnATmCMuN0"}"}
{"CreateTime": "2024-05-16 12:27:41", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【获取微信黑名单列表】用例2：参数begin_openid为null- 测试用例,执行成功！实际响应结果为：{"total": 3, "count": 3, "data": {"openid": ["oDqjY5xYp972631jH7IsDR3pl2x0", "oDqjY5-wrnuyN9OBXaN0md8rLsyQ", "oDqjY50sO3UCivurTfvnATmCMuN0"]}, "next_openid": "oDqjY50sO3UCivurTfvnATmCMuN0"}"}
{"CreateTime": "2024-05-16 12:27:41", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【获取微信黑名单列表】用例3：参数begin_openid无效- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:27:41", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【获取微信黑名单列表】用例3：参数begin_openid无效- 测试用例,执行成功！实际响应结果为：{'errcode': 40003, 'errmsg': 'invalid openid hint: [nFHcr0mre-yCw0Na] rid: 66458b3d-30de74f5-7d7f3c33'}"}
{"CreateTime": "2024-05-16 12:27:41", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【获取微信黑名单列表】用例3：参数begin_openid无效- 测试用例,执行成功！实际响应结果为：{"errcode": 40003, "errmsg": "invalid openid hint: [nFHcr0mre-yCw0Na] rid: 66458b3d-30de74f5-7d7f3c33"}"}
{"CreateTime": "2024-05-16 12:27:42", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【获取微信黑名单列表】用例4：请求body缺失- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:27:42", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【获取微信黑名单列表】用例4：请求body缺失- 测试用例,执行成功！实际响应结果为：{'errcode': 44002, 'errmsg': 'empty post data hint: [nFHcFBeVf-LUDVaa] rid: 66458b3e-453d8b7f-2b4b5572'}"}
{"CreateTime": "2024-05-16 12:27:42", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【获取微信黑名单列表】用例4：请求body缺失- 测试用例,执行成功！实际响应结果为：{"errcode": 44002, "errmsg": "empty post data hint: [nFHcFBeVf-LUDVaa] rid: 66458b3e-453d8b7f-2b4b5572"}"}
{"CreateTime": "2024-05-16 12:27:42", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【上传卡券图片接口】用例1：files参数为空- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:27:42", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【上传卡券图片接口】用例1：files参数为空- 测试用例,执行成功！实际响应结果为：{'errcode': 41005, 'errmsg': 'media data missing hint: [M_UJYa06629031] rid: 66458b3e-7d65c335-2adf013e'}"}
{"CreateTime": "2024-05-16 12:27:42", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【上传卡券图片接口】用例1：files参数为空- 测试用例,执行成功！实际响应结果为：{"errcode": 41005, "errmsg": "media data missing hint: [M_UJYa06629031] rid: 66458b3e-7d65c335-2adf013e"}"}
{"CreateTime": "2024-05-16 12:27:43", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【上传卡券图片接口】用例2：files格式为txt- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:27:43", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【上传卡券图片接口】用例2：files格式为txt- 测试用例,执行成功！实际响应结果为：{'errcode': 40005, 'errmsg': 'invalid file type hint: [kJQQga06634248] rid: 66458b3f-1188f158-07aea083'}"}
{"CreateTime": "2024-05-16 12:27:43", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【上传卡券图片接口】用例2：files格式为txt- 测试用例,执行成功！实际响应结果为：{"errcode": 40005, "errmsg": "invalid file type hint: [kJQQga06634248] rid: 66458b3f-1188f158-07aea083"}"}
{"CreateTime": "2024-05-16 12:27:43", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【上传卡券图片接口】用例3：files格式为png- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:27:43", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【上传卡券图片接口】用例3：files格式为png- 测试用例,执行成功！实际响应结果为：{"url": "http://mmbiz.qpic.cn/mmbiz_jpg/70AOWquMz5GuXFFrwVhoicJjNwFXguHrGoClYtp84wlOLR3Olj4W2xjMcoQLl3lm39Wl7be0EK67LaSge7nJTGA/0?from=appmsg"}"}
{"CreateTime": "2024-05-16 12:27:44", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【上传卡券图片接口】用例4：files格式为jpg- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:27:44", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【上传卡券图片接口】用例4：files格式为jpg- 测试用例,执行成功！实际响应结果为：{"url": "http://mmbiz.qpic.cn/mmbiz_jpg/70AOWquMz5GuXFFrwVhoicJjNwFXguHrGIICn2BZbPAMta5Y9VeeoDA2rM6EFre0nIQDy2nYjrvdtFxiaibxicflAw/0?from=appmsg"}"}
{"CreateTime": "2024-05-16 12:27:44", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【上传卡券图片接口】用例5：files格式为mp3- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:27:44", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【上传卡券图片接口】用例5：files格式为mp3- 测试用例,执行成功！实际响应结果为：{'errcode': 40005, 'errmsg': 'invalid file type hint: [_NIQza0664d100] rid: 66458b40-2759901f-0a5a8adf'}"}
{"CreateTime": "2024-05-16 12:27:44", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【上传卡券图片接口】用例5：files格式为mp3- 测试用例,执行成功！实际响应结果为：{"errcode": 40005, "errmsg": "invalid file type hint: [_NIQza0664d100] rid: 66458b40-2759901f-0a5a8adf"}"}
{"CreateTime": "2024-05-16 12:27:48", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【上传卡券图片接口】用例6：文件大小超过1MB- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:27:48", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【上传卡券图片接口】用例6：文件大小超过1MB- 测试用例,执行成功！实际响应结果为：{'errcode': 40009, 'errmsg': 'invalid image size hint: [ib1Hha0668p504] rid: 66458b40-27679e56-30b91241'}"}
{"CreateTime": "2024-05-16 12:27:48", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【上传卡券图片接口】用例6：文件大小超过1MB- 测试用例,执行成功！实际响应结果为：{"errcode": 40009, "errmsg": "invalid image size hint: [ib1Hha0668p504] rid: 66458b40-27679e56-30b91241"}"}
{"CreateTime": "2024-05-16 12:27:48", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【创建客服账号接口】用例1：参数全部正确- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:27:48", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【创建客服账号接口】用例1：参数全部正确- 测试用例,执行成功！实际响应结果为：{'errcode': 0, 'errmsg': 'ok'}"}
{"CreateTime": "2024-05-16 12:27:48", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【创建客服账号接口】用例1：参数全部正确- 测试用例,执行成功！实际响应结果为：{"errcode": 0, "errmsg": "ok"}"}
{"CreateTime": "2024-05-16 12:27:48", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【创建客服账号接口】用例2：参数客服账号已存在- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:27:48", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【创建客服账号接口】用例2：参数客服账号已存在- 测试用例,执行成功！实际响应结果为：{'errcode': 65406, 'errmsg': 'custom service account exists hint: [nFHcxFMre-fG5iEa] rid: 66458b44-71c96a35-31e87132'}"}
{"CreateTime": "2024-05-16 12:27:48", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【创建客服账号接口】用例2：参数客服账号已存在- 测试用例,执行成功！实际响应结果为：{"errcode": 65406, "errmsg": "custom service account exists hint: [nFHcxFMre-fG5iEa] rid: 66458b44-71c96a35-31e87132"}"}
{"CreateTime": "2024-05-16 12:27:49", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【创建客服账号接口】用例3：参数客服账号为空- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:27:49", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【创建客服账号接口】用例3：参数客服账号为空- 测试用例,执行成功！实际响应结果为：{'errcode': 65404, 'errmsg': 'illegal custom service account hint: [nFHcJFYWO-c7l_Ba] rid: 66458b45-312c71e4-48994092'}"}
{"CreateTime": "2024-05-16 12:27:49", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【创建客服账号接口】用例3：参数客服账号为空- 测试用例,执行成功！实际响应结果为：{"errcode": 65404, "errmsg": "illegal custom service account hint: [nFHcJFYWO-c7l_Ba] rid: 66458b45-312c71e4-48994092"}"}
{"CreateTime": "2024-05-16 12:27:49", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【创建客服账号接口】用例4：参数nickname客服昵称为空- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:27:49", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【创建客服账号接口】用例4：参数nickname客服昵称为空- 测试用例,执行成功！实际响应结果为：{'errcode': 0, 'errmsg': 'ok'}"}
{"CreateTime": "2024-05-16 12:27:49", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【创建客服账号接口】用例4：参数nickname客服昵称为空- 测试用例,执行成功！实际响应结果为：{"errcode": 0, "errmsg": "ok"}"}
{"CreateTime": "2024-05-16 12:27:50", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【创建客服账号接口】用例5：参数nickname客服昵称超过16个字符- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:27:50", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【创建客服账号接口】用例5：参数nickname客服昵称超过16个字符- 测试用例,执行成功！实际响应结果为：{'errcode': 65403, 'errmsg': 'illegal nickname hint: [nFHcwXore-C96AiA] rid: 66458b46-77224c23-313f959f'}"}
{"CreateTime": "2024-05-16 12:27:50", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【创建客服账号接口】用例5：参数nickname客服昵称超过16个字符- 测试用例,执行成功！实际响应结果为：{"errcode": 65403, "errmsg": "illegal nickname hint: [nFHcwXore-C96AiA] rid: 66458b46-77224c23-313f959f"}"}
{"CreateTime": "2024-05-16 12:27:50", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【创建客服账号接口】用例6：参数客服账号/前缀超过10个字符- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:27:50", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【创建客服账号接口】用例6：参数客服账号/前缀超过10个字符- 测试用例,执行成功！实际响应结果为：{'errcode': 65404, 'errmsg': 'illegal custom service account hint: [nFHciQore-uVKwwa] rid: 66458b46-031f2aa8-3046c4f4'}"}
{"CreateTime": "2024-05-16 12:27:50", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【创建客服账号接口】用例6：参数客服账号/前缀超过10个字符- 测试用例,执行成功！实际响应结果为：{"errcode": 65404, "errmsg": "illegal custom service account hint: [nFHciQore-uVKwwa] rid: 66458b46-031f2aa8-3046c4f4"}"}
{"CreateTime": "2024-05-16 12:27:51", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【设置客服信息接口】用例1：参数全部正确- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:27:51", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【设置客服信息接口】用例1：参数全部正确- 测试用例,执行成功！实际响应结果为：{'errcode': 0, 'errmsg': 'ok'}"}
{"CreateTime": "2024-05-16 12:27:51", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【设置客服信息接口】用例1：参数全部正确- 测试用例,执行成功！实际响应结果为：{"errcode": 0, "errmsg": "ok"}"}
{"CreateTime": "2024-05-16 12:27:51", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【设置客服信息接口】用例2：客服账号kf_account参数为空- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:27:51", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【设置客服信息接口】用例2：客服账号kf_account参数为空- 测试用例,执行成功！实际响应结果为：{'errcode': 65401, 'errmsg': 'invalid custom service account hint: [nFHcxAyWf-MbFndA] rid: 66458b47-0f337957-0d08b3d2'}"}
{"CreateTime": "2024-05-16 12:27:51", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【设置客服信息接口】用例2：客服账号kf_account参数为空- 测试用例,执行成功！实际响应结果为：{"errcode": 65401, "errmsg": "invalid custom service account hint: [nFHcxAyWf-MbFndA] rid: 66458b47-0f337957-0d08b3d2"}"}
{"CreateTime": "2024-05-16 12:27:51", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【设置客服信息接口】用例3：请求body数据为空- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:27:51", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【设置客服信息接口】用例3：请求body数据为空- 测试用例,执行成功！实际响应结果为：{'errcode': 44002, 'errmsg': 'empty post data hint: [nFHcRWAxO-9iMAIa] rid: 66458b47-6960a668-564ed2d7'}"}
{"CreateTime": "2024-05-16 12:27:51", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【设置客服信息接口】用例3：请求body数据为空- 测试用例,执行成功！实际响应结果为：{"errcode": 44002, "errmsg": "empty post data hint: [nFHcRWAxO-9iMAIa] rid: 66458b47-6960a668-564ed2d7"}"}
{"CreateTime": "2024-05-16 12:27:52", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【删除客服账号接口】用例1：参数全部正确- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:27:52", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【删除客服账号接口】用例1：参数全部正确- 测试用例,执行成功！实际响应结果为：{'errcode': 0, 'errmsg': 'ok'}"}
{"CreateTime": "2024-05-16 12:27:52", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【删除客服账号接口】用例1：参数全部正确- 测试用例,执行成功！实际响应结果为：{"errcode": 0, "errmsg": "ok"}"}
{"CreateTime": "2024-05-16 12:27:52", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【删除客服账号接口】用例2：删除的客服账号为无效的自定义服务帐户- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:27:52", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【删除客服账号接口】用例2：删除的客服账号为无效的自定义服务帐户- 测试用例,执行成功！实际响应结果为：{'errcode': 65401, 'errmsg': 'invalid custom service account hint: [nFHcT0I2e-SS1] rid: 66458b48-4664ca7d-6122d9ef'}"}
{"CreateTime": "2024-05-16 12:27:52", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【删除客服账号接口】用例2：删除的客服账号为无效的自定义服务帐户- 测试用例,执行成功！实际响应结果为：{"errcode": 65401, "errmsg": "invalid custom service account hint: [nFHcT0I2e-SS1] rid: 66458b48-4664ca7d-6122d9ef"}"}
{"CreateTime": "2024-05-16 12:27:53", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【获取客服基础信息接口】用例1：参数全部正确- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:27:53", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【获取客服基础信息接口】用例1：参数全部正确- 测试用例,执行成功！实际响应结果为：{"kf_list": [{"kf_account": "test1@test", "kf_headimgurl": "http://mmbiz.qpic.cn/mmbiz_png/70AOWquMz5Fo7qYD5KibUsOLZ1icffvINFFT8zLiaWAKFChRaRiazJC70NY1HUcx7HjcxjUGF0v9HM8fDbqOriaYG2Q/300?wx_fmt=png/0", "kf_id": 2001, "kf_nick": ""}, {"kf_account": "HD21_w1@test", "kf_headimgurl": "", "kf_id": 2003, "kf_nick": "xs"}, {"kf_account": "2yhU_@H0kh", "kf_headimgurl": "http://mmbiz.qpic.cn/mmbiz_jpg/70AOWquMz5FQcgcaLL2R6wT9fsuic8lptK88NTH1u6MbRicRbiaL2t5iacC6pEfEwcO15XaBOV7IRYVS32b8lGQpHg/300?wx_fmt=jpeg/0", "kf_id": 2004, "kf_nick": "xs"}, {"kf_account": "n5ghnL0c0_@ZJ81bDtlUSL3lEsRC8nGXfoQFufUwu", "kf_headimgurl": "", "kf_id": 2005, "kf_nick": "x212s"}, {"kf_account": "n5ghnL0c0_@21", "kf_headimgurl": "", "kf_id": 2006, "kf_nick": "213"}, {"kf_account": "n5ghnL0c0_@w", "kf_headimgurl": "", "kf_id": 2007, "kf_nick": ""}, {"kf_account": "n5ghnL0c0_@w2121", "kf_headimgurl": "", "kf_id": 2008, "kf_nick": "1"}, {"kf_account": "EK6iI97eN_@2izwrx5IWvfPHQrGMr57WAujazrpOz", "kf_headimgurl": "", "kf_id": 2009, "kf_nick": "pAaezgB1qQw2brQb"}, {"kf_account": "F2Fyr7v0O_@OGWBBEUtZyWe2Tr9iyhZOgYoWNEF0T", "kf_headimgurl": "", "kf_id": 2010, "kf_nick": ""}, {"kf_account": "QpAVaoy2k_@CzUkbY7xXqNto9o89zTLvM5oMxwC4R", "kf_headimgurl": "", "kf_id": 2011, "kf_nick": "JPI4jmVvk67MPnpB"}, {"kf_account": "5D2PKS4hP_@baaqpLLA7LFFqaZKe0MWVKxYKEQDWV", "kf_headimgurl": "", "kf_id": 2012, "kf_nick": ""}, {"kf_account": "dfHBJQenO_@9uNMF5JvFmnKzrvdvbJinRkOmXvKHM", "kf_headimgurl": "", "kf_id": 2013, "kf_nick": "T9y3DQuN8okYbc5V"}, {"kf_account": "xNTix4n9H_@iGor1NP9jIjPDJU8PL1Ytb4UFmGzCP", "kf_headimgurl": "", "kf_id": 2014, "kf_nick": ""}, {"kf_account": "ertvLaKhv_@KIwKFp5Lzji8odIwGx8t484suX8cJ6", "kf_headimgurl": "", "kf_id": 2015, "kf_nick": "8SW7MgAItqZ5VYYY"}, {"kf_account": "gFYGiILCI_@haHaBP5TRuNhibm8Le5LPXuPbhmmjc", "kf_headimgurl": "", "kf_id": 2017, "kf_nick": "N8UknHMi3NiLaeyb"}, {"kf_account": "wb3KlS2uP_@Qzr3IQPD9Do9WCXpsCopCn42Y6LotF", "kf_headimgurl": "", "kf_id": 2019, "kf_nick": "O3jzu6ZDXmBUTgrF"}, {"kf_account": "fxQoMrvSX_@LznktN8oMDr1aWjYp4S6OStFdfw1Lc", "kf_headimgurl": "", "kf_id": 2021, "kf_nick": "RcaGzGy89NSHLJVe"}, {"kf_account": "Siss95TKc_@Q4LU17KQwFWbTMIm5VzHxc44JbJWtK", "kf_headimgurl": "", "kf_id": 2023, "kf_nick": "89uEdc9rftB72Q8H"}, {"kf_account": "mzk3VJdUD_@p5GnPuQcFB8XRYBPKxhgaA17vw9Wps", "kf_headimgurl": "", "kf_id": 2025, "kf_nick": "yXTg131F7LjuqfdW"}, {"kf_account": "RQkmXST9h_@oKF1pe2W2FVWPMgYf92uSGsKpBko7J", "kf_headimgurl": "", "kf_id": 2027, "kf_nick": "NQCkOVLGtPvHsXs4"}, {"kf_account": "NRTw4x7YL_@hdYR4LuWEWJZ0iWoe4xQsNqC2IgoHi", "kf_headimgurl": "", "kf_id": 2029, "kf_nick": "o7GoTY46wcUR01xj"}, {"kf_account": "Sc0NwcNGk_@VEMEOZM7OcI5xki4zl8y3Hvt4VFg45", "kf_headimgurl": "", "kf_id": 2031, "kf_nick": "JT7VIs5Dh044GsQ5"}, {"kf_account": "wCy20qT7H_@45KjVBrI9EIEi4eNouGgCiEjiReqBd", "kf_headimgurl": "", "kf_id": 2033, "kf_nick": "bbvPpBF9ZYQGIYW3"}, {"kf_account": "qSnj5Ax5H_@qB4OcJMOHSIdnmlfTJY6h5o1XBiqme", "kf_headimgurl": "", "kf_id": 2035, "kf_nick": "r9vd7b0QCs328ZyF"}, {"kf_account": "wh9VL9sOF_@Qvh1zgSbujoV12kh9DMZfP8jc85uwJ", "kf_headimgurl": "", "kf_id": 2037, "kf_nick": "TrFoPT8NYAWjF2D6"}, {"kf_account": "adad@111", "kf_headimgurl": "http://mmbiz.qpic.cn/mmbiz_png/70AOWquMz5EWeRhjGXNe18aDevrLcE1WfdvvBNgHoLxVF4JqFrdsq03UicDgVW3Ir2mNpRKhMic4fem2BUWUYF8Q/300?wx_fmt=png/0", "kf_id": 2039, "kf_nick": "\u4e1c\u4e1c"}, {"kf_account": "Sandy12_@test", "kf_headimgurl": "", "kf_id": 2040, "kf_nick": "\u73ca\u8fea"}, {"kf_account": "Sandy666_@test", "kf_headimgurl": "", "kf_id": 2041, "kf_nick": "\u73ca\u8fea"}, {"kf_account": "Sedfsg@testetestetestetestetesteteste", "kf_headimgurl": "", "kf_id": 2042, "kf_nick": "\u73ca\u8fea"}, {"kf_account": "DC57zGQYE_@NB3wV7DnMYwQCeUEt96bRYvKRD0iAg", "kf_headimgurl": "", "kf_id": 2043, "kf_nick": "UCPmuKrrSmUv54AJ"}]}"}
{"CreateTime": "2024-05-16 12:27:53", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【获取客服基础信息接口】用例1：参数全部正确- 测试用例,执行成功！实际响应结果为：{"kf_list": [{"kf_account": "test1@test", "kf_headimgurl": "http://mmbiz.qpic.cn/mmbiz_png/70AOWquMz5Fo7qYD5KibUsOLZ1icffvINFFT8zLiaWAKFChRaRiazJC70NY1HUcx7HjcxjUGF0v9HM8fDbqOriaYG2Q/300?wx_fmt=png/0", "kf_id": 2001, "kf_nick": ""}, {"kf_account": "HD21_w1@test", "kf_headimgurl": "", "kf_id": 2003, "kf_nick": "xs"}, {"kf_account": "2yhU_@H0kh", "kf_headimgurl": "http://mmbiz.qpic.cn/mmbiz_jpg/70AOWquMz5FQcgcaLL2R6wT9fsuic8lptK88NTH1u6MbRicRbiaL2t5iacC6pEfEwcO15XaBOV7IRYVS32b8lGQpHg/300?wx_fmt=jpeg/0", "kf_id": 2004, "kf_nick": "xs"}, {"kf_account": "n5ghnL0c0_@ZJ81bDtlUSL3lEsRC8nGXfoQFufUwu", "kf_headimgurl": "", "kf_id": 2005, "kf_nick": "x212s"}, {"kf_account": "n5ghnL0c0_@21", "kf_headimgurl": "", "kf_id": 2006, "kf_nick": "213"}, {"kf_account": "n5ghnL0c0_@w", "kf_headimgurl": "", "kf_id": 2007, "kf_nick": ""}, {"kf_account": "n5ghnL0c0_@w2121", "kf_headimgurl": "", "kf_id": 2008, "kf_nick": "1"}, {"kf_account": "EK6iI97eN_@2izwrx5IWvfPHQrGMr57WAujazrpOz", "kf_headimgurl": "", "kf_id": 2009, "kf_nick": "pAaezgB1qQw2brQb"}, {"kf_account": "F2Fyr7v0O_@OGWBBEUtZyWe2Tr9iyhZOgYoWNEF0T", "kf_headimgurl": "", "kf_id": 2010, "kf_nick": ""}, {"kf_account": "QpAVaoy2k_@CzUkbY7xXqNto9o89zTLvM5oMxwC4R", "kf_headimgurl": "", "kf_id": 2011, "kf_nick": "JPI4jmVvk67MPnpB"}, {"kf_account": "5D2PKS4hP_@baaqpLLA7LFFqaZKe0MWVKxYKEQDWV", "kf_headimgurl": "", "kf_id": 2012, "kf_nick": ""}, {"kf_account": "dfHBJQenO_@9uNMF5JvFmnKzrvdvbJinRkOmXvKHM", "kf_headimgurl": "", "kf_id": 2013, "kf_nick": "T9y3DQuN8okYbc5V"}, {"kf_account": "xNTix4n9H_@iGor1NP9jIjPDJU8PL1Ytb4UFmGzCP", "kf_headimgurl": "", "kf_id": 2014, "kf_nick": ""}, {"kf_account": "ertvLaKhv_@KIwKFp5Lzji8odIwGx8t484suX8cJ6", "kf_headimgurl": "", "kf_id": 2015, "kf_nick": "8SW7MgAItqZ5VYYY"}, {"kf_account": "gFYGiILCI_@haHaBP5TRuNhibm8Le5LPXuPbhmmjc", "kf_headimgurl": "", "kf_id": 2017, "kf_nick": "N8UknHMi3NiLaeyb"}, {"kf_account": "wb3KlS2uP_@Qzr3IQPD9Do9WCXpsCopCn42Y6LotF", "kf_headimgurl": "", "kf_id": 2019, "kf_nick": "O3jzu6ZDXmBUTgrF"}, {"kf_account": "fxQoMrvSX_@LznktN8oMDr1aWjYp4S6OStFdfw1Lc", "kf_headimgurl": "", "kf_id": 2021, "kf_nick": "RcaGzGy89NSHLJVe"}, {"kf_account": "Siss95TKc_@Q4LU17KQwFWbTMIm5VzHxc44JbJWtK", "kf_headimgurl": "", "kf_id": 2023, "kf_nick": "89uEdc9rftB72Q8H"}, {"kf_account": "mzk3VJdUD_@p5GnPuQcFB8XRYBPKxhgaA17vw9Wps", "kf_headimgurl": "", "kf_id": 2025, "kf_nick": "yXTg131F7LjuqfdW"}, {"kf_account": "RQkmXST9h_@oKF1pe2W2FVWPMgYf92uSGsKpBko7J", "kf_headimgurl": "", "kf_id": 2027, "kf_nick": "NQCkOVLGtPvHsXs4"}, {"kf_account": "NRTw4x7YL_@hdYR4LuWEWJZ0iWoe4xQsNqC2IgoHi", "kf_headimgurl": "", "kf_id": 2029, "kf_nick": "o7GoTY46wcUR01xj"}, {"kf_account": "Sc0NwcNGk_@VEMEOZM7OcI5xki4zl8y3Hvt4VFg45", "kf_headimgurl": "", "kf_id": 2031, "kf_nick": "JT7VIs5Dh044GsQ5"}, {"kf_account": "wCy20qT7H_@45KjVBrI9EIEi4eNouGgCiEjiReqBd", "kf_headimgurl": "", "kf_id": 2033, "kf_nick": "bbvPpBF9ZYQGIYW3"}, {"kf_account": "qSnj5Ax5H_@qB4OcJMOHSIdnmlfTJY6h5o1XBiqme", "kf_headimgurl": "", "kf_id": 2035, "kf_nick": "r9vd7b0QCs328ZyF"}, {"kf_account": "wh9VL9sOF_@Qvh1zgSbujoV12kh9DMZfP8jc85uwJ", "kf_headimgurl": "", "kf_id": 2037, "kf_nick": "TrFoPT8NYAWjF2D6"}, {"kf_account": "adad@111", "kf_headimgurl": "http://mmbiz.qpic.cn/mmbiz_png/70AOWquMz5EWeRhjGXNe18aDevrLcE1WfdvvBNgHoLxVF4JqFrdsq03UicDgVW3Ir2mNpRKhMic4fem2BUWUYF8Q/300?wx_fmt=png/0", "kf_id": 2039, "kf_nick": "\u4e1c\u4e1c"}, {"kf_account": "Sandy12_@test", "kf_headimgurl": "", "kf_id": 2040, "kf_nick": "\u73ca\u8fea"}, {"kf_account": "Sandy666_@test", "kf_headimgurl": "", "kf_id": 2041, "kf_nick": "\u73ca\u8fea"}, {"kf_account": "Sedfsg@testetestetestetestetesteteste", "kf_headimgurl": "", "kf_id": 2042, "kf_nick": "\u73ca\u8fea"}, {"kf_account": "DC57zGQYE_@NB3wV7DnMYwQCeUEt96bRYvKRD0iAg", "kf_headimgurl": "", "kf_id": 2043, "kf_nick": "UCPmuKrrSmUv54AJ"}]}"}
{"CreateTime": "2024-05-16 12:27:53", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【获取客服基础信息接口】用例1：参数全部正确- 测试用例,执行成功！实际响应结果为：{"kf_list": [{"kf_account": "test1@test", "kf_headimgurl": "http://mmbiz.qpic.cn/mmbiz_png/70AOWquMz5Fo7qYD5KibUsOLZ1icffvINFFT8zLiaWAKFChRaRiazJC70NY1HUcx7HjcxjUGF0v9HM8fDbqOriaYG2Q/300?wx_fmt=png/0", "kf_id": 2001, "kf_nick": ""}, {"kf_account": "HD21_w1@test", "kf_headimgurl": "", "kf_id": 2003, "kf_nick": "xs"}, {"kf_account": "2yhU_@H0kh", "kf_headimgurl": "http://mmbiz.qpic.cn/mmbiz_jpg/70AOWquMz5FQcgcaLL2R6wT9fsuic8lptK88NTH1u6MbRicRbiaL2t5iacC6pEfEwcO15XaBOV7IRYVS32b8lGQpHg/300?wx_fmt=jpeg/0", "kf_id": 2004, "kf_nick": "xs"}, {"kf_account": "n5ghnL0c0_@ZJ81bDtlUSL3lEsRC8nGXfoQFufUwu", "kf_headimgurl": "", "kf_id": 2005, "kf_nick": "x212s"}, {"kf_account": "n5ghnL0c0_@21", "kf_headimgurl": "", "kf_id": 2006, "kf_nick": "213"}, {"kf_account": "n5ghnL0c0_@w", "kf_headimgurl": "", "kf_id": 2007, "kf_nick": ""}, {"kf_account": "n5ghnL0c0_@w2121", "kf_headimgurl": "", "kf_id": 2008, "kf_nick": "1"}, {"kf_account": "EK6iI97eN_@2izwrx5IWvfPHQrGMr57WAujazrpOz", "kf_headimgurl": "", "kf_id": 2009, "kf_nick": "pAaezgB1qQw2brQb"}, {"kf_account": "F2Fyr7v0O_@OGWBBEUtZyWe2Tr9iyhZOgYoWNEF0T", "kf_headimgurl": "", "kf_id": 2010, "kf_nick": ""}, {"kf_account": "QpAVaoy2k_@CzUkbY7xXqNto9o89zTLvM5oMxwC4R", "kf_headimgurl": "", "kf_id": 2011, "kf_nick": "JPI4jmVvk67MPnpB"}, {"kf_account": "5D2PKS4hP_@baaqpLLA7LFFqaZKe0MWVKxYKEQDWV", "kf_headimgurl": "", "kf_id": 2012, "kf_nick": ""}, {"kf_account": "dfHBJQenO_@9uNMF5JvFmnKzrvdvbJinRkOmXvKHM", "kf_headimgurl": "", "kf_id": 2013, "kf_nick": "T9y3DQuN8okYbc5V"}, {"kf_account": "xNTix4n9H_@iGor1NP9jIjPDJU8PL1Ytb4UFmGzCP", "kf_headimgurl": "", "kf_id": 2014, "kf_nick": ""}, {"kf_account": "ertvLaKhv_@KIwKFp5Lzji8odIwGx8t484suX8cJ6", "kf_headimgurl": "", "kf_id": 2015, "kf_nick": "8SW7MgAItqZ5VYYY"}, {"kf_account": "gFYGiILCI_@haHaBP5TRuNhibm8Le5LPXuPbhmmjc", "kf_headimgurl": "", "kf_id": 2017, "kf_nick": "N8UknHMi3NiLaeyb"}, {"kf_account": "wb3KlS2uP_@Qzr3IQPD9Do9WCXpsCopCn42Y6LotF", "kf_headimgurl": "", "kf_id": 2019, "kf_nick": "O3jzu6ZDXmBUTgrF"}, {"kf_account": "fxQoMrvSX_@LznktN8oMDr1aWjYp4S6OStFdfw1Lc", "kf_headimgurl": "", "kf_id": 2021, "kf_nick": "RcaGzGy89NSHLJVe"}, {"kf_account": "Siss95TKc_@Q4LU17KQwFWbTMIm5VzHxc44JbJWtK", "kf_headimgurl": "", "kf_id": 2023, "kf_nick": "89uEdc9rftB72Q8H"}, {"kf_account": "mzk3VJdUD_@p5GnPuQcFB8XRYBPKxhgaA17vw9Wps", "kf_headimgurl": "", "kf_id": 2025, "kf_nick": "yXTg131F7LjuqfdW"}, {"kf_account": "RQkmXST9h_@oKF1pe2W2FVWPMgYf92uSGsKpBko7J", "kf_headimgurl": "", "kf_id": 2027, "kf_nick": "NQCkOVLGtPvHsXs4"}, {"kf_account": "NRTw4x7YL_@hdYR4LuWEWJZ0iWoe4xQsNqC2IgoHi", "kf_headimgurl": "", "kf_id": 2029, "kf_nick": "o7GoTY46wcUR01xj"}, {"kf_account": "Sc0NwcNGk_@VEMEOZM7OcI5xki4zl8y3Hvt4VFg45", "kf_headimgurl": "", "kf_id": 2031, "kf_nick": "JT7VIs5Dh044GsQ5"}, {"kf_account": "wCy20qT7H_@45KjVBrI9EIEi4eNouGgCiEjiReqBd", "kf_headimgurl": "", "kf_id": 2033, "kf_nick": "bbvPpBF9ZYQGIYW3"}, {"kf_account": "qSnj5Ax5H_@qB4OcJMOHSIdnmlfTJY6h5o1XBiqme", "kf_headimgurl": "", "kf_id": 2035, "kf_nick": "r9vd7b0QCs328ZyF"}, {"kf_account": "wh9VL9sOF_@Qvh1zgSbujoV12kh9DMZfP8jc85uwJ", "kf_headimgurl": "", "kf_id": 2037, "kf_nick": "TrFoPT8NYAWjF2D6"}, {"kf_account": "adad@111", "kf_headimgurl": "http://mmbiz.qpic.cn/mmbiz_png/70AOWquMz5EWeRhjGXNe18aDevrLcE1WfdvvBNgHoLxVF4JqFrdsq03UicDgVW3Ir2mNpRKhMic4fem2BUWUYF8Q/300?wx_fmt=png/0", "kf_id": 2039, "kf_nick": "\u4e1c\u4e1c"}, {"kf_account": "Sandy12_@test", "kf_headimgurl": "", "kf_id": 2040, "kf_nick": "\u73ca\u8fea"}, {"kf_account": "Sandy666_@test", "kf_headimgurl": "", "kf_id": 2041, "kf_nick": "\u73ca\u8fea"}, {"kf_account": "Sedfsg@testetestetestetestetesteteste", "kf_headimgurl": "", "kf_id": 2042, "kf_nick": "\u73ca\u8fea"}, {"kf_account": "DC57zGQYE_@NB3wV7DnMYwQCeUEt96bRYvKRD0iAg", "kf_headimgurl": "", "kf_id": 2043, "kf_nick": "UCPmuKrrSmUv54AJ"}]}"}
{"CreateTime": "2024-05-16 12:27:53", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【获取客服基础信息接口】用例1：参数全部正确- 测试用例,执行成功！实际响应结果为：{"kf_list": [{"kf_account": "test1@test", "kf_headimgurl": "http://mmbiz.qpic.cn/mmbiz_png/70AOWquMz5Fo7qYD5KibUsOLZ1icffvINFFT8zLiaWAKFChRaRiazJC70NY1HUcx7HjcxjUGF0v9HM8fDbqOriaYG2Q/300?wx_fmt=png/0", "kf_id": 2001, "kf_nick": ""}, {"kf_account": "HD21_w1@test", "kf_headimgurl": "", "kf_id": 2003, "kf_nick": "xs"}, {"kf_account": "2yhU_@H0kh", "kf_headimgurl": "http://mmbiz.qpic.cn/mmbiz_jpg/70AOWquMz5FQcgcaLL2R6wT9fsuic8lptK88NTH1u6MbRicRbiaL2t5iacC6pEfEwcO15XaBOV7IRYVS32b8lGQpHg/300?wx_fmt=jpeg/0", "kf_id": 2004, "kf_nick": "xs"}, {"kf_account": "n5ghnL0c0_@ZJ81bDtlUSL3lEsRC8nGXfoQFufUwu", "kf_headimgurl": "", "kf_id": 2005, "kf_nick": "x212s"}, {"kf_account": "n5ghnL0c0_@21", "kf_headimgurl": "", "kf_id": 2006, "kf_nick": "213"}, {"kf_account": "n5ghnL0c0_@w", "kf_headimgurl": "", "kf_id": 2007, "kf_nick": ""}, {"kf_account": "n5ghnL0c0_@w2121", "kf_headimgurl": "", "kf_id": 2008, "kf_nick": "1"}, {"kf_account": "EK6iI97eN_@2izwrx5IWvfPHQrGMr57WAujazrpOz", "kf_headimgurl": "", "kf_id": 2009, "kf_nick": "pAaezgB1qQw2brQb"}, {"kf_account": "F2Fyr7v0O_@OGWBBEUtZyWe2Tr9iyhZOgYoWNEF0T", "kf_headimgurl": "", "kf_id": 2010, "kf_nick": ""}, {"kf_account": "QpAVaoy2k_@CzUkbY7xXqNto9o89zTLvM5oMxwC4R", "kf_headimgurl": "", "kf_id": 2011, "kf_nick": "JPI4jmVvk67MPnpB"}, {"kf_account": "5D2PKS4hP_@baaqpLLA7LFFqaZKe0MWVKxYKEQDWV", "kf_headimgurl": "", "kf_id": 2012, "kf_nick": ""}, {"kf_account": "dfHBJQenO_@9uNMF5JvFmnKzrvdvbJinRkOmXvKHM", "kf_headimgurl": "", "kf_id": 2013, "kf_nick": "T9y3DQuN8okYbc5V"}, {"kf_account": "xNTix4n9H_@iGor1NP9jIjPDJU8PL1Ytb4UFmGzCP", "kf_headimgurl": "", "kf_id": 2014, "kf_nick": ""}, {"kf_account": "ertvLaKhv_@KIwKFp5Lzji8odIwGx8t484suX8cJ6", "kf_headimgurl": "", "kf_id": 2015, "kf_nick": "8SW7MgAItqZ5VYYY"}, {"kf_account": "gFYGiILCI_@haHaBP5TRuNhibm8Le5LPXuPbhmmjc", "kf_headimgurl": "", "kf_id": 2017, "kf_nick": "N8UknHMi3NiLaeyb"}, {"kf_account": "wb3KlS2uP_@Qzr3IQPD9Do9WCXpsCopCn42Y6LotF", "kf_headimgurl": "", "kf_id": 2019, "kf_nick": "O3jzu6ZDXmBUTgrF"}, {"kf_account": "fxQoMrvSX_@LznktN8oMDr1aWjYp4S6OStFdfw1Lc", "kf_headimgurl": "", "kf_id": 2021, "kf_nick": "RcaGzGy89NSHLJVe"}, {"kf_account": "Siss95TKc_@Q4LU17KQwFWbTMIm5VzHxc44JbJWtK", "kf_headimgurl": "", "kf_id": 2023, "kf_nick": "89uEdc9rftB72Q8H"}, {"kf_account": "mzk3VJdUD_@p5GnPuQcFB8XRYBPKxhgaA17vw9Wps", "kf_headimgurl": "", "kf_id": 2025, "kf_nick": "yXTg131F7LjuqfdW"}, {"kf_account": "RQkmXST9h_@oKF1pe2W2FVWPMgYf92uSGsKpBko7J", "kf_headimgurl": "", "kf_id": 2027, "kf_nick": "NQCkOVLGtPvHsXs4"}, {"kf_account": "NRTw4x7YL_@hdYR4LuWEWJZ0iWoe4xQsNqC2IgoHi", "kf_headimgurl": "", "kf_id": 2029, "kf_nick": "o7GoTY46wcUR01xj"}, {"kf_account": "Sc0NwcNGk_@VEMEOZM7OcI5xki4zl8y3Hvt4VFg45", "kf_headimgurl": "", "kf_id": 2031, "kf_nick": "JT7VIs5Dh044GsQ5"}, {"kf_account": "wCy20qT7H_@45KjVBrI9EIEi4eNouGgCiEjiReqBd", "kf_headimgurl": "", "kf_id": 2033, "kf_nick": "bbvPpBF9ZYQGIYW3"}, {"kf_account": "qSnj5Ax5H_@qB4OcJMOHSIdnmlfTJY6h5o1XBiqme", "kf_headimgurl": "", "kf_id": 2035, "kf_nick": "r9vd7b0QCs328ZyF"}, {"kf_account": "wh9VL9sOF_@Qvh1zgSbujoV12kh9DMZfP8jc85uwJ", "kf_headimgurl": "", "kf_id": 2037, "kf_nick": "TrFoPT8NYAWjF2D6"}, {"kf_account": "adad@111", "kf_headimgurl": "http://mmbiz.qpic.cn/mmbiz_png/70AOWquMz5EWeRhjGXNe18aDevrLcE1WfdvvBNgHoLxVF4JqFrdsq03UicDgVW3Ir2mNpRKhMic4fem2BUWUYF8Q/300?wx_fmt=png/0", "kf_id": 2039, "kf_nick": "\u4e1c\u4e1c"}, {"kf_account": "Sandy12_@test", "kf_headimgurl": "", "kf_id": 2040, "kf_nick": "\u73ca\u8fea"}, {"kf_account": "Sandy666_@test", "kf_headimgurl": "", "kf_id": 2041, "kf_nick": "\u73ca\u8fea"}, {"kf_account": "Sedfsg@testetestetestetestetesteteste", "kf_headimgurl": "", "kf_id": 2042, "kf_nick": "\u73ca\u8fea"}, {"kf_account": "DC57zGQYE_@NB3wV7DnMYwQCeUEt96bRYvKRD0iAg", "kf_headimgurl": "", "kf_id": 2043, "kf_nick": "UCPmuKrrSmUv54AJ"}]}"}
{"CreateTime": "2024-05-16 12:27:53", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【上传客服头像接口】用例1：参数全部正确(jpeg格式)- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:27:53", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【上传客服头像接口】用例1：参数全部正确(jpeg格式)- 测试用例,执行成功！实际响应结果为：{'errcode': 0, 'errmsg': 'ok'}"}
{"CreateTime": "2024-05-16 12:27:53", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【上传客服头像接口】用例1：参数全部正确(jpeg格式)- 测试用例,执行成功！实际响应结果为：{"errcode": 0, "errmsg": "ok"}"}
{"CreateTime": "2024-05-16 12:27:56", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【上传客服头像接口】用例2：头像size超过限制大小- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:27:56", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【上传客服头像接口】用例2：头像size超过限制大小- 测试用例,执行成功！实际响应结果为：{'errcode': 45002, 'errmsg': 'content size out of limit rid: 66458b4a-7b3aecd0-5b2fa908'}"}
{"CreateTime": "2024-05-16 12:27:56", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【上传客服头像接口】用例2：头像size超过限制大小- 测试用例,执行成功！实际响应结果为：{"errcode": 45002, "errmsg": "content size out of limit rid: 66458b4a-7b3aecd0-5b2fa908"}"}
{"CreateTime": "2024-05-16 12:27:57", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【上传客服头像接口】用例3：参数全部正确(png格式)- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:27:57", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【上传客服头像接口】用例3：参数全部正确(png格式)- 测试用例,执行成功！实际响应结果为：{'errcode': 0, 'errmsg': 'ok'}"}
{"CreateTime": "2024-05-16 12:27:57", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【上传客服头像接口】用例3：参数全部正确(png格式)- 测试用例,执行成功！实际响应结果为：{"errcode": 0, "errmsg": "ok"}"}
{"CreateTime": "2024-05-16 12:27:57", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【上传客服头像接口】用例4：头像上传为空- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:27:57", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【上传客服头像接口】用例4：头像上传为空- 测试用例,执行成功！实际响应结果为：{'errcode': 41005, 'errmsg': 'media data missing hint: [nFHcwXore-6] rid: 66458b4d-5a3f44e6-3d70e5b3'}"}
{"CreateTime": "2024-05-16 12:27:57", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【上传客服头像接口】用例4：头像上传为空- 测试用例,执行成功！实际响应结果为：{"errcode": 41005, "errmsg": "media data missing hint: [nFHcwXore-6] rid: 66458b4d-5a3f44e6-3d70e5b3"}"}
{"CreateTime": "2024-05-16 12:27:57", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【上传客服头像接口】用例5：头像上传格式错误（不支持的媒体类型）- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:27:57", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【上传客服头像接口】用例5：头像上传格式错误（不支持的媒体类型）- 测试用例,执行成功！实际响应结果为：{'errcode': 40005, 'errmsg': 'invalid file type hint: [nFHcR0I2e-VjuVka] rid: 66458b4d-0b731ed5-7fc3092d'}"}
{"CreateTime": "2024-05-16 12:27:57", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【上传客服头像接口】用例5：头像上传格式错误（不支持的媒体类型）- 测试用例,执行成功！实际响应结果为：{"errcode": 40005, "errmsg": "invalid file type hint: [nFHcR0I2e-VjuVka] rid: 66458b4d-0b731ed5-7fc3092d"}"}
{"CreateTime": "2024-05-16 12:27:58", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【上传客服头像接口】用例6：无效的客服账号- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:27:58", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【上传客服头像接口】用例6：无效的客服账号- 测试用例,执行成功！实际响应结果为：{'errcode': 65401, 'errmsg': 'invalid custom service account hint: [nFHcwXore-CjZODa] rid: 66458b4e-01d5987b-753abb50'}"}
{"CreateTime": "2024-05-16 12:27:58", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【上传客服头像接口】用例6：无效的客服账号- 测试用例,执行成功！实际响应结果为：{"errcode": 65401, "errmsg": "invalid custom service account hint: [nFHcwXore-CjZODa] rid: 66458b4e-01d5987b-753abb50"}"}
{"CreateTime": "2024-05-16 12:27:58", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【获取鉴权接口】用例1：grant_type参数为空/缺失- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:27:58", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【获取鉴权接口】用例1：grant_type参数为空/缺失- 测试用例,执行成功！实际响应结果为：{'errcode': 40002, 'errmsg': 'invalid grant_type rid: 66458b4e-02f6232f-65477162'}"}
{"CreateTime": "2024-05-16 12:27:59", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【获取鉴权接口】用例2：grant_type参数错误- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:27:59", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【获取鉴权接口】用例2：grant_type参数错误- 测试用例,执行成功！实际响应结果为：{'errcode': 40002, 'errmsg': 'invalid grant_type rid: 66458b4f-4e418482-3c1d8e8f'}"}
{"CreateTime": "2024-05-16 12:27:59", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【获取鉴权接口】用例3：appid参数为空/缺失- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:27:59", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【获取鉴权接口】用例3：appid参数为空/缺失- 测试用例,执行成功！实际响应结果为：{'errcode': 41002, 'errmsg': 'appid missing rid: 66458b4f-668abe3d-7024412c'}"}
{"CreateTime": "2024-05-16 12:27:59", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【获取鉴权接口】用例4：appid参数错误- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:27:59", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【获取鉴权接口】用例4：appid参数错误- 测试用例,执行成功！实际响应结果为：{'errcode': 40013, 'errmsg': 'invalid appid rid: 66458b4f-2f227dc5-0e692462'}"}
{"CreateTime": "2024-05-16 12:27:59", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【获取鉴权接口】用例5：secret参数为空/缺失- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:27:59", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【获取鉴权接口】用例5：secret参数为空/缺失- 测试用例,执行成功！实际响应结果为：{'errcode': 41004, 'errmsg': 'appsecret missing rid: 66458b4f-2b8759d9-467ef0f2'}"}
{"CreateTime": "2024-05-16 12:28:00", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【获取鉴权接口】用例6：secret参数错误- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:28:00", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【获取鉴权接口】用例6：secret参数错误- 测试用例,执行成功！实际响应结果为：{'errcode': 40125, 'errmsg': 'invalid appsecret rid: 66458b50-60bea0da-54edf7ca'}"}
{"CreateTime": "2024-05-16 12:28:00", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【获取鉴权接口】用例7：所有参数正确- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:28:00", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【获取鉴权接口】用例7：所有参数正确- 测试用例,执行成功！实际响应结果为：{'access_token': '80_KWRhKYZflK7fyaRvS1BMCzf2OGL5xIOJbcw_UC595JLbxxi9gBJXfUw1gdqHX9TW9cXkTHmu14Zd48pK7EHHtzJLSGPb0poXdmEfsB1KFYpJiIHO5m6ijCU8m-wLBUeADAOEX', 'expires_in': 7200}"}
{"CreateTime": "2024-05-16 12:28:01", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【创建永久二维码ticket接口】用例1：参数全部正确- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:28:01", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【创建永久二维码ticket接口】用例1：参数全部正确- 测试用例,执行成功！实际响应结果为：{"ticket": "gQGK8DwAAAAAAAAAAS5odHRwOi8vd2VpeGluLnFxLmNvbS9xLzAyaEduZHcwZUVmb0QxMDAwMHcwM2IAAgRRi0VmAwQAAAAA", "url": "http://weixin.qq.com/q/02hGndw0eEfoD10000w03b"}"}
{"CreateTime": "2024-05-16 12:28:01", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【创建永久二维码ticket接口】用例1：参数全部正确- 测试用例,执行成功！实际响应结果为：{"ticket": "gQGK8DwAAAAAAAAAAS5odHRwOi8vd2VpeGluLnFxLmNvbS9xLzAyaEduZHcwZUVmb0QxMDAwMHcwM2IAAgRRi0VmAwQAAAAA", "url": "http://weixin.qq.com/q/02hGndw0eEfoD10000w03b"}"}
{"CreateTime": "2024-05-16 12:28:01", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【通过ticket换取二维码接口】用例1：参数全部正确- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:28:02", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "用例1：参数全部正确(多个用户)- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:28:02", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "用例1：参数全部正确(多个用户)- 测试用例,执行成功！实际响应结果为：{"user_info_list": [{"subscribe": 1, "openid": "oDqjY5xYp972631jH7IsDR3pl2x0", "nickname": "", "sex": 0, "language": "zh_CN", "city": "", "province": "", "country": "", "headimgurl": "", "subscribe_time": 1642564111, "remark": "t9rO72MhpUWE3AgB4ZSjAXzeKSY3Hq", "groupid": 0, "tagid_list": [], "subscribe_scene": "ADD_SCENE_QR_CODE", "qr_scene": 0, "qr_scene_str": ""}, {"subscribe": 1, "openid": "oDqjY50sO3UCivurTfvnATmCMuN0", "nickname": "", "sex": 0, "language": "zh_CN", "city": "", "province": "", "country": "", "headimgurl": "", "subscribe_time": 1642558819, "remark": "hq7olqs2hrH178OjZfLoHWubWnx5cp", "groupid": 2, "tagid_list": [2], "subscribe_scene": "ADD_SCENE_QR_CODE", "qr_scene": 0, "qr_scene_str": ""}]}"}
{"CreateTime": "2024-05-16 12:28:02", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "用例1：参数全部正确(多个用户)- 测试用例,执行成功！实际响应结果为：{"user_info_list": [{"subscribe": 1, "openid": "oDqjY5xYp972631jH7IsDR3pl2x0", "nickname": "", "sex": 0, "language": "zh_CN", "city": "", "province": "", "country": "", "headimgurl": "", "subscribe_time": 1642564111, "remark": "t9rO72MhpUWE3AgB4ZSjAXzeKSY3Hq", "groupid": 0, "tagid_list": [], "subscribe_scene": "ADD_SCENE_QR_CODE", "qr_scene": 0, "qr_scene_str": ""}, {"subscribe": 1, "openid": "oDqjY50sO3UCivurTfvnATmCMuN0", "nickname": "", "sex": 0, "language": "zh_CN", "city": "", "province": "", "country": "", "headimgurl": "", "subscribe_time": 1642558819, "remark": "hq7olqs2hrH178OjZfLoHWubWnx5cp", "groupid": 2, "tagid_list": [2], "subscribe_scene": "ADD_SCENE_QR_CODE", "qr_scene": 0, "qr_scene_str": ""}]}"}
{"CreateTime": "2024-05-16 12:28:02", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "用例2：参数全部正确(单个用户)- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:28:02", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "用例2：参数全部正确(单个用户)- 测试用例,执行成功！实际响应结果为：{"user_info_list": [{"subscribe": 1, "openid": "oDqjY5xYp972631jH7IsDR3pl2x0", "nickname": "", "sex": 0, "language": "zh_CN", "city": "", "province": "", "country": "", "headimgurl": "", "subscribe_time": 1642564111, "remark": "t9rO72MhpUWE3AgB4ZSjAXzeKSY3Hq", "groupid": 0, "tagid_list": [], "subscribe_scene": "ADD_SCENE_QR_CODE", "qr_scene": 0, "qr_scene_str": ""}]}"}
{"CreateTime": "2024-05-16 12:28:02", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "用例2：参数全部正确(单个用户)- 测试用例,执行成功！实际响应结果为：{"user_info_list": [{"subscribe": 1, "openid": "oDqjY5xYp972631jH7IsDR3pl2x0", "nickname": "", "sex": 0, "language": "zh_CN", "city": "", "province": "", "country": "", "headimgurl": "", "subscribe_time": 1642564111, "remark": "t9rO72MhpUWE3AgB4ZSjAXzeKSY3Hq", "groupid": 0, "tagid_list": [], "subscribe_scene": "ADD_SCENE_QR_CODE", "qr_scene": 0, "qr_scene_str": ""}]}"}
{"CreateTime": "2024-05-16 12:28:03", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "用例3：存在单个无效的openid- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:28:03", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "用例3：存在单个无效的openid- 测试用例,执行成功！实际响应结果为：{'errcode': 40003, 'errmsg': 'invalid openid hint: [NFHc6BsQf-eq4vmA] rid: 66458b52-44230b0f-6e92d068'}"}
{"CreateTime": "2024-05-16 12:28:03", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "用例3：存在单个无效的openid- 测试用例,执行成功！实际响应结果为：{"errcode": 40003, "errmsg": "invalid openid hint: [NFHc6BsQf-eq4vmA] rid: 66458b52-44230b0f-6e92d068"}"}
{"CreateTime": "2024-05-16 12:28:03", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "用例4：存在多个无效的openid- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:28:03", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "用例4：存在多个无效的openid- 测试用例,执行成功！实际响应结果为：{'errcode': 40003, 'errmsg': 'invalid openid hint: [NFHc1Bmre-ynDHqa] rid: 66458b53-3d9169f0-5d7c3c3e'}"}
{"CreateTime": "2024-05-16 12:28:03", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "用例4：存在多个无效的openid- 测试用例,执行成功！实际响应结果为：{"errcode": 40003, "errmsg": "invalid openid hint: [NFHc1Bmre-ynDHqa] rid: 66458b53-3d9169f0-5d7c3c3e"}"}
{"CreateTime": "2024-05-16 12:28:03", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "用例5：empty post data- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:28:03", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "用例5：empty post data- 测试用例,执行成功！实际响应结果为：{'errcode': 44002, 'errmsg': 'empty post data hint: [NFHcJryWf-NO0yGa] rid: 66458b53-451c3258-66906953'}"}
{"CreateTime": "2024-05-16 12:28:03", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "用例5：empty post data- 测试用例,执行成功！实际响应结果为：{"errcode": 44002, "errmsg": "empty post data hint: [NFHcJryWf-NO0yGa] rid: 66458b53-451c3258-66906953"}"}
{"CreateTime": "2024-05-16 12:28:04", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "用例1：参数openid存在- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:28:04", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "用例1：参数openid存在- 测试用例,执行成功！实际响应结果为：{'subscribe': 1, 'openid': 'oDqjY5xYp972631jH7IsDR3pl2x0', 'nickname': '', 'sex': 0, 'language': 'zh_CN', 'city': '', 'province': '', 'country': '', 'headimgurl': '', 'subscribe_time': 1642564111, 'remark': 't9rO72MhpUWE3AgB4ZSjAXzeKSY3Hq', 'groupid': 0, 'tagid_list': [], 'subscribe_scene': 'ADD_SCENE_QR_CODE', 'qr_scene': 0, 'qr_scene_str': ''}"}
{"CreateTime": "2024-05-16 12:28:04", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "用例1：参数openid存在- 测试用例,执行成功！实际响应结果为：{'subscribe': 1, 'openid': 'oDqjY5xYp972631jH7IsDR3pl2x0', 'nickname': '', 'sex': 0, 'language': 'zh_CN', 'city': '', 'province': '', 'country': '', 'headimgurl': '', 'subscribe_time': 1642564111, 'remark': 't9rO72MhpUWE3AgB4ZSjAXzeKSY3Hq', 'groupid': 0, 'tagid_list': [], 'subscribe_scene': 'ADD_SCENE_QR_CODE', 'qr_scene': 0, 'qr_scene_str': ''}"}
{"CreateTime": "2024-05-16 12:28:04", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "用例2：openid参数无效- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:28:04", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "用例2：openid参数无效- 测试用例,执行成功！实际响应结果为：{'errcode': 40003, 'errmsg': 'invalid openid hint: [NFHcA9sQf-M8dhEA] rid: 66458b54-30c4cb8a-59877f84'}"}
{"CreateTime": "2024-05-16 12:28:04", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "用例2：openid参数无效- 测试用例,执行成功！实际响应结果为：{"errcode": 40003, "errmsg": "invalid openid hint: [NFHcA9sQf-M8dhEA] rid: 66458b54-30c4cb8a-59877f84"}"}
{"CreateTime": "2024-05-16 12:28:05", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "用例3：openid为null- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:28:05", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "用例3：openid为null- 测试用例,执行成功！实际响应结果为：{'errcode': 40003, 'errmsg': 'invalid openid hint: [NFHcb9sQf-5Tnj6] rid: 66458b55-290f7ac1-59b2d690'}"}
{"CreateTime": "2024-05-16 12:28:05", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "用例3：openid为null- 测试用例,执行成功！实际响应结果为：{"errcode": 40003, "errmsg": "invalid openid hint: [NFHcb9sQf-5Tnj6] rid: 66458b55-290f7ac1-59b2d690"}"}
{"CreateTime": "2024-05-16 12:28:05", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "用例4：openid为空- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:28:05", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "用例4：openid为空- 测试用例,执行成功！实际响应结果为：{'errcode': 40003, 'errmsg': 'invalid openid hint: [NFHcB9sQf-JFqk3] rid: 66458b55-710160d3-056f891a'}"}
{"CreateTime": "2024-05-16 12:28:05", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "用例4：openid为空- 测试用例,执行成功！实际响应结果为：{"errcode": 40003, "errmsg": "invalid openid hint: [NFHcB9sQf-JFqk3] rid: 66458b55-710160d3-056f891a"}"}
{"CreateTime": "2024-05-16 12:28:05", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【获取用户列表接口】用例1：所有参数正常- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:28:05", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【获取用户列表接口】用例1：所有参数正常- 测试用例,执行成功！实际响应结果为：{"total": 4, "count": 4, "data": {"openid": ["oDqjY5zgUEgHwL0Tas7HJv566208", "oDqjY5xYp972631jH7IsDR3pl2x0", "oDqjY5-wrnuyN9OBXaN0md8rLsyQ", "oDqjY50sO3UCivurTfvnATmCMuN0"]}, "next_openid": "oDqjY50sO3UCivurTfvnATmCMuN0"}"}
{"CreateTime": "2024-05-16 12:28:05", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【获取用户列表接口】用例1：所有参数正常- 测试用例,执行成功！实际响应结果为：{"total": 4, "count": 4, "data": {"openid": ["oDqjY5zgUEgHwL0Tas7HJv566208", "oDqjY5xYp972631jH7IsDR3pl2x0", "oDqjY5-wrnuyN9OBXaN0md8rLsyQ", "oDqjY50sO3UCivurTfvnATmCMuN0"]}, "next_openid": "oDqjY50sO3UCivurTfvnATmCMuN0"}"}
{"CreateTime": "2024-05-16 12:28:05", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【获取用户列表接口】用例1：所有参数正常- 测试用例,执行成功！实际响应结果为：{"total": 4, "count": 4, "data": {"openid": ["oDqjY5zgUEgHwL0Tas7HJv566208", "oDqjY5xYp972631jH7IsDR3pl2x0", "oDqjY5-wrnuyN9OBXaN0md8rLsyQ", "oDqjY50sO3UCivurTfvnATmCMuN0"]}, "next_openid": "oDqjY50sO3UCivurTfvnATmCMuN0"}"}
{"CreateTime": "2024-05-16 12:28:06", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【获取用户列表接口】用例2：next_openid无效为数字，参数无效- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:28:06", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【获取用户列表接口】用例2：next_openid无效为数字，参数无效- 测试用例,执行成功！实际响应结果为：{'errcode': 40003, 'errmsg': 'invalid openid hint: [NFHcDe3Dk-48D3EA] rid: 66458b56-51d1b533-709b53e8'}"}
{"CreateTime": "2024-05-16 12:28:06", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【获取用户列表接口】用例2：next_openid无效为数字，参数无效- 测试用例,执行成功！实际响应结果为：{"errcode": 40003, "errmsg": "invalid openid hint: [NFHcDe3Dk-48D3EA] rid: 66458b56-51d1b533-709b53e8"}"}
{"CreateTime": "2024-05-16 12:28:06", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【获取用户列表接口】用例3：next_openid为大小写字母，参数无效- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:28:06", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【获取用户列表接口】用例3：next_openid为大小写字母，参数无效- 测试用例,执行成功！实际响应结果为：{'errcode': 40003, 'errmsg': 'invalid openid hint: [NFHcFBeVf-kIpC4] rid: 66458b56-5c85949d-3a48abd2'}"}
{"CreateTime": "2024-05-16 12:28:06", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【获取用户列表接口】用例3：next_openid为大小写字母，参数无效- 测试用例,执行成功！实际响应结果为：{"errcode": 40003, "errmsg": "invalid openid hint: [NFHcFBeVf-kIpC4] rid: 66458b56-5c85949d-3a48abd2"}"}
{"CreateTime": "2024-05-16 12:28:07", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【设置用户备注名接口】用例1：所有参数正常- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:28:07", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【设置用户备注名接口】用例1：所有参数正常- 测试用例,执行成功！实际响应结果为：{'errcode': 0, 'errmsg': 'ok'}"}
{"CreateTime": "2024-05-16 12:28:07", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【设置用户备注名接口】用例1：所有参数正常- 测试用例,执行成功！实际响应结果为：{"errcode": 0, "errmsg": "ok"}"}
{"CreateTime": "2024-05-16 12:28:07", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【设置用户备注名接口】用例2：openid参数为空- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:28:07", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【设置用户备注名接口】用例2：openid参数为空- 测试用例,执行成功！实际响应结果为：{'errcode': 40003, 'errmsg': 'invalid openid hint: [NFHchBeVf-ykLbxa] rid: 66458b57-64ad1013-2d0294cd'}"}
{"CreateTime": "2024-05-16 12:28:07", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【设置用户备注名接口】用例2：openid参数为空- 测试用例,执行成功！实际响应结果为：{"errcode": 40003, "errmsg": "invalid openid hint: [NFHchBeVf-ykLbxa] rid: 66458b57-64ad1013-2d0294cd"}"}
{"CreateTime": "2024-05-16 12:28:07", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【设置用户备注名接口】用例3：openid参数不符合规则- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:28:07", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【设置用户备注名接口】用例3：openid参数不符合规则- 测试用例,执行成功！实际响应结果为：{'errcode': 40003, 'errmsg': 'invalid openid hint: [NFHcNXnre-3H5dNA] rid: 66458b57-648c44d2-1eb75997'}"}
{"CreateTime": "2024-05-16 12:28:07", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【设置用户备注名接口】用例3：openid参数不符合规则- 测试用例,执行成功！实际响应结果为：{"errcode": 40003, "errmsg": "invalid openid hint: [NFHcNXnre-3H5dNA] rid: 66458b57-648c44d2-1eb75997"}"}
{"CreateTime": "2024-05-16 12:28:08", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【设置用户备注名接口】用例4：remark参数为空- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:28:08", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【设置用户备注名接口】用例4：remark参数为空- 测试用例,执行成功！实际响应结果为：{'errcode': 0, 'errmsg': 'ok'}"}
{"CreateTime": "2024-05-16 12:28:08", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【设置用户备注名接口】用例4：remark参数为空- 测试用例,执行成功！实际响应结果为：{"errcode": 0, "errmsg": "ok"}"}
{"CreateTime": "2024-05-16 12:28:08", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【设置用户备注名接口】用例5：openid不存在/没注册- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:28:08", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【设置用户备注名接口】用例5：openid不存在/没注册- 测试用例,执行成功！实际响应结果为：{'errcode': 43004, 'errmsg': 'require subscribe hint: [NFHc7BsQf-.IjHSa] rid: 66458b58-6fc8b64c-15b42729'}"}
{"CreateTime": "2024-05-16 12:28:08", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【设置用户备注名接口】用例5：openid不存在/没注册- 测试用例,执行成功！实际响应结果为：{"errcode": 43004, "errmsg": "require subscribe hint: [NFHc7BsQf-.IjHSa] rid: 66458b58-6fc8b64c-15b42729"}"}
{"CreateTime": "2024-05-16 12:28:08", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【创建用户标签接口】用例1：参数全部正确- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:28:09", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【创建用户标签接口】用例2：参数name为""- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:28:09", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【创建用户标签接口】用例2：参数name为""- 测试用例,执行成功！实际响应结果为：{'errcode': 45157, 'errmsg': 'invalid tag name hint: [NFHc7BsQf-f8UzWa] rid: 66458b59-33794a82-17cce37f'}"}
{"CreateTime": "2024-05-16 12:28:09", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【创建用户标签接口】用例2：参数name为""- 测试用例,执行成功！实际响应结果为：{"errcode": 45157, "errmsg": "invalid tag name hint: [NFHc7BsQf-f8UzWa] rid: 66458b59-33794a82-17cce37f"}"}
{"CreateTime": "2024-05-16 12:28:10", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【创建用户标签接口】用例3：参数name已存在- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:28:10", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【创建用户标签接口】用例3：参数name已存在- 测试用例,执行成功！实际响应结果为：{'errcode': 45157, 'errmsg': 'invalid tag name hint: [NFHc6BsQf-Y2jXxa] rid: 66458b59-6ee8bef3-5dd02cda'}"}
{"CreateTime": "2024-05-16 12:28:10", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【创建用户标签接口】用例3：参数name已存在- 测试用例,执行成功！实际响应结果为：{"errcode": 45157, "errmsg": "invalid tag name hint: [NFHc6BsQf-Y2jXxa] rid: 66458b59-6ee8bef3-5dd02cda"}"}
{"CreateTime": "2024-05-16 12:28:10", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【创建用户标签接口】用例4：参数name为null- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:28:10", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【创建用户标签接口】用例4：参数name为null- 测试用例,执行成功！实际响应结果为：{'errcode': 45157, 'errmsg': 'invalid tag name hint: [NFHc9Uj2e-90W73a] rid: 66458b5a-5033a215-7f80528c'}"}
{"CreateTime": "2024-05-16 12:28:10", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【创建用户标签接口】用例4：参数name为null- 测试用例,执行成功！实际响应结果为：{"errcode": 45157, "errmsg": "invalid tag name hint: [NFHc9Uj2e-90W73a] rid: 66458b5a-5033a215-7f80528c"}"}
{"CreateTime": "2024-05-16 12:28:10", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【创建用户标签接口】用例5：参数name超过30个字节- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:28:10", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【创建用户标签接口】用例5：参数name超过30个字节- 测试用例,执行成功！实际响应结果为：{'errcode': 45158, 'errmsg': 'tag name too long hint: [NFHcmi5rf-_IvSRA] rid: 66458b5a-26c88b3b-3ac51ec5'}"}
{"CreateTime": "2024-05-16 12:28:10", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【创建用户标签接口】用例5：参数name超过30个字节- 测试用例,执行成功！实际响应结果为：{"errcode": 45158, "errmsg": "tag name too long hint: [NFHcmi5rf-_IvSRA] rid: 66458b5a-26c88b3b-3ac51ec5"}"}
{"CreateTime": "2024-05-16 12:28:11", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【创建用户标签接口】用例6：请求body缺失- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:28:11", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【创建用户标签接口】用例6：请求body缺失- 测试用例,执行成功！实际响应结果为：{'errcode': 44002, 'errmsg': 'empty post data hint: [NFHcmi5rf-7mPfOa] rid: 66458b5b-14c51bf2-5ee54787'}"}
{"CreateTime": "2024-05-16 12:28:11", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【创建用户标签接口】用例6：请求body缺失- 测试用例,执行成功！实际响应结果为：{"errcode": 44002, "errmsg": "empty post data hint: [NFHcmi5rf-7mPfOa] rid: 66458b5b-14c51bf2-5ee54787"}"}
{"CreateTime": "2024-05-16 12:28:11", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【删除用户标签接口】用例1：全部参数正确- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:28:11", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【删除用户标签接口】用例1：全部参数正确- 测试用例,执行成功！实际响应结果为：{'errcode': 0, 'errmsg': 'ok'}"}
{"CreateTime": "2024-05-16 12:28:11", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【删除用户标签接口】用例1：全部参数正确- 测试用例,执行成功！实际响应结果为：{"errcode": 0, "errmsg": "ok"}"}
{"CreateTime": "2024-05-16 12:28:11", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【删除用户标签接口】用例2：删除用户标签-id参数为空/缺失- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:28:11", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【删除用户标签接口】用例2：删除用户标签-id参数为空/缺失- 测试用例,执行成功！实际响应结果为：{'errcode': 45058, 'errmsg': "can't modify sys tag hint: [NFHcFBeVf-f0ll] rid: 66458b5b-56781ece-38f604dd"}"}
{"CreateTime": "2024-05-16 12:28:11", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【删除用户标签接口】用例2：删除用户标签-id参数为空/缺失- 测试用例,执行成功！实际响应结果为：{"errcode": 45058, "errmsg": "can't modify sys tag hint: [NFHcFBeVf-f0ll] rid: 66458b5b-56781ece-38f604dd"}"}
{"CreateTime": "2024-05-16 12:28:12", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【删除用户标签接口】用例3：删除用户标签-参数id为小数- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:28:12", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【删除用户标签接口】用例3：删除用户标签-参数id为小数- 测试用例,执行成功！实际响应结果为：{'errcode': 47001, 'errmsg': 'data format error hint: [NFHcNqDVf-_GkNsA] rid: 66458b5c-49becaeb-6f8014fa'}"}
{"CreateTime": "2024-05-16 12:28:12", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【删除用户标签接口】用例3：删除用户标签-参数id为小数- 测试用例,执行成功！实际响应结果为：{"errcode": 47001, "errmsg": "data format error hint: [NFHcNqDVf-_GkNsA] rid: 66458b5c-49becaeb-6f8014fa"}"}
{"CreateTime": "2024-05-16 12:28:12", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【删除用户标签接口】用例4：删除用户标签-参数id为中文汉字- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:28:12", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【删除用户标签接口】用例4：删除用户标签-参数id为中文汉字- 测试用例,执行成功！实际响应结果为：{'errcode': 47001, 'errmsg': 'data format error hint: [NFHc1u5Vf-jf0vKa] rid: 66458b5c-743ad284-22dde732'}"}
{"CreateTime": "2024-05-16 12:28:12", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【删除用户标签接口】用例4：删除用户标签-参数id为中文汉字- 测试用例,执行成功！实际响应结果为：{"errcode": 47001, "errmsg": "data format error hint: [NFHc1u5Vf-jf0vKa] rid: 66458b5c-743ad284-22dde732"}"}
{"CreateTime": "2024-05-16 12:28:13", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【删除用户标签接口】用例5：删除用户标签-参数id含特殊符号- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:28:13", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【删除用户标签接口】用例5：删除用户标签-参数id含特殊符号- 测试用例,执行成功！实际响应结果为：{'errcode': 47001, 'errmsg': 'data format error hint: [NFHc7BsQf-AygTPa] rid: 66458b5c-56ad015f-110fedcd'}"}
{"CreateTime": "2024-05-16 12:28:13", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【删除用户标签接口】用例5：删除用户标签-参数id含特殊符号- 测试用例,执行成功！实际响应结果为：{"errcode": 47001, "errmsg": "data format error hint: [NFHc7BsQf-AygTPa] rid: 66458b5c-56ad015f-110fedcd"}"}
{"CreateTime": "2024-05-16 12:28:13", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【删除用户标签接口】用例6：删除用户标签-参数id为系统id=1- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:28:13", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【删除用户标签接口】用例6：删除用户标签-参数id为系统id=1- 测试用例,执行成功！实际响应结果为：{'errcode': 45058, 'errmsg': "can't modify sys tag hint: [NFHcB9sQf-z] rid: 66458b5d-496b9984-3f793a1f"}"}
{"CreateTime": "2024-05-16 12:28:13", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【删除用户标签接口】用例6：删除用户标签-参数id为系统id=1- 测试用例,执行成功！实际响应结果为：{"errcode": 45058, "errmsg": "can't modify sys tag hint: [NFHcB9sQf-z] rid: 66458b5d-496b9984-3f793a1f"}"}
{"CreateTime": "2024-05-16 12:28:13", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【删除用户标签接口】用例7：删除用户标签-参数id为系统id=2- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:28:13", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【删除用户标签接口】用例7：删除用户标签-参数id为系统id=2- 测试用例,执行成功！实际响应结果为：{'errcode': 45058, 'errmsg': "can't modify sys tag hint: [NFHcevj2e-] rid: 66458b5d-73969c23-5c677830"}"}
{"CreateTime": "2024-05-16 12:28:13", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【删除用户标签接口】用例7：删除用户标签-参数id为系统id=2- 测试用例,执行成功！实际响应结果为：{"errcode": 45058, "errmsg": "can't modify sys tag hint: [NFHcevj2e-] rid: 66458b5d-73969c23-5c677830"}"}
{"CreateTime": "2024-05-16 12:28:14", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【删除用户标签接口】用例8：删除用户标签-参数id为系统id=3- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:28:14", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【删除用户标签接口】用例8：删除用户标签-参数id为系统id=3- 测试用例,执行成功！实际响应结果为：{'errcode': 45058, 'errmsg': "can't modify sys tag hint: [NFHcx0mre-Ojfnia] rid: 66458b5e-7aed85ac-6fd87231"}"}
{"CreateTime": "2024-05-16 12:28:14", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【删除用户标签接口】用例8：删除用户标签-参数id为系统id=3- 测试用例,执行成功！实际响应结果为：{"errcode": 45058, "errmsg": "can't modify sys tag hint: [NFHcx0mre-Ojfnia] rid: 66458b5e-7aed85ac-6fd87231"}"}
{"CreateTime": "2024-05-16 12:28:14", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【获取标签下粉丝列表】用例1：参数正确- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:28:14", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【获取标签下粉丝列表】用例1：参数正确- 测试用例,执行成功！实际响应结果为：{"count": 0}"}
{"CreateTime": "2024-05-16 12:28:15", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【获取标签下粉丝列表】用例2：next_openid非法- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:28:15", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【获取标签下粉丝列表】用例2：next_openid非法- 测试用例,执行成功！实际响应结果为：{'errcode': 40003, 'errmsg': 'invalid openid hint: [NFHcnE6Vf-ewKgwa] rid: 66458b5f-1a5dc9af-582a2288'}"}
{"CreateTime": "2024-05-16 12:28:15", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【获取标签下粉丝列表】用例2：next_openid非法- 测试用例,执行成功！实际响应结果为：{"errcode": 40003, "errmsg": "invalid openid hint: [NFHcnE6Vf-ewKgwa] rid: 66458b5f-1a5dc9af-582a2288"}"}
{"CreateTime": "2024-05-16 12:28:15", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【查询用户标签接口】用例3：参数正确- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:28:15", "filename": "Assert.py", "line": "37", "levelname": "ERROR", "message": "【查询用户标签接口】用例3：参数正确,执行失败！实际响应结果中不包含：星标组,实际结果为：{"tags": [{"id": 2, "name": "\u661f\u6807\u7ec4", "count": 2}, {"id": 437, "name": "6NAhh", "count": 0}, {"id": 446, "name": "bM345i0jia4mn6fPBFmJ7QGWmik9ys", "count": 0}, {"id": 465, "name": "n6xrg4uVm6ZyjxX", "count": 0}, {"id": 468, "name": "R2rhh", "count": 0}, {"id": 470, "name": "yAClJCq5BO", "count": 0}, {"id": 472, "name": "cou", "count": 0}, {"id": 474, "name": "3V8tlE59Z73VJbpGd4zdSpSmCraytu", "count": 0}, {"id": 486, "name": "5taiTDi6PU", "count": 0}, {"id": 488, "name": "zKZ", "count": 0}, {"id": 490, "name": "jR9Df4fkbkq4gf4nwJbiwrXeas57iy", "count": 0}, {"id": 491, "name": "95ZUQ4WY9IAeJ8W99A0D0DGY5Na1il", "count": 0}, {"id": 492, "name": "7GvOUrahheyigFU8F45tvPRN3Hsye6", "count": 0}, {"id": 493, "name": "SG2nTcPQeD203TVekOm87Gh8TxmYjR", "count": 0}, {"id": 495, "name": "hAv9W0afjYtjJiUz1CrjTGY2GaSrF1", "count": 0}, {"id": 496, "name": "EdPYsrH0IokQ52mwAjE6wKPxrlmOJB", "count": 0}, {"id": 499, "name": "SWh", "count": 0}, {"id": 500, "name": "7Kg77VxZ8qvCJs9V3XCrAxx2qGf10j", "count": 0}, {"id": 504, "name": "ZHI8jJBWVA", "count": 0}, {"id": 505, "name": "pFbk63LnZROpxaC3teRnGr6hnF1A0X", "count": 0}, {"id": 513, "name": "bsMnFvqzjwHv8eAMn3zdCNFF3BHvHX", "count": 0}, {"id": 514, "name": "i1NNAL4x250fug3pMnnvkpCKo8oqcs", "count": 0}, {"id": 515, "name": "PAudcEW0E9O0BxGZa51SiWEo6YXWL6", "count": 0}, {"id": 521, "name": "JMqtbffAbpsQmRxqA7FnyHPK0LZw9P", "count": 0}, {"id": 522, "name": "o242uUPw6iB5Vxk", "count": 0}, {"id": 542, "name": "QLaAf5luC5", "count": 0}, {"id": 544, "name": "HiCKilj71o", "count": 0}, {"id": 546, "name": "Z70qOCMcDk", "count": 0}, {"id": 547, "name": "UoFhyMgYNCXzGeb", "count": 0}, {"id": 548, "name": "\u8c22\u8c22", "count": 0}, {"id": 549, "name": "\u6d0b", "count": 0}, {"id": 550, "name": "PFup9bvvmvQ8qYbWEDG8dNwKkGbZqo", "count": 0}, {"id": 552, "name": "4o1LyLAi1ark0xrQ0fHsischKdLILu", "count": 0}, {"id": 554, "name": "\u5443\u5443\u5443", "count": 0}, {"id": 558, "name": "loEFtyTss3gAbDymORoeZxraga0l3V", "count": 0}, {"id": 569, "name": "weropw12345w", "count": 0}, {"id": 572, "name": "qwertyuiop1234567890", "count": 0}, {"id": 573, "name": "fbyfQBpjnTFYlBegWSirKPw6HN3AKn", "count": 0}, {"id": 577, "name": "2", "count": 0}, {"id": 578, "name": "dsrxFKghzCIIAw4egyNVkhN7v5mCXW", "count": 0}, {"id": 594, "name": "12KuSGqGFmMmERM4ED4saeCa2JpLd5", "count": 0}, {"id": 596, "name": "0IxKqS5RvS6KqJvcXiacSmBfWYZcy9", "count": 0}, {"id": 611, "name": "MffEBaMtAtA2bbCianwNoeYOh5wjcX", "count": 0}, {"id": 613, "name": "rLjCQoa2ZLeR9bEPsfN8dUdZWCTs1u", "count": 0}, {"id": 614, "name": "GDWrRxkVPhntb0vufpz5x9DPnb4NZa", "count": 0}, {"id": 615, "name": "oOUf2aANYBxjd6gycfQ3XE7RUQkY43", "count": 0}, {"id": 616, "name": "k0lFAv5GZsWXLIZA3g04L1vrySdYy4", "count": 0}, {"id": 619, "name": "QqF1lPjIzEdngLerkRz5RLGZm8Z6RI", "count": 0}, {"id": 621, "name": "zrmSN17MnpYdNrVQSpKlFnoHoy8zfY", "count": 0}, {"id": 623, "name": "KxhWpIWY3GjMlRvOZ9QeRSQZQlq96u", "count": 0}, {"id": 624, "name": "B75gbgaKRwE5ef4oYtbp1epWeGrUtn", "count": 0}, {"id": 625, "name": "VNY7Y6CVR5g42etyZCq18tFCJuEsOV", "count": 0}, {"id": 638, "name": "eWMPPSr0WCAyKDocwnkkjaD91zGzS0", "count": 0}, {"id": 641, "name": "\u5e73", "count": 0}, {"id": 642, "name": "pPOBhuXaXJ8TJSw0QtHT8Q9l7hIM4a", "count": 0}, {"id": 646, "name": "FhtNjgTv55F32dsacC8nwZIJy7mrDU", "count": 0}, {"id": 683, "name": "fswiW52fvR4z6jcEDNzsECjBEWO1ut", "count": 0}, {"id": 684, "name": "ZZ6vKyWb19KjaMCstzXusW5lLASCXt", "count": 0}, {"id": 685, "name": "dd85EknZT3OqQaa3uy7ELan4dsW9Oa", "count": 0}, {"id": 688, "name": "DFYfugKDG1zX3Ug", "count": 0}, {"id": 689, "name": "W3NS31Fi5VruXBJ", "count": 0}, {"id": 690, "name": "SkRAVppAKtvhrigVrhfP3XKkpeIV44", "count": 0}, {"id": 696, "name": "nVtOWlny23Jy6xw0uqqtaSY1nPUKYd", "count": 0}, {"id": 697, "name": "yzrETGvUXXRb1Xr", "count": 0}, {"id": 698, "name": "DVBvzk7gBS4bb7Wz2zZD045hZbPWeC", "count": 0}, {"id": 713, "name": "RL5NmBSZP4jOWxHmGxa30IQAGh6VMD", "count": 0}, {"id": 714, "name": "zSzk31Xitm5AiWJYZI86RO763dxXaz", "count": 0}, {"id": 715, "name": "P8Jd48rFnXdI4xQ7PxVQ5wQotDQoyD", "count": 0}, {"id": 716, "name": "Gel7pOR7MBOL9Gp75fTeUGnLuETdjD", "count": 0}, {"id": 717, "name": "5R0fDLXAxnNThcNCLrVuAow0wkFbms", "count": 0}, {"id": 718, "name": "\\u661f\\u6807\\u7ec4", "count": 0}, {"id": 721, "name": "jBi650dP1mRQkUw", "count": 0}, {"id": 722, "name": "xp8GVPX4QjtaN8jMUPPgyn84DRYX6I", "count": 0}, {"id": 733, "name": "zGDZARe6yECgNyN5GscrbNx4tkzKND", "count": 0}, {"id": 738, "name": "v3F2xlO4S22g8ZL2YaAa2cMPBHHGKn", "count": 0}, {"id": 739, "name": "EPrmBEVvoh1Tcs1HhZdjXZPlalfj2G", "count": 0}, {"id": 742, "name": "wQSFcjik4gjKtzBVFFlxop8e4YTNon", "count": 0}, {"id": 743, "name": "LjlaPnGY6whzQwPWbohUWeW2cKeLq0", "count": 0}, {"id": 746, "name": "\u5929\u5929\u6d4b\u8bd5", "count": 0}, {"id": 747, "name": "\u5929\u5929", "count": 0}, {"id": 748, "name": "\u6d4b\u8bd5", "count": 0}, {"id": 749, "name": "\u83dc\u9e1f", "count": 0}, {"id": 750, "name": "\u8e29\u8e29\u8e29", "count": 0}, {"id": 751, "name": "\u5e7f", "count": 0}]}"}
{"CreateTime": "2024-05-16 12:28:16", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【修改用户标签接口】用例1：接口参数都正确- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:28:16", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【修改用户标签接口】用例1：接口参数都正确- 测试用例,执行成功！实际响应结果为：{'errcode': 0, 'errmsg': 'ok'}"}
{"CreateTime": "2024-05-16 12:28:16", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【修改用户标签接口】用例1：接口参数都正确- 测试用例,执行成功！实际响应结果为：{"errcode": 0, "errmsg": "ok"}"}
{"CreateTime": "2024-05-16 12:28:16", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【修改用户标签接口】用例2：id参数缺失/为空- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:28:16", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【修改用户标签接口】用例2：id参数缺失/为空- 测试用例,执行成功！实际响应结果为：{'errcode': 45058, 'errmsg': "can't modify sys tag hint: [NFHc58sQf-U6K6Ya] rid: 66458b60-7e649564-027cfd26"}"}
{"CreateTime": "2024-05-16 12:28:16", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【修改用户标签接口】用例2：id参数缺失/为空- 测试用例,执行成功！实际响应结果为：{"errcode": 45058, "errmsg": "can't modify sys tag hint: [NFHc58sQf-U6K6Ya] rid: 66458b60-7e649564-027cfd26"}"}
{"CreateTime": "2024-05-16 12:28:16", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【修改用户标签接口】用例3：参数id不存在- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:28:16", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【修改用户标签接口】用例3：参数id不存在- 测试用例,执行成功！实际响应结果为：{'errcode': -1, 'errmsg': 'system error hint: [NFHc6F4Vf-DSywta] rid: 66458b60-0bdf62e2-47571767'}"}
{"CreateTime": "2024-05-16 12:28:16", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【修改用户标签接口】用例3：参数id不存在- 测试用例,执行成功！实际响应结果为：{"errcode": -1, "errmsg": "system error hint: [NFHc6F4Vf-DSywta] rid: 66458b60-0bdf62e2-47571767"}"}
{"CreateTime": "2024-05-16 12:28:17", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【修改用户标签接口】用例4：参数id为系统数据0- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:28:17", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【修改用户标签接口】用例4：参数id为系统数据0- 测试用例,执行成功！实际响应结果为：{'errcode': 45058, 'errmsg': "can't modify sys tag hint: [NFHcP1obk-c5JRpA] rid: 66458b61-0197892a-3507c19b"}"}
{"CreateTime": "2024-05-16 12:28:17", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【修改用户标签接口】用例4：参数id为系统数据0- 测试用例,执行成功！实际响应结果为：{"errcode": 45058, "errmsg": "can't modify sys tag hint: [NFHcP1obk-c5JRpA] rid: 66458b61-0197892a-3507c19b"}"}
{"CreateTime": "2024-05-16 12:28:17", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【修改用户标签接口】用例5：参数id为系统数据1- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:28:17", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【修改用户标签接口】用例5：参数id为系统数据1- 测试用例,执行成功！实际响应结果为：{'errcode': 45058, 'errmsg': "can't modify sys tag hint: [NFHc7BsQf-fBBwGA] rid: 66458b61-519cf02c-0af6fe24"}"}
{"CreateTime": "2024-05-16 12:28:17", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【修改用户标签接口】用例5：参数id为系统数据1- 测试用例,执行成功！实际响应结果为：{"errcode": 45058, "errmsg": "can't modify sys tag hint: [NFHc7BsQf-fBBwGA] rid: 66458b61-519cf02c-0af6fe24"}"}
{"CreateTime": "2024-05-16 12:28:18", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【修改用户标签接口】用例6：参数id为系统数据2- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:28:18", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【修改用户标签接口】用例6：参数id为系统数据2- 测试用例,执行成功！实际响应结果为：{'errcode': 45058, 'errmsg': "can't modify sys tag hint: [NFHcKE6Vf-fZ4rfa] rid: 66458b61-39bdccbb-7020aac0"}"}
{"CreateTime": "2024-05-16 12:28:18", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【修改用户标签接口】用例6：参数id为系统数据2- 测试用例,执行成功！实际响应结果为：{"errcode": 45058, "errmsg": "can't modify sys tag hint: [NFHcKE6Vf-fZ4rfa] rid: 66458b61-39bdccbb-7020aac0"}"}
{"CreateTime": "2024-05-16 12:28:18", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【修改用户标签接口】用例7：参数id为系统数据3- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:28:18", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【修改用户标签接口】用例7：参数id为系统数据3- 测试用例,执行成功！实际响应结果为：{'errcode': 45058, 'errmsg': "can't modify sys tag hint: [NFHcjBeVf-TMTvBa] rid: 66458b62-2a0ed809-1186f8b1"}"}
{"CreateTime": "2024-05-16 12:28:18", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【修改用户标签接口】用例7：参数id为系统数据3- 测试用例,执行成功！实际响应结果为：{"errcode": 45058, "errmsg": "can't modify sys tag hint: [NFHcjBeVf-TMTvBa] rid: 66458b62-2a0ed809-1186f8b1"}"}
{"CreateTime": "2024-05-16 12:28:18", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【修改用户标签接口】用例8：参数id格式错误-为小写英文字母- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:28:18", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【修改用户标签接口】用例8：参数id格式错误-为小写英文字母- 测试用例,执行成功！实际响应结果为：{'errcode': 47001, 'errmsg': 'data format error hint: [NFHcLoEVf-mq43va] rid: 66458b62-79a97167-2cfc3b56'}"}
{"CreateTime": "2024-05-16 12:28:18", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【修改用户标签接口】用例8：参数id格式错误-为小写英文字母- 测试用例,执行成功！实际响应结果为：{"errcode": 47001, "errmsg": "data format error hint: [NFHcLoEVf-mq43va] rid: 66458b62-79a97167-2cfc3b56"}"}
{"CreateTime": "2024-05-16 12:28:19", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【修改用户标签接口】用例9：参数id格式错误-为大写英文字母- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:28:19", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【修改用户标签接口】用例9：参数id格式错误-为大写英文字母- 测试用例,执行成功！实际响应结果为：{'errcode': 47001, 'errmsg': 'data format error hint: [NFHcNqDVf-vQyefA] rid: 66458b62-5646f6d4-30fe8a41'}"}
{"CreateTime": "2024-05-16 12:28:19", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【修改用户标签接口】用例9：参数id格式错误-为大写英文字母- 测试用例,执行成功！实际响应结果为：{"errcode": 47001, "errmsg": "data format error hint: [NFHcNqDVf-vQyefA] rid: 66458b62-5646f6d4-30fe8a41"}"}
{"CreateTime": "2024-05-16 12:28:19", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【修改用户标签接口】用例10：参数id格式错误-为中文汉字- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:28:19", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【修改用户标签接口】用例10：参数id格式错误-为中文汉字- 测试用例,执行成功！实际响应结果为：{'errcode': 47001, 'errmsg': 'data format error hint: [NFHcA9sQf-XZugEa] rid: 66458b63-751fbd64-441e1cd7'}"}
{"CreateTime": "2024-05-16 12:28:19", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【修改用户标签接口】用例10：参数id格式错误-为中文汉字- 测试用例,执行成功！实际响应结果为：{"errcode": 47001, "errmsg": "data format error hint: [NFHcA9sQf-XZugEa] rid: 66458b63-751fbd64-441e1cd7"}"}
{"CreateTime": "2024-05-16 12:28:19", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【修改用户标签接口】用例11：参数id格式错误-含特殊符号- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:28:19", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【修改用户标签接口】用例11：参数id格式错误-含特殊符号- 测试用例,执行成功！实际响应结果为：{'errcode': 47001, 'errmsg': 'data format error hint: [NFHc0Ymre-BT9WOA] rid: 66458b63-486cb2c3-168ab4c7'}"}
{"CreateTime": "2024-05-16 12:28:19", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【修改用户标签接口】用例11：参数id格式错误-含特殊符号- 测试用例,执行成功！实际响应结果为：{"errcode": 47001, "errmsg": "data format error hint: [NFHc0Ymre-BT9WOA] rid: 66458b63-486cb2c3-168ab4c7"}"}
{"CreateTime": "2024-05-16 12:28:20", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【修改用户标签接口】用例12：参数name重复存在- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:28:20", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【修改用户标签接口】用例12：参数name重复存在- 测试用例,执行成功！实际响应结果为：{'errcode': 45157, 'errmsg': 'invalid tag name hint: [NFHcP1obk-OXaIYa] rid: 66458b64-01daa098-04d20913'}"}
{"CreateTime": "2024-05-16 12:28:20", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【修改用户标签接口】用例12：参数name重复存在- 测试用例,执行成功！实际响应结果为：{"errcode": 45157, "errmsg": "invalid tag name hint: [NFHcP1obk-OXaIYa] rid: 66458b64-01daa098-04d20913"}"}
{"CreateTime": "2024-05-16 12:34:25", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【拉黑用户至黑名单接口】用例1：openid_list参数正确- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:34:25", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【拉黑用户至黑名单接口】用例1：openid_list参数正确- 测试用例,执行成功！实际响应结果为：{'errcode': 0, 'errmsg': 'ok'}"}
{"CreateTime": "2024-05-16 12:34:25", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【拉黑用户至黑名单接口】用例1：openid_list参数正确- 测试用例,执行成功！实际响应结果为：{"errcode": 0, "errmsg": "ok"}"}
{"CreateTime": "2024-05-16 12:34:25", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【拉黑用户至黑名单接口】用例2：openid为无效数字- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:34:25", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【拉黑用户至黑名单接口】用例2：openid为无效数字- 测试用例,执行成功！实际响应结果为：{'errcode': 40003, 'errmsg': 'invalid openid hint: [QFHcJryWf-_iTR0a] rid: 66458cd1-7d54d2f4-2db08916'}"}
{"CreateTime": "2024-05-16 12:34:25", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【拉黑用户至黑名单接口】用例2：openid为无效数字- 测试用例,执行成功！实际响应结果为：{"errcode": 40003, "errmsg": "invalid openid hint: [QFHcJryWf-_iTR0a] rid: 66458cd1-7d54d2f4-2db08916"}"}
{"CreateTime": "2024-05-16 12:34:25", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【拉黑用户至黑名单接口】用例3：请求body缺失- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:34:25", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【拉黑用户至黑名单接口】用例3：请求body缺失- 测试用例,执行成功！实际响应结果为：{'errcode': 44002, 'errmsg': 'empty post data hint: [QFHcs0mre-A6LzUa] rid: 66458cd1-2982aa1c-659ff488'}"}
{"CreateTime": "2024-05-16 12:34:25", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【拉黑用户至黑名单接口】用例3：请求body缺失- 测试用例,执行成功！实际响应结果为：{"errcode": 44002, "errmsg": "empty post data hint: [QFHcs0mre-A6LzUa] rid: 66458cd1-2982aa1c-659ff488"}"}
{"CreateTime": "2024-05-16 12:34:26", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【拉黑用户至黑名单接口】用例4：参数openid_list为空- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:34:26", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【拉黑用户至黑名单接口】用例4：参数openid_list为空- 测试用例,执行成功！实际响应结果为：{'errcode': 40003, 'errmsg': 'invalid openid hint: [QFHcjBeVf-_Fsxya] rid: 66458cd2-58dd4fdb-75e83647'}"}
{"CreateTime": "2024-05-16 12:34:26", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【拉黑用户至黑名单接口】用例4：参数openid_list为空- 测试用例,执行成功！实际响应结果为：{"errcode": 40003, "errmsg": "invalid openid hint: [QFHcjBeVf-_Fsxya] rid: 66458cd2-58dd4fdb-75e83647"}"}
{"CreateTime": "2024-05-16 12:34:26", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【拉黑用户至黑名单接口】用例5：openid为无效汉字- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:34:26", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【拉黑用户至黑名单接口】用例5：openid为无效汉字- 测试用例,执行成功！实际响应结果为：{'errcode': 40003, 'errmsg': 'invalid openid hint: [QFHcr0mre-KuJVfA] rid: 66458cd2-2e9f7d8a-16d5adbe'}"}
{"CreateTime": "2024-05-16 12:34:26", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【拉黑用户至黑名单接口】用例5：openid为无效汉字- 测试用例,执行成功！实际响应结果为：{"errcode": 40003, "errmsg": "invalid openid hint: [QFHcr0mre-KuJVfA] rid: 66458cd2-2e9f7d8a-16d5adbe"}"}
{"CreateTime": "2024-05-16 12:34:27", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【取消拉黑用户至黑名单接口】用例1：参数access_token、openid_list都正确- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:34:27", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【取消拉黑用户至黑名单接口】用例1：参数access_token、openid_list都正确- 测试用例,执行成功！实际响应结果为：{'errcode': 0, 'errmsg': 'ok'}"}
{"CreateTime": "2024-05-16 12:34:27", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【取消拉黑用户至黑名单接口】用例1：参数access_token、openid_list都正确- 测试用例,执行成功！实际响应结果为：{"errcode": 0, "errmsg": "ok"}"}
{"CreateTime": "2024-05-16 12:34:27", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【取消拉黑用户至黑名单接口】用例2：openid为无效字符串- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:34:27", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【取消拉黑用户至黑名单接口】用例2：openid为无效字符串- 测试用例,执行成功！实际响应结果为：{'errcode': 40003, 'errmsg': 'invalid openid hint: [QFHcb9sQf-oQasBA] rid: 66458cd3-629b02ca-5314ba66'}"}
{"CreateTime": "2024-05-16 12:34:27", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【取消拉黑用户至黑名单接口】用例2：openid为无效字符串- 测试用例,执行成功！实际响应结果为：{"errcode": 40003, "errmsg": "invalid openid hint: [QFHcb9sQf-oQasBA] rid: 66458cd3-629b02ca-5314ba66"}"}
{"CreateTime": "2024-05-16 12:34:27", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【取消拉黑用户至黑名单接口】用例3：请求body缺失- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:34:27", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【取消拉黑用户至黑名单接口】用例3：请求body缺失- 测试用例,执行成功！实际响应结果为：{'errcode': 44002, 'errmsg': 'empty post data hint: [QFHcc1j2e-KvZVqA] rid: 66458cd3-5296c061-0406c8b4'}"}
{"CreateTime": "2024-05-16 12:34:27", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【取消拉黑用户至黑名单接口】用例3：请求body缺失- 测试用例,执行成功！实际响应结果为：{"errcode": 44002, "errmsg": "empty post data hint: [QFHcc1j2e-KvZVqA] rid: 66458cd3-5296c061-0406c8b4"}"}
{"CreateTime": "2024-05-16 12:34:28", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【取消拉黑用户至黑名单接口】用例4：openid参数为空- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:34:28", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【取消拉黑用户至黑名单接口】用例4：openid参数为空- 测试用例,执行成功！实际响应结果为：{'errcode': 40003, 'errmsg': 'invalid openid hint: [QFHcevj2e-Ifhxpa] rid: 66458cd4-7038d386-509108a0'}"}
{"CreateTime": "2024-05-16 12:34:28", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【取消拉黑用户至黑名单接口】用例4：openid参数为空- 测试用例,执行成功！实际响应结果为：{"errcode": 40003, "errmsg": "invalid openid hint: [QFHcevj2e-Ifhxpa] rid: 66458cd4-7038d386-509108a0"}"}
{"CreateTime": "2024-05-16 12:34:28", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【获取微信黑名单列表】用例1：参数全部正常- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:34:28", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【获取微信黑名单列表】用例1：参数全部正常- 测试用例,执行成功！实际响应结果为：{"total": 3, "count": 3, "data": {"openid": ["oDqjY5xYp972631jH7IsDR3pl2x0", "oDqjY5-wrnuyN9OBXaN0md8rLsyQ", "oDqjY50sO3UCivurTfvnATmCMuN0"]}, "next_openid": "oDqjY50sO3UCivurTfvnATmCMuN0"}"}
{"CreateTime": "2024-05-16 12:34:28", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【获取微信黑名单列表】用例1：参数全部正常- 测试用例,执行成功！实际响应结果为：{"total": 3, "count": 3, "data": {"openid": ["oDqjY5xYp972631jH7IsDR3pl2x0", "oDqjY5-wrnuyN9OBXaN0md8rLsyQ", "oDqjY50sO3UCivurTfvnATmCMuN0"]}, "next_openid": "oDqjY50sO3UCivurTfvnATmCMuN0"}"}
{"CreateTime": "2024-05-16 12:34:29", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【获取微信黑名单列表】用例2：参数begin_openid为null- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:34:29", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【获取微信黑名单列表】用例2：参数begin_openid为null- 测试用例,执行成功！实际响应结果为：{"total": 3, "count": 3, "data": {"openid": ["oDqjY5xYp972631jH7IsDR3pl2x0", "oDqjY5-wrnuyN9OBXaN0md8rLsyQ", "oDqjY50sO3UCivurTfvnATmCMuN0"]}, "next_openid": "oDqjY50sO3UCivurTfvnATmCMuN0"}"}
{"CreateTime": "2024-05-16 12:34:29", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【获取微信黑名单列表】用例2：参数begin_openid为null- 测试用例,执行成功！实际响应结果为：{"total": 3, "count": 3, "data": {"openid": ["oDqjY5xYp972631jH7IsDR3pl2x0", "oDqjY5-wrnuyN9OBXaN0md8rLsyQ", "oDqjY50sO3UCivurTfvnATmCMuN0"]}, "next_openid": "oDqjY50sO3UCivurTfvnATmCMuN0"}"}
{"CreateTime": "2024-05-16 12:34:29", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【获取微信黑名单列表】用例3：参数begin_openid无效- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:34:29", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【获取微信黑名单列表】用例3：参数begin_openid无效- 测试用例,执行成功！实际响应结果为：{'errcode': 40003, 'errmsg': 'invalid openid hint: [QFHcP1obk-10obMA] rid: 66458cd5-2d2f870b-1a2cc35e'}"}
{"CreateTime": "2024-05-16 12:34:29", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【获取微信黑名单列表】用例3：参数begin_openid无效- 测试用例,执行成功！实际响应结果为：{"errcode": 40003, "errmsg": "invalid openid hint: [QFHcP1obk-10obMA] rid: 66458cd5-2d2f870b-1a2cc35e"}"}
{"CreateTime": "2024-05-16 12:34:29", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【获取微信黑名单列表】用例4：请求body缺失- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:34:29", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【获取微信黑名单列表】用例4：请求body缺失- 测试用例,执行成功！实际响应结果为：{'errcode': 44002, 'errmsg': 'empty post data hint: [QFHcNqDVf-EXAihA] rid: 66458cd5-68f85a67-035c404d'}"}
{"CreateTime": "2024-05-16 12:34:29", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【获取微信黑名单列表】用例4：请求body缺失- 测试用例,执行成功！实际响应结果为：{"errcode": 44002, "errmsg": "empty post data hint: [QFHcNqDVf-EXAihA] rid: 66458cd5-68f85a67-035c404d"}"}
{"CreateTime": "2024-05-16 12:34:30", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【上传卡券图片接口】用例1：files参数为空- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:34:30", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【上传卡券图片接口】用例1：files参数为空- 测试用例,执行成功！实际响应结果为：{'errcode': 41005, 'errmsg': 'media data missing hint: [cbqdsA00709037] rid: 66458cd6-521fe0e2-177fdb65'}"}
{"CreateTime": "2024-05-16 12:34:30", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【上传卡券图片接口】用例1：files参数为空- 测试用例,执行成功！实际响应结果为：{"errcode": 41005, "errmsg": "media data missing hint: [cbqdsA00709037] rid: 66458cd6-521fe0e2-177fdb65"}"}
{"CreateTime": "2024-05-16 12:34:30", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【上传卡券图片接口】用例2：files格式为txt- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:34:30", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【上传卡券图片接口】用例2：files格式为txt- 测试用例,执行成功！实际响应结果为：{'errcode': 40005, 'errmsg': 'invalid file type hint: [WTsuSA0070p448] rid: 66458cd6-5cf005e6-6eadb4df'}"}
{"CreateTime": "2024-05-16 12:34:30", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【上传卡券图片接口】用例2：files格式为txt- 测试用例,执行成功！实际响应结果为：{"errcode": 40005, "errmsg": "invalid file type hint: [WTsuSA0070p448] rid: 66458cd6-5cf005e6-6eadb4df"}"}
{"CreateTime": "2024-05-16 12:34:31", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【上传卡券图片接口】用例3：files格式为png- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:34:31", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【上传卡券图片接口】用例3：files格式为png- 测试用例,执行成功！实际响应结果为：{"url": "http://mmbiz.qpic.cn/mmbiz_jpg/70AOWquMz5GuXFFrwVhoicJjNwFXguHrGoClYtp84wlOLR3Olj4W2xjMcoQLl3lm39Wl7be0EK67LaSge7nJTGA/0?from=appmsg"}"}
{"CreateTime": "2024-05-16 12:34:31", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【上传卡券图片接口】用例4：files格式为jpg- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:34:31", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【上传卡券图片接口】用例4：files格式为jpg- 测试用例,执行成功！实际响应结果为：{"url": "http://mmbiz.qpic.cn/mmbiz_jpg/70AOWquMz5GuXFFrwVhoicJjNwFXguHrGIICn2BZbPAMta5Y9VeeoDA2rM6EFre0nIQDy2nYjrvdtFxiaibxicflAw/0?from=appmsg"}"}
{"CreateTime": "2024-05-16 12:34:32", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【上传卡券图片接口】用例5：files格式为mp3- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:34:32", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【上传卡券图片接口】用例5：files格式为mp3- 测试用例,执行成功！实际响应结果为：{'errcode': 40005, 'errmsg': 'invalid file type hint: [292fLA0072w752] rid: 66458cd8-795296ac-415651c9'}"}
{"CreateTime": "2024-05-16 12:34:32", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【上传卡券图片接口】用例5：files格式为mp3- 测试用例,执行成功！实际响应结果为：{"errcode": 40005, "errmsg": "invalid file type hint: [292fLA0072w752] rid: 66458cd8-795296ac-415651c9"}"}
{"CreateTime": "2024-05-16 12:34:35", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【上传卡券图片接口】用例6：文件大小超过1MB- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:34:35", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【上传卡券图片接口】用例6：文件大小超过1MB- 测试用例,执行成功！实际响应结果为：{'errcode': 40009, 'errmsg': 'invalid image size hint: [IIvn4a0075p448] rid: 66458cd8-29658d22-6eb1041a'}"}
{"CreateTime": "2024-05-16 12:34:35", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【上传卡券图片接口】用例6：文件大小超过1MB- 测试用例,执行成功！实际响应结果为：{"errcode": 40009, "errmsg": "invalid image size hint: [IIvn4a0075p448] rid: 66458cd8-29658d22-6eb1041a"}"}
{"CreateTime": "2024-05-16 12:34:35", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【创建客服账号接口】用例1：参数全部正确- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:34:35", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【创建客服账号接口】用例1：参数全部正确- 测试用例,执行成功！实际响应结果为：{'errcode': 0, 'errmsg': 'ok'}"}
{"CreateTime": "2024-05-16 12:34:35", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【创建客服账号接口】用例1：参数全部正确- 测试用例,执行成功！实际响应结果为：{"errcode": 0, "errmsg": "ok"}"}
{"CreateTime": "2024-05-16 12:34:36", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【创建客服账号接口】用例2：参数客服账号已存在- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:34:36", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【创建客服账号接口】用例2：参数客服账号已存在- 测试用例,执行成功！实际响应结果为：{'errcode': 65406, 'errmsg': 'custom service account exists hint: [QFHc5FfVf-rxB2wa] rid: 66458cdc-5cc99ceb-4a4b40f7'}"}
{"CreateTime": "2024-05-16 12:34:36", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【创建客服账号接口】用例2：参数客服账号已存在- 测试用例,执行成功！实际响应结果为：{"errcode": 65406, "errmsg": "custom service account exists hint: [QFHc5FfVf-rxB2wa] rid: 66458cdc-5cc99ceb-4a4b40f7"}"}
{"CreateTime": "2024-05-16 12:34:36", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【创建客服账号接口】用例3：参数客服账号为空- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:34:36", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【创建客服账号接口】用例3：参数客服账号为空- 测试用例,执行成功！实际响应结果为：{'errcode': 65404, 'errmsg': 'illegal custom service account hint: [QFHcRWAxO-pXYn8a] rid: 66458cdc-6ee108ac-7d00de12'}"}
{"CreateTime": "2024-05-16 12:34:36", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【创建客服账号接口】用例3：参数客服账号为空- 测试用例,执行成功！实际响应结果为：{"errcode": 65404, "errmsg": "illegal custom service account hint: [QFHcRWAxO-pXYn8a] rid: 66458cdc-6ee108ac-7d00de12"}"}
{"CreateTime": "2024-05-16 12:34:37", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【创建客服账号接口】用例4：参数nickname客服昵称为空- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:34:37", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【创建客服账号接口】用例4：参数nickname客服昵称为空- 测试用例,执行成功！实际响应结果为：{'errcode': 0, 'errmsg': 'ok'}"}
{"CreateTime": "2024-05-16 12:34:37", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【创建客服账号接口】用例4：参数nickname客服昵称为空- 测试用例,执行成功！实际响应结果为：{"errcode": 0, "errmsg": "ok"}"}
{"CreateTime": "2024-05-16 12:34:37", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【创建客服账号接口】用例5：参数nickname客服昵称超过16个字符- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:34:37", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【创建客服账号接口】用例5：参数nickname客服昵称超过16个字符- 测试用例,执行成功！实际响应结果为：{'errcode': 65403, 'errmsg': 'illegal nickname hint: [QFHcdMfVf-492CBa] rid: 66458cdd-4e85b0ca-68c68037'}"}
{"CreateTime": "2024-05-16 12:34:37", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【创建客服账号接口】用例5：参数nickname客服昵称超过16个字符- 测试用例,执行成功！实际响应结果为：{"errcode": 65403, "errmsg": "illegal nickname hint: [QFHcdMfVf-492CBa] rid: 66458cdd-4e85b0ca-68c68037"}"}
{"CreateTime": "2024-05-16 12:34:37", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【创建客服账号接口】用例6：参数客服账号/前缀超过10个字符- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:34:37", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【创建客服账号接口】用例6：参数客服账号/前缀超过10个字符- 测试用例,执行成功！实际响应结果为：{'errcode': 65404, 'errmsg': 'illegal custom service account hint: [QFHcKUore-g] rid: 66458cdd-4db12240-7d00b7b8'}"}
{"CreateTime": "2024-05-16 12:34:37", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【创建客服账号接口】用例6：参数客服账号/前缀超过10个字符- 测试用例,执行成功！实际响应结果为：{"errcode": 65404, "errmsg": "illegal custom service account hint: [QFHcKUore-g] rid: 66458cdd-4db12240-7d00b7b8"}"}
{"CreateTime": "2024-05-16 12:34:38", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【设置客服信息接口】用例1：参数全部正确- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:34:38", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【设置客服信息接口】用例1：参数全部正确- 测试用例,执行成功！实际响应结果为：{'errcode': 0, 'errmsg': 'ok'}"}
{"CreateTime": "2024-05-16 12:34:38", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【设置客服信息接口】用例1：参数全部正确- 测试用例,执行成功！实际响应结果为：{"errcode": 0, "errmsg": "ok"}"}
{"CreateTime": "2024-05-16 12:34:38", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【设置客服信息接口】用例2：客服账号kf_account参数为空- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:34:38", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【设置客服信息接口】用例2：客服账号kf_account参数为空- 测试用例,执行成功！实际响应结果为：{'errcode': 65401, 'errmsg': 'invalid custom service account hint: [QFHc4_3Vf-0itgTA] rid: 66458cde-23c054eb-6afabf55'}"}
{"CreateTime": "2024-05-16 12:34:38", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【设置客服信息接口】用例2：客服账号kf_account参数为空- 测试用例,执行成功！实际响应结果为：{"errcode": 65401, "errmsg": "invalid custom service account hint: [QFHc4_3Vf-0itgTA] rid: 66458cde-23c054eb-6afabf55"}"}
{"CreateTime": "2024-05-16 12:34:39", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【设置客服信息接口】用例3：请求body数据为空- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:34:39", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【设置客服信息接口】用例3：请求body数据为空- 测试用例,执行成功！实际响应结果为：{'errcode': 44002, 'errmsg': 'empty post data hint: [QFHcdMfVf-y22J7a] rid: 66458cde-7c6a784c-2fdd86b8'}"}
{"CreateTime": "2024-05-16 12:34:39", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【设置客服信息接口】用例3：请求body数据为空- 测试用例,执行成功！实际响应结果为：{"errcode": 44002, "errmsg": "empty post data hint: [QFHcdMfVf-y22J7a] rid: 66458cde-7c6a784c-2fdd86b8"}"}
{"CreateTime": "2024-05-16 12:34:39", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【删除客服账号接口】用例1：参数全部正确- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:34:39", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【删除客服账号接口】用例1：参数全部正确- 测试用例,执行成功！实际响应结果为：{'errcode': 0, 'errmsg': 'ok'}"}
{"CreateTime": "2024-05-16 12:34:39", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【删除客服账号接口】用例1：参数全部正确- 测试用例,执行成功！实际响应结果为：{"errcode": 0, "errmsg": "ok"}"}
{"CreateTime": "2024-05-16 12:34:40", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【删除客服账号接口】用例2：删除的客服账号为无效的自定义服务帐户- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:34:40", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【删除客服账号接口】用例2：删除的客服账号为无效的自定义服务帐户- 测试用例,执行成功！实际响应结果为：{'errcode': 65401, 'errmsg': 'invalid custom service account hint: [QFHcWH5Rf-IeomJa] rid: 66458ce0-14a4164f-6a002580'}"}
{"CreateTime": "2024-05-16 12:34:40", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【删除客服账号接口】用例2：删除的客服账号为无效的自定义服务帐户- 测试用例,执行成功！实际响应结果为：{"errcode": 65401, "errmsg": "invalid custom service account hint: [QFHcWH5Rf-IeomJa] rid: 66458ce0-14a4164f-6a002580"}"}
{"CreateTime": "2024-05-16 12:34:40", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【获取客服基础信息接口】用例1：参数全部正确- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:34:40", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【获取客服基础信息接口】用例1：参数全部正确- 测试用例,执行成功！实际响应结果为：{"kf_list": [{"kf_account": "test1@test", "kf_headimgurl": "http://mmbiz.qpic.cn/mmbiz_png/70AOWquMz5GuXFFrwVhoicJjNwFXguHrG3Deic8SAIWZDREjialhFkEkCjHzG1iaXAnNBRMIXNqMQCoyXFafPJE1ug/300?wx_fmt=png/0", "kf_id": 2001, "kf_nick": ""}, {"kf_account": "HD21_w1@test", "kf_headimgurl": "", "kf_id": 2003, "kf_nick": "xs"}, {"kf_account": "2yhU_@H0kh", "kf_headimgurl": "http://mmbiz.qpic.cn/mmbiz_jpg/70AOWquMz5FQcgcaLL2R6wT9fsuic8lptK88NTH1u6MbRicRbiaL2t5iacC6pEfEwcO15XaBOV7IRYVS32b8lGQpHg/300?wx_fmt=jpeg/0", "kf_id": 2004, "kf_nick": "xs"}, {"kf_account": "n5ghnL0c0_@ZJ81bDtlUSL3lEsRC8nGXfoQFufUwu", "kf_headimgurl": "", "kf_id": 2005, "kf_nick": "x212s"}, {"kf_account": "n5ghnL0c0_@21", "kf_headimgurl": "", "kf_id": 2006, "kf_nick": "213"}, {"kf_account": "n5ghnL0c0_@w", "kf_headimgurl": "", "kf_id": 2007, "kf_nick": ""}, {"kf_account": "n5ghnL0c0_@w2121", "kf_headimgurl": "", "kf_id": 2008, "kf_nick": "1"}, {"kf_account": "EK6iI97eN_@2izwrx5IWvfPHQrGMr57WAujazrpOz", "kf_headimgurl": "", "kf_id": 2009, "kf_nick": "pAaezgB1qQw2brQb"}, {"kf_account": "F2Fyr7v0O_@OGWBBEUtZyWe2Tr9iyhZOgYoWNEF0T", "kf_headimgurl": "", "kf_id": 2010, "kf_nick": ""}, {"kf_account": "QpAVaoy2k_@CzUkbY7xXqNto9o89zTLvM5oMxwC4R", "kf_headimgurl": "", "kf_id": 2011, "kf_nick": "JPI4jmVvk67MPnpB"}, {"kf_account": "5D2PKS4hP_@baaqpLLA7LFFqaZKe0MWVKxYKEQDWV", "kf_headimgurl": "", "kf_id": 2012, "kf_nick": ""}, {"kf_account": "dfHBJQenO_@9uNMF5JvFmnKzrvdvbJinRkOmXvKHM", "kf_headimgurl": "", "kf_id": 2013, "kf_nick": "T9y3DQuN8okYbc5V"}, {"kf_account": "xNTix4n9H_@iGor1NP9jIjPDJU8PL1Ytb4UFmGzCP", "kf_headimgurl": "", "kf_id": 2014, "kf_nick": ""}, {"kf_account": "ertvLaKhv_@KIwKFp5Lzji8odIwGx8t484suX8cJ6", "kf_headimgurl": "", "kf_id": 2015, "kf_nick": "8SW7MgAItqZ5VYYY"}, {"kf_account": "gFYGiILCI_@haHaBP5TRuNhibm8Le5LPXuPbhmmjc", "kf_headimgurl": "", "kf_id": 2017, "kf_nick": "N8UknHMi3NiLaeyb"}, {"kf_account": "wb3KlS2uP_@Qzr3IQPD9Do9WCXpsCopCn42Y6LotF", "kf_headimgurl": "", "kf_id": 2019, "kf_nick": "O3jzu6ZDXmBUTgrF"}, {"kf_account": "fxQoMrvSX_@LznktN8oMDr1aWjYp4S6OStFdfw1Lc", "kf_headimgurl": "", "kf_id": 2021, "kf_nick": "RcaGzGy89NSHLJVe"}, {"kf_account": "Siss95TKc_@Q4LU17KQwFWbTMIm5VzHxc44JbJWtK", "kf_headimgurl": "", "kf_id": 2023, "kf_nick": "89uEdc9rftB72Q8H"}, {"kf_account": "mzk3VJdUD_@p5GnPuQcFB8XRYBPKxhgaA17vw9Wps", "kf_headimgurl": "", "kf_id": 2025, "kf_nick": "yXTg131F7LjuqfdW"}, {"kf_account": "RQkmXST9h_@oKF1pe2W2FVWPMgYf92uSGsKpBko7J", "kf_headimgurl": "", "kf_id": 2027, "kf_nick": "NQCkOVLGtPvHsXs4"}, {"kf_account": "NRTw4x7YL_@hdYR4LuWEWJZ0iWoe4xQsNqC2IgoHi", "kf_headimgurl": "", "kf_id": 2029, "kf_nick": "o7GoTY46wcUR01xj"}, {"kf_account": "Sc0NwcNGk_@VEMEOZM7OcI5xki4zl8y3Hvt4VFg45", "kf_headimgurl": "", "kf_id": 2031, "kf_nick": "JT7VIs5Dh044GsQ5"}, {"kf_account": "wCy20qT7H_@45KjVBrI9EIEi4eNouGgCiEjiReqBd", "kf_headimgurl": "", "kf_id": 2033, "kf_nick": "bbvPpBF9ZYQGIYW3"}, {"kf_account": "qSnj5Ax5H_@qB4OcJMOHSIdnmlfTJY6h5o1XBiqme", "kf_headimgurl": "", "kf_id": 2035, "kf_nick": "r9vd7b0QCs328ZyF"}, {"kf_account": "wh9VL9sOF_@Qvh1zgSbujoV12kh9DMZfP8jc85uwJ", "kf_headimgurl": "", "kf_id": 2037, "kf_nick": "TrFoPT8NYAWjF2D6"}, {"kf_account": "adad@111", "kf_headimgurl": "http://mmbiz.qpic.cn/mmbiz_png/70AOWquMz5EWeRhjGXNe18aDevrLcE1WfdvvBNgHoLxVF4JqFrdsq03UicDgVW3Ir2mNpRKhMic4fem2BUWUYF8Q/300?wx_fmt=png/0", "kf_id": 2039, "kf_nick": "\u4e1c\u4e1c"}, {"kf_account": "Sandy12_@test", "kf_headimgurl": "", "kf_id": 2040, "kf_nick": "\u73ca\u8fea"}, {"kf_account": "Sandy666_@test", "kf_headimgurl": "", "kf_id": 2041, "kf_nick": "\u73ca\u8fea"}, {"kf_account": "Sedfsg@testetestetestetestetesteteste", "kf_headimgurl": "", "kf_id": 2042, "kf_nick": "\u73ca\u8fea"}, {"kf_account": "DC57zGQYE_@NB3wV7DnMYwQCeUEt96bRYvKRD0iAg", "kf_headimgurl": "", "kf_id": 2043, "kf_nick": "UCPmuKrrSmUv54AJ"}, {"kf_account": "KxPb8pqEx_@ETxYpWnwJRV29vsmw4dgvjOmECVz3b", "kf_headimgurl": "", "kf_id": 2045, "kf_nick": "CrkexMyMWksO2PRr"}]}"}
{"CreateTime": "2024-05-16 12:34:40", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【获取客服基础信息接口】用例1：参数全部正确- 测试用例,执行成功！实际响应结果为：{"kf_list": [{"kf_account": "test1@test", "kf_headimgurl": "http://mmbiz.qpic.cn/mmbiz_png/70AOWquMz5GuXFFrwVhoicJjNwFXguHrG3Deic8SAIWZDREjialhFkEkCjHzG1iaXAnNBRMIXNqMQCoyXFafPJE1ug/300?wx_fmt=png/0", "kf_id": 2001, "kf_nick": ""}, {"kf_account": "HD21_w1@test", "kf_headimgurl": "", "kf_id": 2003, "kf_nick": "xs"}, {"kf_account": "2yhU_@H0kh", "kf_headimgurl": "http://mmbiz.qpic.cn/mmbiz_jpg/70AOWquMz5FQcgcaLL2R6wT9fsuic8lptK88NTH1u6MbRicRbiaL2t5iacC6pEfEwcO15XaBOV7IRYVS32b8lGQpHg/300?wx_fmt=jpeg/0", "kf_id": 2004, "kf_nick": "xs"}, {"kf_account": "n5ghnL0c0_@ZJ81bDtlUSL3lEsRC8nGXfoQFufUwu", "kf_headimgurl": "", "kf_id": 2005, "kf_nick": "x212s"}, {"kf_account": "n5ghnL0c0_@21", "kf_headimgurl": "", "kf_id": 2006, "kf_nick": "213"}, {"kf_account": "n5ghnL0c0_@w", "kf_headimgurl": "", "kf_id": 2007, "kf_nick": ""}, {"kf_account": "n5ghnL0c0_@w2121", "kf_headimgurl": "", "kf_id": 2008, "kf_nick": "1"}, {"kf_account": "EK6iI97eN_@2izwrx5IWvfPHQrGMr57WAujazrpOz", "kf_headimgurl": "", "kf_id": 2009, "kf_nick": "pAaezgB1qQw2brQb"}, {"kf_account": "F2Fyr7v0O_@OGWBBEUtZyWe2Tr9iyhZOgYoWNEF0T", "kf_headimgurl": "", "kf_id": 2010, "kf_nick": ""}, {"kf_account": "QpAVaoy2k_@CzUkbY7xXqNto9o89zTLvM5oMxwC4R", "kf_headimgurl": "", "kf_id": 2011, "kf_nick": "JPI4jmVvk67MPnpB"}, {"kf_account": "5D2PKS4hP_@baaqpLLA7LFFqaZKe0MWVKxYKEQDWV", "kf_headimgurl": "", "kf_id": 2012, "kf_nick": ""}, {"kf_account": "dfHBJQenO_@9uNMF5JvFmnKzrvdvbJinRkOmXvKHM", "kf_headimgurl": "", "kf_id": 2013, "kf_nick": "T9y3DQuN8okYbc5V"}, {"kf_account": "xNTix4n9H_@iGor1NP9jIjPDJU8PL1Ytb4UFmGzCP", "kf_headimgurl": "", "kf_id": 2014, "kf_nick": ""}, {"kf_account": "ertvLaKhv_@KIwKFp5Lzji8odIwGx8t484suX8cJ6", "kf_headimgurl": "", "kf_id": 2015, "kf_nick": "8SW7MgAItqZ5VYYY"}, {"kf_account": "gFYGiILCI_@haHaBP5TRuNhibm8Le5LPXuPbhmmjc", "kf_headimgurl": "", "kf_id": 2017, "kf_nick": "N8UknHMi3NiLaeyb"}, {"kf_account": "wb3KlS2uP_@Qzr3IQPD9Do9WCXpsCopCn42Y6LotF", "kf_headimgurl": "", "kf_id": 2019, "kf_nick": "O3jzu6ZDXmBUTgrF"}, {"kf_account": "fxQoMrvSX_@LznktN8oMDr1aWjYp4S6OStFdfw1Lc", "kf_headimgurl": "", "kf_id": 2021, "kf_nick": "RcaGzGy89NSHLJVe"}, {"kf_account": "Siss95TKc_@Q4LU17KQwFWbTMIm5VzHxc44JbJWtK", "kf_headimgurl": "", "kf_id": 2023, "kf_nick": "89uEdc9rftB72Q8H"}, {"kf_account": "mzk3VJdUD_@p5GnPuQcFB8XRYBPKxhgaA17vw9Wps", "kf_headimgurl": "", "kf_id": 2025, "kf_nick": "yXTg131F7LjuqfdW"}, {"kf_account": "RQkmXST9h_@oKF1pe2W2FVWPMgYf92uSGsKpBko7J", "kf_headimgurl": "", "kf_id": 2027, "kf_nick": "NQCkOVLGtPvHsXs4"}, {"kf_account": "NRTw4x7YL_@hdYR4LuWEWJZ0iWoe4xQsNqC2IgoHi", "kf_headimgurl": "", "kf_id": 2029, "kf_nick": "o7GoTY46wcUR01xj"}, {"kf_account": "Sc0NwcNGk_@VEMEOZM7OcI5xki4zl8y3Hvt4VFg45", "kf_headimgurl": "", "kf_id": 2031, "kf_nick": "JT7VIs5Dh044GsQ5"}, {"kf_account": "wCy20qT7H_@45KjVBrI9EIEi4eNouGgCiEjiReqBd", "kf_headimgurl": "", "kf_id": 2033, "kf_nick": "bbvPpBF9ZYQGIYW3"}, {"kf_account": "qSnj5Ax5H_@qB4OcJMOHSIdnmlfTJY6h5o1XBiqme", "kf_headimgurl": "", "kf_id": 2035, "kf_nick": "r9vd7b0QCs328ZyF"}, {"kf_account": "wh9VL9sOF_@Qvh1zgSbujoV12kh9DMZfP8jc85uwJ", "kf_headimgurl": "", "kf_id": 2037, "kf_nick": "TrFoPT8NYAWjF2D6"}, {"kf_account": "adad@111", "kf_headimgurl": "http://mmbiz.qpic.cn/mmbiz_png/70AOWquMz5EWeRhjGXNe18aDevrLcE1WfdvvBNgHoLxVF4JqFrdsq03UicDgVW3Ir2mNpRKhMic4fem2BUWUYF8Q/300?wx_fmt=png/0", "kf_id": 2039, "kf_nick": "\u4e1c\u4e1c"}, {"kf_account": "Sandy12_@test", "kf_headimgurl": "", "kf_id": 2040, "kf_nick": "\u73ca\u8fea"}, {"kf_account": "Sandy666_@test", "kf_headimgurl": "", "kf_id": 2041, "kf_nick": "\u73ca\u8fea"}, {"kf_account": "Sedfsg@testetestetestetestetesteteste", "kf_headimgurl": "", "kf_id": 2042, "kf_nick": "\u73ca\u8fea"}, {"kf_account": "DC57zGQYE_@NB3wV7DnMYwQCeUEt96bRYvKRD0iAg", "kf_headimgurl": "", "kf_id": 2043, "kf_nick": "UCPmuKrrSmUv54AJ"}, {"kf_account": "KxPb8pqEx_@ETxYpWnwJRV29vsmw4dgvjOmECVz3b", "kf_headimgurl": "", "kf_id": 2045, "kf_nick": "CrkexMyMWksO2PRr"}]}"}
{"CreateTime": "2024-05-16 12:34:41", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【获取客服基础信息接口】用例1：参数全部正确- 测试用例,执行成功！实际响应结果为：{"kf_list": [{"kf_account": "test1@test", "kf_headimgurl": "http://mmbiz.qpic.cn/mmbiz_png/70AOWquMz5GuXFFrwVhoicJjNwFXguHrG3Deic8SAIWZDREjialhFkEkCjHzG1iaXAnNBRMIXNqMQCoyXFafPJE1ug/300?wx_fmt=png/0", "kf_id": 2001, "kf_nick": ""}, {"kf_account": "HD21_w1@test", "kf_headimgurl": "", "kf_id": 2003, "kf_nick": "xs"}, {"kf_account": "2yhU_@H0kh", "kf_headimgurl": "http://mmbiz.qpic.cn/mmbiz_jpg/70AOWquMz5FQcgcaLL2R6wT9fsuic8lptK88NTH1u6MbRicRbiaL2t5iacC6pEfEwcO15XaBOV7IRYVS32b8lGQpHg/300?wx_fmt=jpeg/0", "kf_id": 2004, "kf_nick": "xs"}, {"kf_account": "n5ghnL0c0_@ZJ81bDtlUSL3lEsRC8nGXfoQFufUwu", "kf_headimgurl": "", "kf_id": 2005, "kf_nick": "x212s"}, {"kf_account": "n5ghnL0c0_@21", "kf_headimgurl": "", "kf_id": 2006, "kf_nick": "213"}, {"kf_account": "n5ghnL0c0_@w", "kf_headimgurl": "", "kf_id": 2007, "kf_nick": ""}, {"kf_account": "n5ghnL0c0_@w2121", "kf_headimgurl": "", "kf_id": 2008, "kf_nick": "1"}, {"kf_account": "EK6iI97eN_@2izwrx5IWvfPHQrGMr57WAujazrpOz", "kf_headimgurl": "", "kf_id": 2009, "kf_nick": "pAaezgB1qQw2brQb"}, {"kf_account": "F2Fyr7v0O_@OGWBBEUtZyWe2Tr9iyhZOgYoWNEF0T", "kf_headimgurl": "", "kf_id": 2010, "kf_nick": ""}, {"kf_account": "QpAVaoy2k_@CzUkbY7xXqNto9o89zTLvM5oMxwC4R", "kf_headimgurl": "", "kf_id": 2011, "kf_nick": "JPI4jmVvk67MPnpB"}, {"kf_account": "5D2PKS4hP_@baaqpLLA7LFFqaZKe0MWVKxYKEQDWV", "kf_headimgurl": "", "kf_id": 2012, "kf_nick": ""}, {"kf_account": "dfHBJQenO_@9uNMF5JvFmnKzrvdvbJinRkOmXvKHM", "kf_headimgurl": "", "kf_id": 2013, "kf_nick": "T9y3DQuN8okYbc5V"}, {"kf_account": "xNTix4n9H_@iGor1NP9jIjPDJU8PL1Ytb4UFmGzCP", "kf_headimgurl": "", "kf_id": 2014, "kf_nick": ""}, {"kf_account": "ertvLaKhv_@KIwKFp5Lzji8odIwGx8t484suX8cJ6", "kf_headimgurl": "", "kf_id": 2015, "kf_nick": "8SW7MgAItqZ5VYYY"}, {"kf_account": "gFYGiILCI_@haHaBP5TRuNhibm8Le5LPXuPbhmmjc", "kf_headimgurl": "", "kf_id": 2017, "kf_nick": "N8UknHMi3NiLaeyb"}, {"kf_account": "wb3KlS2uP_@Qzr3IQPD9Do9WCXpsCopCn42Y6LotF", "kf_headimgurl": "", "kf_id": 2019, "kf_nick": "O3jzu6ZDXmBUTgrF"}, {"kf_account": "fxQoMrvSX_@LznktN8oMDr1aWjYp4S6OStFdfw1Lc", "kf_headimgurl": "", "kf_id": 2021, "kf_nick": "RcaGzGy89NSHLJVe"}, {"kf_account": "Siss95TKc_@Q4LU17KQwFWbTMIm5VzHxc44JbJWtK", "kf_headimgurl": "", "kf_id": 2023, "kf_nick": "89uEdc9rftB72Q8H"}, {"kf_account": "mzk3VJdUD_@p5GnPuQcFB8XRYBPKxhgaA17vw9Wps", "kf_headimgurl": "", "kf_id": 2025, "kf_nick": "yXTg131F7LjuqfdW"}, {"kf_account": "RQkmXST9h_@oKF1pe2W2FVWPMgYf92uSGsKpBko7J", "kf_headimgurl": "", "kf_id": 2027, "kf_nick": "NQCkOVLGtPvHsXs4"}, {"kf_account": "NRTw4x7YL_@hdYR4LuWEWJZ0iWoe4xQsNqC2IgoHi", "kf_headimgurl": "", "kf_id": 2029, "kf_nick": "o7GoTY46wcUR01xj"}, {"kf_account": "Sc0NwcNGk_@VEMEOZM7OcI5xki4zl8y3Hvt4VFg45", "kf_headimgurl": "", "kf_id": 2031, "kf_nick": "JT7VIs5Dh044GsQ5"}, {"kf_account": "wCy20qT7H_@45KjVBrI9EIEi4eNouGgCiEjiReqBd", "kf_headimgurl": "", "kf_id": 2033, "kf_nick": "bbvPpBF9ZYQGIYW3"}, {"kf_account": "qSnj5Ax5H_@qB4OcJMOHSIdnmlfTJY6h5o1XBiqme", "kf_headimgurl": "", "kf_id": 2035, "kf_nick": "r9vd7b0QCs328ZyF"}, {"kf_account": "wh9VL9sOF_@Qvh1zgSbujoV12kh9DMZfP8jc85uwJ", "kf_headimgurl": "", "kf_id": 2037, "kf_nick": "TrFoPT8NYAWjF2D6"}, {"kf_account": "adad@111", "kf_headimgurl": "http://mmbiz.qpic.cn/mmbiz_png/70AOWquMz5EWeRhjGXNe18aDevrLcE1WfdvvBNgHoLxVF4JqFrdsq03UicDgVW3Ir2mNpRKhMic4fem2BUWUYF8Q/300?wx_fmt=png/0", "kf_id": 2039, "kf_nick": "\u4e1c\u4e1c"}, {"kf_account": "Sandy12_@test", "kf_headimgurl": "", "kf_id": 2040, "kf_nick": "\u73ca\u8fea"}, {"kf_account": "Sandy666_@test", "kf_headimgurl": "", "kf_id": 2041, "kf_nick": "\u73ca\u8fea"}, {"kf_account": "Sedfsg@testetestetestetestetesteteste", "kf_headimgurl": "", "kf_id": 2042, "kf_nick": "\u73ca\u8fea"}, {"kf_account": "DC57zGQYE_@NB3wV7DnMYwQCeUEt96bRYvKRD0iAg", "kf_headimgurl": "", "kf_id": 2043, "kf_nick": "UCPmuKrrSmUv54AJ"}, {"kf_account": "KxPb8pqEx_@ETxYpWnwJRV29vsmw4dgvjOmECVz3b", "kf_headimgurl": "", "kf_id": 2045, "kf_nick": "CrkexMyMWksO2PRr"}]}"}
{"CreateTime": "2024-05-16 12:34:41", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【获取客服基础信息接口】用例1：参数全部正确- 测试用例,执行成功！实际响应结果为：{"kf_list": [{"kf_account": "test1@test", "kf_headimgurl": "http://mmbiz.qpic.cn/mmbiz_png/70AOWquMz5GuXFFrwVhoicJjNwFXguHrG3Deic8SAIWZDREjialhFkEkCjHzG1iaXAnNBRMIXNqMQCoyXFafPJE1ug/300?wx_fmt=png/0", "kf_id": 2001, "kf_nick": ""}, {"kf_account": "HD21_w1@test", "kf_headimgurl": "", "kf_id": 2003, "kf_nick": "xs"}, {"kf_account": "2yhU_@H0kh", "kf_headimgurl": "http://mmbiz.qpic.cn/mmbiz_jpg/70AOWquMz5FQcgcaLL2R6wT9fsuic8lptK88NTH1u6MbRicRbiaL2t5iacC6pEfEwcO15XaBOV7IRYVS32b8lGQpHg/300?wx_fmt=jpeg/0", "kf_id": 2004, "kf_nick": "xs"}, {"kf_account": "n5ghnL0c0_@ZJ81bDtlUSL3lEsRC8nGXfoQFufUwu", "kf_headimgurl": "", "kf_id": 2005, "kf_nick": "x212s"}, {"kf_account": "n5ghnL0c0_@21", "kf_headimgurl": "", "kf_id": 2006, "kf_nick": "213"}, {"kf_account": "n5ghnL0c0_@w", "kf_headimgurl": "", "kf_id": 2007, "kf_nick": ""}, {"kf_account": "n5ghnL0c0_@w2121", "kf_headimgurl": "", "kf_id": 2008, "kf_nick": "1"}, {"kf_account": "EK6iI97eN_@2izwrx5IWvfPHQrGMr57WAujazrpOz", "kf_headimgurl": "", "kf_id": 2009, "kf_nick": "pAaezgB1qQw2brQb"}, {"kf_account": "F2Fyr7v0O_@OGWBBEUtZyWe2Tr9iyhZOgYoWNEF0T", "kf_headimgurl": "", "kf_id": 2010, "kf_nick": ""}, {"kf_account": "QpAVaoy2k_@CzUkbY7xXqNto9o89zTLvM5oMxwC4R", "kf_headimgurl": "", "kf_id": 2011, "kf_nick": "JPI4jmVvk67MPnpB"}, {"kf_account": "5D2PKS4hP_@baaqpLLA7LFFqaZKe0MWVKxYKEQDWV", "kf_headimgurl": "", "kf_id": 2012, "kf_nick": ""}, {"kf_account": "dfHBJQenO_@9uNMF5JvFmnKzrvdvbJinRkOmXvKHM", "kf_headimgurl": "", "kf_id": 2013, "kf_nick": "T9y3DQuN8okYbc5V"}, {"kf_account": "xNTix4n9H_@iGor1NP9jIjPDJU8PL1Ytb4UFmGzCP", "kf_headimgurl": "", "kf_id": 2014, "kf_nick": ""}, {"kf_account": "ertvLaKhv_@KIwKFp5Lzji8odIwGx8t484suX8cJ6", "kf_headimgurl": "", "kf_id": 2015, "kf_nick": "8SW7MgAItqZ5VYYY"}, {"kf_account": "gFYGiILCI_@haHaBP5TRuNhibm8Le5LPXuPbhmmjc", "kf_headimgurl": "", "kf_id": 2017, "kf_nick": "N8UknHMi3NiLaeyb"}, {"kf_account": "wb3KlS2uP_@Qzr3IQPD9Do9WCXpsCopCn42Y6LotF", "kf_headimgurl": "", "kf_id": 2019, "kf_nick": "O3jzu6ZDXmBUTgrF"}, {"kf_account": "fxQoMrvSX_@LznktN8oMDr1aWjYp4S6OStFdfw1Lc", "kf_headimgurl": "", "kf_id": 2021, "kf_nick": "RcaGzGy89NSHLJVe"}, {"kf_account": "Siss95TKc_@Q4LU17KQwFWbTMIm5VzHxc44JbJWtK", "kf_headimgurl": "", "kf_id": 2023, "kf_nick": "89uEdc9rftB72Q8H"}, {"kf_account": "mzk3VJdUD_@p5GnPuQcFB8XRYBPKxhgaA17vw9Wps", "kf_headimgurl": "", "kf_id": 2025, "kf_nick": "yXTg131F7LjuqfdW"}, {"kf_account": "RQkmXST9h_@oKF1pe2W2FVWPMgYf92uSGsKpBko7J", "kf_headimgurl": "", "kf_id": 2027, "kf_nick": "NQCkOVLGtPvHsXs4"}, {"kf_account": "NRTw4x7YL_@hdYR4LuWEWJZ0iWoe4xQsNqC2IgoHi", "kf_headimgurl": "", "kf_id": 2029, "kf_nick": "o7GoTY46wcUR01xj"}, {"kf_account": "Sc0NwcNGk_@VEMEOZM7OcI5xki4zl8y3Hvt4VFg45", "kf_headimgurl": "", "kf_id": 2031, "kf_nick": "JT7VIs5Dh044GsQ5"}, {"kf_account": "wCy20qT7H_@45KjVBrI9EIEi4eNouGgCiEjiReqBd", "kf_headimgurl": "", "kf_id": 2033, "kf_nick": "bbvPpBF9ZYQGIYW3"}, {"kf_account": "qSnj5Ax5H_@qB4OcJMOHSIdnmlfTJY6h5o1XBiqme", "kf_headimgurl": "", "kf_id": 2035, "kf_nick": "r9vd7b0QCs328ZyF"}, {"kf_account": "wh9VL9sOF_@Qvh1zgSbujoV12kh9DMZfP8jc85uwJ", "kf_headimgurl": "", "kf_id": 2037, "kf_nick": "TrFoPT8NYAWjF2D6"}, {"kf_account": "adad@111", "kf_headimgurl": "http://mmbiz.qpic.cn/mmbiz_png/70AOWquMz5EWeRhjGXNe18aDevrLcE1WfdvvBNgHoLxVF4JqFrdsq03UicDgVW3Ir2mNpRKhMic4fem2BUWUYF8Q/300?wx_fmt=png/0", "kf_id": 2039, "kf_nick": "\u4e1c\u4e1c"}, {"kf_account": "Sandy12_@test", "kf_headimgurl": "", "kf_id": 2040, "kf_nick": "\u73ca\u8fea"}, {"kf_account": "Sandy666_@test", "kf_headimgurl": "", "kf_id": 2041, "kf_nick": "\u73ca\u8fea"}, {"kf_account": "Sedfsg@testetestetestetestetesteteste", "kf_headimgurl": "", "kf_id": 2042, "kf_nick": "\u73ca\u8fea"}, {"kf_account": "DC57zGQYE_@NB3wV7DnMYwQCeUEt96bRYvKRD0iAg", "kf_headimgurl": "", "kf_id": 2043, "kf_nick": "UCPmuKrrSmUv54AJ"}, {"kf_account": "KxPb8pqEx_@ETxYpWnwJRV29vsmw4dgvjOmECVz3b", "kf_headimgurl": "", "kf_id": 2045, "kf_nick": "CrkexMyMWksO2PRr"}]}"}
{"CreateTime": "2024-05-16 12:34:41", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【上传客服头像接口】用例1：参数全部正确(jpeg格式)- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:34:41", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【上传客服头像接口】用例1：参数全部正确(jpeg格式)- 测试用例,执行成功！实际响应结果为：{'errcode': 0, 'errmsg': 'ok'}"}
{"CreateTime": "2024-05-16 12:34:41", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【上传客服头像接口】用例1：参数全部正确(jpeg格式)- 测试用例,执行成功！实际响应结果为：{"errcode": 0, "errmsg": "ok"}"}
{"CreateTime": "2024-05-16 12:34:44", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【上传客服头像接口】用例2：头像size超过限制大小- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:34:44", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【上传客服头像接口】用例2：头像size超过限制大小- 测试用例,执行成功！实际响应结果为：{'errcode': 45002, 'errmsg': 'content size out of limit rid: 66458ce1-1ecc8862-671f98d7'}"}
{"CreateTime": "2024-05-16 12:34:44", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【上传客服头像接口】用例2：头像size超过限制大小- 测试用例,执行成功！实际响应结果为：{"errcode": 45002, "errmsg": "content size out of limit rid: 66458ce1-1ecc8862-671f98d7"}"}
{"CreateTime": "2024-05-16 12:34:44", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【上传客服头像接口】用例3：参数全部正确(png格式)- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:34:44", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【上传客服头像接口】用例3：参数全部正确(png格式)- 测试用例,执行成功！实际响应结果为：{'errcode': 0, 'errmsg': 'ok'}"}
{"CreateTime": "2024-05-16 12:34:44", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【上传客服头像接口】用例3：参数全部正确(png格式)- 测试用例,执行成功！实际响应结果为：{"errcode": 0, "errmsg": "ok"}"}
{"CreateTime": "2024-05-16 12:34:45", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【上传客服头像接口】用例4：头像上传为空- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:34:45", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【上传客服头像接口】用例4：头像上传为空- 测试用例,执行成功！实际响应结果为：{'errcode': 41005, 'errmsg': 'media data missing hint: [QFHc1pore-4_wpQA] rid: 66458ce4-6f0ccdaa-3f28f110'}"}
{"CreateTime": "2024-05-16 12:34:45", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【上传客服头像接口】用例4：头像上传为空- 测试用例,执行成功！实际响应结果为：{"errcode": 41005, "errmsg": "media data missing hint: [QFHc1pore-4_wpQA] rid: 66458ce4-6f0ccdaa-3f28f110"}"}
{"CreateTime": "2024-05-16 12:34:45", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【上传客服头像接口】用例5：头像上传格式错误（不支持的媒体类型）- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:34:45", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【上传客服头像接口】用例5：头像上传格式错误（不支持的媒体类型）- 测试用例,执行成功！实际响应结果为：{'errcode': 40005, 'errmsg': 'invalid file type hint: [QFHcKUore-yKNkeA] rid: 66458ce5-1c2fb456-2767452a'}"}
{"CreateTime": "2024-05-16 12:34:45", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【上传客服头像接口】用例5：头像上传格式错误（不支持的媒体类型）- 测试用例,执行成功！实际响应结果为：{"errcode": 40005, "errmsg": "invalid file type hint: [QFHcKUore-yKNkeA] rid: 66458ce5-1c2fb456-2767452a"}"}
{"CreateTime": "2024-05-16 12:34:46", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【上传客服头像接口】用例6：无效的客服账号- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:34:46", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【上传客服头像接口】用例6：无效的客服账号- 测试用例,执行成功！实际响应结果为：{'errcode': 65401, 'errmsg': 'invalid custom service account hint: [QFHc1pore-Oi56TA] rid: 66458ce5-1c573f12-596737a7'}"}
{"CreateTime": "2024-05-16 12:34:46", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【上传客服头像接口】用例6：无效的客服账号- 测试用例,执行成功！实际响应结果为：{"errcode": 65401, "errmsg": "invalid custom service account hint: [QFHc1pore-Oi56TA] rid: 66458ce5-1c573f12-596737a7"}"}
{"CreateTime": "2024-05-16 12:34:46", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【获取鉴权接口】用例1：grant_type参数为空/缺失- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:34:46", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【获取鉴权接口】用例1：grant_type参数为空/缺失- 测试用例,执行成功！实际响应结果为：{'errcode': 40002, 'errmsg': 'invalid grant_type rid: 66458ce6-1e64b3d0-161c4695'}"}
{"CreateTime": "2024-05-16 12:34:46", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【获取鉴权接口】用例2：grant_type参数错误- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:34:46", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【获取鉴权接口】用例2：grant_type参数错误- 测试用例,执行成功！实际响应结果为：{'errcode': 40002, 'errmsg': 'invalid grant_type rid: 66458ce6-783b3aed-60ab6143'}"}
{"CreateTime": "2024-05-16 12:34:46", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【获取鉴权接口】用例3：appid参数为空/缺失- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:34:46", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【获取鉴权接口】用例3：appid参数为空/缺失- 测试用例,执行成功！实际响应结果为：{'errcode': 41002, 'errmsg': 'appid missing rid: 66458ce7-40dc2cea-2a4b7571'}"}
{"CreateTime": "2024-05-16 12:34:47", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【获取鉴权接口】用例4：appid参数错误- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:34:47", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【获取鉴权接口】用例4：appid参数错误- 测试用例,执行成功！实际响应结果为：{'errcode': 40013, 'errmsg': 'invalid appid rid: 66458ce7-1fffc63d-1e43f2a5'}"}
{"CreateTime": "2024-05-16 12:34:47", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【获取鉴权接口】用例5：secret参数为空/缺失- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:34:47", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【获取鉴权接口】用例5：secret参数为空/缺失- 测试用例,执行成功！实际响应结果为：{'errcode': 41004, 'errmsg': 'appsecret missing rid: 66458ce7-480e49b5-0c27f0f3'}"}
{"CreateTime": "2024-05-16 12:34:47", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【获取鉴权接口】用例6：secret参数错误- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:34:47", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【获取鉴权接口】用例6：secret参数错误- 测试用例,执行成功！实际响应结果为：{'errcode': 40125, 'errmsg': 'invalid appsecret rid: 66458ce7-67af963a-7d467b94'}"}
{"CreateTime": "2024-05-16 12:34:48", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【获取鉴权接口】用例7：所有参数正确- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:34:48", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【获取鉴权接口】用例7：所有参数正确- 测试用例,执行成功！实际响应结果为：{'access_token': '80_rHRZmPQdgpqHc8vN4HDuDv1T_sajjBcM01O7WroGUbqISLZnTa3TTdSbgUGxWDQUpI3PMz7DkQLVrGGnb2qDYxrCUfjhtw1MNgbBuRGi5q6Yzfb04VlnbbOBUPESSBeACAKKT', 'expires_in': 7200}"}
{"CreateTime": "2024-05-16 12:34:48", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【创建永久二维码ticket接口】用例1：参数全部正确- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:34:48", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【创建永久二维码ticket接口】用例1：参数全部正确- 测试用例,执行成功！实际响应结果为：{"ticket": "gQG08DwAAAAAAAAAAS5odHRwOi8vd2VpeGluLnFxLmNvbS9xLzAySGhvZndkZUVmb0QxMDAwMGcwM3gAAgTojEVmAwQAAAAA", "url": "http://weixin.qq.com/q/02HhofwdeEfoD10000g03x"}"}
{"CreateTime": "2024-05-16 12:34:48", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【创建永久二维码ticket接口】用例1：参数全部正确- 测试用例,执行成功！实际响应结果为：{"ticket": "gQG08DwAAAAAAAAAAS5odHRwOi8vd2VpeGluLnFxLmNvbS9xLzAySGhvZndkZUVmb0QxMDAwMGcwM3gAAgTojEVmAwQAAAAA", "url": "http://weixin.qq.com/q/02HhofwdeEfoD10000g03x"}"}
{"CreateTime": "2024-05-16 12:34:48", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【通过ticket换取二维码接口】用例1：参数全部正确- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:34:49", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "用例1：参数全部正确(多个用户)- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:34:49", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "用例1：参数全部正确(多个用户)- 测试用例,执行成功！实际响应结果为：{"user_info_list": [{"subscribe": 1, "openid": "oDqjY5-wrnuyN9OBXaN0md8rLsyQ", "nickname": "", "sex": 0, "language": "zh_CN", "city": "", "province": "", "country": "", "headimgurl": "", "subscribe_time": 1642558939, "remark": "", "groupid": 0, "tagid_list": [], "subscribe_scene": "ADD_SCENE_QR_CODE", "qr_scene": 0, "qr_scene_str": ""}, {"subscribe": 1, "openid": "oDqjY50sO3UCivurTfvnATmCMuN0", "nickname": "", "sex": 0, "language": "zh_CN", "city": "", "province": "", "country": "", "headimgurl": "", "subscribe_time": 1642558819, "remark": "hq7olqs2hrH178OjZfLoHWubWnx5cp", "groupid": 2, "tagid_list": [2], "subscribe_scene": "ADD_SCENE_QR_CODE", "qr_scene": 0, "qr_scene_str": ""}]}"}
{"CreateTime": "2024-05-16 12:34:49", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "用例1：参数全部正确(多个用户)- 测试用例,执行成功！实际响应结果为：{"user_info_list": [{"subscribe": 1, "openid": "oDqjY5-wrnuyN9OBXaN0md8rLsyQ", "nickname": "", "sex": 0, "language": "zh_CN", "city": "", "province": "", "country": "", "headimgurl": "", "subscribe_time": 1642558939, "remark": "", "groupid": 0, "tagid_list": [], "subscribe_scene": "ADD_SCENE_QR_CODE", "qr_scene": 0, "qr_scene_str": ""}, {"subscribe": 1, "openid": "oDqjY50sO3UCivurTfvnATmCMuN0", "nickname": "", "sex": 0, "language": "zh_CN", "city": "", "province": "", "country": "", "headimgurl": "", "subscribe_time": 1642558819, "remark": "hq7olqs2hrH178OjZfLoHWubWnx5cp", "groupid": 2, "tagid_list": [2], "subscribe_scene": "ADD_SCENE_QR_CODE", "qr_scene": 0, "qr_scene_str": ""}]}"}
{"CreateTime": "2024-05-16 12:34:49", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "用例2：参数全部正确(单个用户)- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:34:49", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "用例2：参数全部正确(单个用户)- 测试用例,执行成功！实际响应结果为：{"user_info_list": [{"subscribe": 1, "openid": "oDqjY5zgUEgHwL0Tas7HJv566208", "nickname": "", "sex": 0, "language": "zh_CN", "city": "", "province": "", "country": "", "headimgurl": "", "subscribe_time": 1642558738, "remark": "\u548c\u54af\u54e6\u65f6\u5019", "groupid": 2, "tagid_list": [2], "subscribe_scene": "ADD_SCENE_QR_CODE", "qr_scene": 0, "qr_scene_str": ""}]}"}
{"CreateTime": "2024-05-16 12:34:49", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "用例2：参数全部正确(单个用户)- 测试用例,执行成功！实际响应结果为：{"user_info_list": [{"subscribe": 1, "openid": "oDqjY5zgUEgHwL0Tas7HJv566208", "nickname": "", "sex": 0, "language": "zh_CN", "city": "", "province": "", "country": "", "headimgurl": "", "subscribe_time": 1642558738, "remark": "\u548c\u54af\u54e6\u65f6\u5019", "groupid": 2, "tagid_list": [2], "subscribe_scene": "ADD_SCENE_QR_CODE", "qr_scene": 0, "qr_scene_str": ""}]}"}
{"CreateTime": "2024-05-16 12:34:50", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "用例3：存在单个无效的openid- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:34:50", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "用例3：存在单个无效的openid- 测试用例,执行成功！实际响应结果为：{'errcode': 40003, 'errmsg': 'invalid openid hint: [QFHcloEVf-CgcnDA] rid: 66458cea-6c6922bc-56e0f36e'}"}
{"CreateTime": "2024-05-16 12:34:50", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "用例3：存在单个无效的openid- 测试用例,执行成功！实际响应结果为：{"errcode": 40003, "errmsg": "invalid openid hint: [QFHcloEVf-CgcnDA] rid: 66458cea-6c6922bc-56e0f36e"}"}
{"CreateTime": "2024-05-16 12:34:50", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "用例4：存在多个无效的openid- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:34:50", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "用例4：存在多个无效的openid- 测试用例,执行成功！实际响应结果为：{'errcode': 40003, 'errmsg': 'invalid openid hint: [QFHc68sQf-jui_.A] rid: 66458cea-32ee002a-3ce6e562'}"}
{"CreateTime": "2024-05-16 12:34:50", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "用例4：存在多个无效的openid- 测试用例,执行成功！实际响应结果为：{"errcode": 40003, "errmsg": "invalid openid hint: [QFHc68sQf-jui_.A] rid: 66458cea-32ee002a-3ce6e562"}"}
{"CreateTime": "2024-05-16 12:34:50", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "用例5：empty post data- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:34:50", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "用例5：empty post data- 测试用例,执行成功！实际响应结果为：{'errcode': 44002, 'errmsg': 'empty post data hint: [QFHcevj2e-G4F1Ra] rid: 66458cea-29cdc95e-02d66d02'}"}
{"CreateTime": "2024-05-16 12:34:50", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "用例5：empty post data- 测试用例,执行成功！实际响应结果为：{"errcode": 44002, "errmsg": "empty post data hint: [QFHcevj2e-G4F1Ra] rid: 66458cea-29cdc95e-02d66d02"}"}
{"CreateTime": "2024-05-16 12:34:51", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "用例1：参数openid存在- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:34:51", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "用例1：参数openid存在- 测试用例,执行成功！实际响应结果为：{'subscribe': 1, 'openid': 'oDqjY5zgUEgHwL0Tas7HJv566208', 'nickname': '', 'sex': 0, 'language': 'zh_CN', 'city': '', 'province': '', 'country': '', 'headimgurl': '', 'subscribe_time': 1642558738, 'remark': '和咯哦时候', 'groupid': 2, 'tagid_list': [2], 'subscribe_scene': 'ADD_SCENE_QR_CODE', 'qr_scene': 0, 'qr_scene_str': ''}"}
{"CreateTime": "2024-05-16 12:34:51", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "用例1：参数openid存在- 测试用例,执行成功！实际响应结果为：{'subscribe': 1, 'openid': 'oDqjY5zgUEgHwL0Tas7HJv566208', 'nickname': '', 'sex': 0, 'language': 'zh_CN', 'city': '', 'province': '', 'country': '', 'headimgurl': '', 'subscribe_time': 1642558738, 'remark': '和咯哦时候', 'groupid': 2, 'tagid_list': [2], 'subscribe_scene': 'ADD_SCENE_QR_CODE', 'qr_scene': 0, 'qr_scene_str': ''}"}
{"CreateTime": "2024-05-16 12:34:51", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "用例2：openid参数无效- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:34:51", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "用例2：openid参数无效- 测试用例,执行成功！实际响应结果为：{'errcode': 40003, 'errmsg': 'invalid openid hint: [QFHcJryWf-iHviRA] rid: 66458ceb-5520fb8c-579506ae'}"}
{"CreateTime": "2024-05-16 12:34:51", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "用例2：openid参数无效- 测试用例,执行成功！实际响应结果为：{"errcode": 40003, "errmsg": "invalid openid hint: [QFHcJryWf-iHviRA] rid: 66458ceb-5520fb8c-579506ae"}"}
{"CreateTime": "2024-05-16 12:34:51", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "用例3：openid为null- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:34:51", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "用例3：openid为null- 测试用例,执行成功！实际响应结果为：{'errcode': 40003, 'errmsg': 'invalid openid hint: [QFHcNXnre-t6Fs9] rid: 66458ceb-4a0e005b-6a6cf771'}"}
{"CreateTime": "2024-05-16 12:34:51", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "用例3：openid为null- 测试用例,执行成功！实际响应结果为：{"errcode": 40003, "errmsg": "invalid openid hint: [QFHcNXnre-t6Fs9] rid: 66458ceb-4a0e005b-6a6cf771"}"}
{"CreateTime": "2024-05-16 12:34:52", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "用例4：openid为空- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:34:52", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "用例4：openid为空- 测试用例,执行成功！实际响应结果为：{'errcode': 40003, 'errmsg': 'invalid openid hint: [QFHcDe3Dk-qhRSiA] rid: 66458cec-7f1dad19-16999cc3'}"}
{"CreateTime": "2024-05-16 12:34:52", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "用例4：openid为空- 测试用例,执行成功！实际响应结果为：{"errcode": 40003, "errmsg": "invalid openid hint: [QFHcDe3Dk-qhRSiA] rid: 66458cec-7f1dad19-16999cc3"}"}
{"CreateTime": "2024-05-16 12:34:52", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【获取用户列表接口】用例1：所有参数正常- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:34:52", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【获取用户列表接口】用例1：所有参数正常- 测试用例,执行成功！实际响应结果为：{"total": 4, "count": 4, "data": {"openid": ["oDqjY5zgUEgHwL0Tas7HJv566208", "oDqjY5xYp972631jH7IsDR3pl2x0", "oDqjY5-wrnuyN9OBXaN0md8rLsyQ", "oDqjY50sO3UCivurTfvnATmCMuN0"]}, "next_openid": "oDqjY50sO3UCivurTfvnATmCMuN0"}"}
{"CreateTime": "2024-05-16 12:34:52", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【获取用户列表接口】用例1：所有参数正常- 测试用例,执行成功！实际响应结果为：{"total": 4, "count": 4, "data": {"openid": ["oDqjY5zgUEgHwL0Tas7HJv566208", "oDqjY5xYp972631jH7IsDR3pl2x0", "oDqjY5-wrnuyN9OBXaN0md8rLsyQ", "oDqjY50sO3UCivurTfvnATmCMuN0"]}, "next_openid": "oDqjY50sO3UCivurTfvnATmCMuN0"}"}
{"CreateTime": "2024-05-16 12:34:52", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【获取用户列表接口】用例1：所有参数正常- 测试用例,执行成功！实际响应结果为：{"total": 4, "count": 4, "data": {"openid": ["oDqjY5zgUEgHwL0Tas7HJv566208", "oDqjY5xYp972631jH7IsDR3pl2x0", "oDqjY5-wrnuyN9OBXaN0md8rLsyQ", "oDqjY50sO3UCivurTfvnATmCMuN0"]}, "next_openid": "oDqjY50sO3UCivurTfvnATmCMuN0"}"}
{"CreateTime": "2024-05-16 12:34:53", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【获取用户列表接口】用例2：next_openid无效为数字，参数无效- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:34:53", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【获取用户列表接口】用例2：next_openid无效为数字，参数无效- 测试用例,执行成功！实际响应结果为：{'errcode': 40003, 'errmsg': 'invalid openid hint: [QFHcDe3Dk-psPFha] rid: 66458cec-4f63e22b-1e75876c'}"}
{"CreateTime": "2024-05-16 12:34:53", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【获取用户列表接口】用例2：next_openid无效为数字，参数无效- 测试用例,执行成功！实际响应结果为：{"errcode": 40003, "errmsg": "invalid openid hint: [QFHcDe3Dk-psPFha] rid: 66458cec-4f63e22b-1e75876c"}"}
{"CreateTime": "2024-05-16 12:34:53", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【获取用户列表接口】用例3：next_openid为大小写字母，参数无效- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:34:53", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【获取用户列表接口】用例3：next_openid为大小写字母，参数无效- 测试用例,执行成功！实际响应结果为：{'errcode': 40003, 'errmsg': 'invalid openid hint: [QFHcNmNTO-CLLs5a] rid: 66458ced-7d3a8ce9-35ca0043'}"}
{"CreateTime": "2024-05-16 12:34:53", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【获取用户列表接口】用例3：next_openid为大小写字母，参数无效- 测试用例,执行成功！实际响应结果为：{"errcode": 40003, "errmsg": "invalid openid hint: [QFHcNmNTO-CLLs5a] rid: 66458ced-7d3a8ce9-35ca0043"}"}
{"CreateTime": "2024-05-16 12:34:53", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【设置用户备注名接口】用例1：所有参数正常- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:34:53", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【设置用户备注名接口】用例1：所有参数正常- 测试用例,执行成功！实际响应结果为：{'errcode': 0, 'errmsg': 'ok'}"}
{"CreateTime": "2024-05-16 12:34:53", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【设置用户备注名接口】用例1：所有参数正常- 测试用例,执行成功！实际响应结果为：{"errcode": 0, "errmsg": "ok"}"}
{"CreateTime": "2024-05-16 12:34:54", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【设置用户备注名接口】用例2：openid参数为空- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:34:54", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【设置用户备注名接口】用例2：openid参数为空- 测试用例,执行成功！实际响应结果为：{'errcode': 40003, 'errmsg': 'invalid openid hint: [QFHcrFeVf-fGyD] rid: 66458cee-7ec5ff96-2a2b35dd'}"}
{"CreateTime": "2024-05-16 12:34:54", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【设置用户备注名接口】用例2：openid参数为空- 测试用例,执行成功！实际响应结果为：{"errcode": 40003, "errmsg": "invalid openid hint: [QFHcrFeVf-fGyD] rid: 66458cee-7ec5ff96-2a2b35dd"}"}
{"CreateTime": "2024-05-16 12:34:54", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【设置用户备注名接口】用例3：openid参数不符合规则- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:34:54", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【设置用户备注名接口】用例3：openid参数不符合规则- 测试用例,执行成功！实际响应结果为：{'errcode': 40003, 'errmsg': 'invalid openid hint: [QFHcx0mre-CG3kCa] rid: 66458cee-6ada3d3c-727729ec'}"}
{"CreateTime": "2024-05-16 12:34:54", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【设置用户备注名接口】用例3：openid参数不符合规则- 测试用例,执行成功！实际响应结果为：{"errcode": 40003, "errmsg": "invalid openid hint: [QFHcx0mre-CG3kCa] rid: 66458cee-6ada3d3c-727729ec"}"}
{"CreateTime": "2024-05-16 12:34:54", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【设置用户备注名接口】用例4：remark参数为空- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:34:54", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【设置用户备注名接口】用例4：remark参数为空- 测试用例,执行成功！实际响应结果为：{'errcode': 0, 'errmsg': 'ok'}"}
{"CreateTime": "2024-05-16 12:34:54", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【设置用户备注名接口】用例4：remark参数为空- 测试用例,执行成功！实际响应结果为：{"errcode": 0, "errmsg": "ok"}"}
{"CreateTime": "2024-05-16 12:34:55", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【设置用户备注名接口】用例5：openid不存在/没注册- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:34:55", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【设置用户备注名接口】用例5：openid不存在/没注册- 测试用例,执行成功！实际响应结果为：{'errcode': 43004, 'errmsg': 'require subscribe hint: [QFHc58sQf-A6lCKA] rid: 66458cef-103a4802-5b43544d'}"}
{"CreateTime": "2024-05-16 12:34:55", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【设置用户备注名接口】用例5：openid不存在/没注册- 测试用例,执行成功！实际响应结果为：{"errcode": 43004, "errmsg": "require subscribe hint: [QFHc58sQf-A6lCKA] rid: 66458cef-103a4802-5b43544d"}"}
{"CreateTime": "2024-05-16 12:34:55", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【创建用户标签接口】用例1：参数全部正确- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:34:56", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【创建用户标签接口】用例2：参数name为""- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:34:56", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【创建用户标签接口】用例2：参数name为""- 测试用例,执行成功！实际响应结果为：{'errcode': 45157, 'errmsg': 'invalid tag name hint: [QFHcjBeVf-Jwk.na] rid: 66458cf0-192582cd-5ae6538d'}"}
{"CreateTime": "2024-05-16 12:34:56", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【创建用户标签接口】用例2：参数name为""- 测试用例,执行成功！实际响应结果为：{"errcode": 45157, "errmsg": "invalid tag name hint: [QFHcjBeVf-Jwk.na] rid: 66458cf0-192582cd-5ae6538d"}"}
{"CreateTime": "2024-05-16 12:34:56", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【创建用户标签接口】用例3：参数name已存在- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:34:56", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【创建用户标签接口】用例3：参数name已存在- 测试用例,执行成功！实际响应结果为：{'errcode': 45157, 'errmsg': 'invalid tag name hint: [QFHccQwRf-IeYRKA] rid: 66458cf0-38e45eb5-6e762127'}"}
{"CreateTime": "2024-05-16 12:34:56", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【创建用户标签接口】用例3：参数name已存在- 测试用例,执行成功！实际响应结果为：{"errcode": 45157, "errmsg": "invalid tag name hint: [QFHccQwRf-IeYRKA] rid: 66458cf0-38e45eb5-6e762127"}"}
{"CreateTime": "2024-05-16 12:34:57", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【创建用户标签接口】用例4：参数name为null- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:34:57", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【创建用户标签接口】用例4：参数name为null- 测试用例,执行成功！实际响应结果为：{'errcode': 45157, 'errmsg': 'invalid tag name hint: [QFHcs0mre-Jbe.fa] rid: 66458cf1-0178d325-2eee23a7'}"}
{"CreateTime": "2024-05-16 12:34:57", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【创建用户标签接口】用例4：参数name为null- 测试用例,执行成功！实际响应结果为：{"errcode": 45157, "errmsg": "invalid tag name hint: [QFHcs0mre-Jbe.fa] rid: 66458cf1-0178d325-2eee23a7"}"}
{"CreateTime": "2024-05-16 12:34:57", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【创建用户标签接口】用例5：参数name超过30个字节- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:34:57", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【创建用户标签接口】用例5：参数name超过30个字节- 测试用例,执行成功！实际响应结果为：{'errcode': 45158, 'errmsg': 'tag name too long hint: [QFHc0Ymre-Ja.dcA] rid: 66458cf1-1210cb9e-669f04a8'}"}
{"CreateTime": "2024-05-16 12:34:57", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【创建用户标签接口】用例5：参数name超过30个字节- 测试用例,执行成功！实际响应结果为：{"errcode": 45158, "errmsg": "tag name too long hint: [QFHc0Ymre-Ja.dcA] rid: 66458cf1-1210cb9e-669f04a8"}"}
{"CreateTime": "2024-05-16 12:34:57", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【创建用户标签接口】用例6：请求body缺失- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:34:57", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【创建用户标签接口】用例6：请求body缺失- 测试用例,执行成功！实际响应结果为：{'errcode': 44002, 'errmsg': 'empty post data hint: [QFHcevj2e-259TVa] rid: 66458cf1-5f23ebff-084463eb'}"}
{"CreateTime": "2024-05-16 12:34:57", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【创建用户标签接口】用例6：请求body缺失- 测试用例,执行成功！实际响应结果为：{"errcode": 44002, "errmsg": "empty post data hint: [QFHcevj2e-259TVa] rid: 66458cf1-5f23ebff-084463eb"}"}
{"CreateTime": "2024-05-16 12:34:58", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【删除用户标签接口】用例1：全部参数正确- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:34:58", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【删除用户标签接口】用例1：全部参数正确- 测试用例,执行成功！实际响应结果为：{'errcode': 0, 'errmsg': 'ok'}"}
{"CreateTime": "2024-05-16 12:34:58", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【删除用户标签接口】用例1：全部参数正确- 测试用例,执行成功！实际响应结果为：{"errcode": 0, "errmsg": "ok"}"}
{"CreateTime": "2024-05-16 12:34:58", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【删除用户标签接口】用例2：删除用户标签-id参数为空/缺失- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:34:58", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【删除用户标签接口】用例2：删除用户标签-id参数为空/缺失- 测试用例,执行成功！实际响应结果为：{'errcode': 45058, 'errmsg': "can't modify sys tag hint: [QFHcNXnre-1Sr7va] rid: 66458cf2-4213761d-0b8bc7ff"}"}
{"CreateTime": "2024-05-16 12:34:58", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【删除用户标签接口】用例2：删除用户标签-id参数为空/缺失- 测试用例,执行成功！实际响应结果为：{"errcode": 45058, "errmsg": "can't modify sys tag hint: [QFHcNXnre-1Sr7va] rid: 66458cf2-4213761d-0b8bc7ff"}"}
{"CreateTime": "2024-05-16 12:34:58", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【删除用户标签接口】用例3：删除用户标签-参数id为小数- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:34:58", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【删除用户标签接口】用例3：删除用户标签-参数id为小数- 测试用例,执行成功！实际响应结果为：{'errcode': 47001, 'errmsg': 'data format error hint: [QFHcc1j2e-GG7sua] rid: 66458cf2-3506cb0a-576987e0'}"}
{"CreateTime": "2024-05-16 12:34:59", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【删除用户标签接口】用例3：删除用户标签-参数id为小数- 测试用例,执行成功！实际响应结果为：{"errcode": 47001, "errmsg": "data format error hint: [QFHcc1j2e-GG7sua] rid: 66458cf2-3506cb0a-576987e0"}"}
{"CreateTime": "2024-05-16 12:34:59", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【删除用户标签接口】用例4：删除用户标签-参数id为中文汉字- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:34:59", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【删除用户标签接口】用例4：删除用户标签-参数id为中文汉字- 测试用例,执行成功！实际响应结果为：{'errcode': 47001, 'errmsg': 'data format error hint: [QFHcNXnre-8dpDaa] rid: 66458cf3-08915563-34865b54'}"}
{"CreateTime": "2024-05-16 12:34:59", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【删除用户标签接口】用例4：删除用户标签-参数id为中文汉字- 测试用例,执行成功！实际响应结果为：{"errcode": 47001, "errmsg": "data format error hint: [QFHcNXnre-8dpDaa] rid: 66458cf3-08915563-34865b54"}"}
{"CreateTime": "2024-05-16 12:34:59", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【删除用户标签接口】用例5：删除用户标签-参数id含特殊符号- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:34:59", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【删除用户标签接口】用例5：删除用户标签-参数id含特殊符号- 测试用例,执行成功！实际响应结果为：{'errcode': 47001, 'errmsg': 'data format error hint: [QFHcmi5rf-mqGBIA] rid: 66458cf3-540eddd3-6981f52f'}"}
{"CreateTime": "2024-05-16 12:34:59", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【删除用户标签接口】用例5：删除用户标签-参数id含特殊符号- 测试用例,执行成功！实际响应结果为：{"errcode": 47001, "errmsg": "data format error hint: [QFHcmi5rf-mqGBIA] rid: 66458cf3-540eddd3-6981f52f"}"}
{"CreateTime": "2024-05-16 12:35:00", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【删除用户标签接口】用例6：删除用户标签-参数id为系统id=1- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:35:00", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【删除用户标签接口】用例6：删除用户标签-参数id为系统id=1- 测试用例,执行成功！实际响应结果为：{'errcode': 45058, 'errmsg': "can't modify sys tag hint: [rFHcP1obk-gF4HAA] rid: 66458cf3-4fad07f9-377f65ee"}"}
{"CreateTime": "2024-05-16 12:35:00", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【删除用户标签接口】用例6：删除用户标签-参数id为系统id=1- 测试用例,执行成功！实际响应结果为：{"errcode": 45058, "errmsg": "can't modify sys tag hint: [rFHcP1obk-gF4HAA] rid: 66458cf3-4fad07f9-377f65ee"}"}
{"CreateTime": "2024-05-16 12:35:00", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【删除用户标签接口】用例7：删除用户标签-参数id为系统id=2- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:35:00", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【删除用户标签接口】用例7：删除用户标签-参数id为系统id=2- 测试用例,执行成功！实际响应结果为：{'errcode': 45058, 'errmsg': "can't modify sys tag hint: [rFHcb9sQf-LSRg.a] rid: 66458cf4-35bd308e-06251edb"}"}
{"CreateTime": "2024-05-16 12:35:00", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【删除用户标签接口】用例7：删除用户标签-参数id为系统id=2- 测试用例,执行成功！实际响应结果为：{"errcode": 45058, "errmsg": "can't modify sys tag hint: [rFHcb9sQf-LSRg.a] rid: 66458cf4-35bd308e-06251edb"}"}
{"CreateTime": "2024-05-16 12:35:00", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【删除用户标签接口】用例8：删除用户标签-参数id为系统id=3- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:35:00", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【删除用户标签接口】用例8：删除用户标签-参数id为系统id=3- 测试用例,执行成功！实际响应结果为：{'errcode': 45058, 'errmsg': "can't modify sys tag hint: [rFHc1u5Vf-7bZ44] rid: 66458cf4-0be845d2-22fc7a49"}"}
{"CreateTime": "2024-05-16 12:35:00", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【删除用户标签接口】用例8：删除用户标签-参数id为系统id=3- 测试用例,执行成功！实际响应结果为：{"errcode": 45058, "errmsg": "can't modify sys tag hint: [rFHc1u5Vf-7bZ44] rid: 66458cf4-0be845d2-22fc7a49"}"}
{"CreateTime": "2024-05-16 12:35:01", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【获取标签下粉丝列表】用例1：参数正确- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:35:01", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【获取标签下粉丝列表】用例1：参数正确- 测试用例,执行成功！实际响应结果为：{"count": 0}"}
{"CreateTime": "2024-05-16 12:35:01", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【获取标签下粉丝列表】用例2：next_openid非法- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:35:01", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【获取标签下粉丝列表】用例2：next_openid非法- 测试用例,执行成功！实际响应结果为：{'errcode': 40003, 'errmsg': 'invalid openid hint: [rFHcdpEVf-DUjtmA] rid: 66458cf5-27f79f2a-2e80833a'}"}
{"CreateTime": "2024-05-16 12:35:01", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【获取标签下粉丝列表】用例2：next_openid非法- 测试用例,执行成功！实际响应结果为：{"errcode": 40003, "errmsg": "invalid openid hint: [rFHcdpEVf-DUjtmA] rid: 66458cf5-27f79f2a-2e80833a"}"}
{"CreateTime": "2024-05-16 12:35:02", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【查询用户标签接口】用例3：参数正确- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:35:02", "filename": "Assert.py", "line": "37", "levelname": "ERROR", "message": "【查询用户标签接口】用例3：参数正确,执行失败！实际响应结果中不包含：星标组,实际结果为：{"tags": [{"id": 2, "name": "\u661f\u6807\u7ec4", "count": 2}, {"id": 437, "name": "6NAhh", "count": 0}, {"id": 446, "name": "bM345i0jia4mn6fPBFmJ7QGWmik9ys", "count": 0}, {"id": 465, "name": "n6xrg4uVm6ZyjxX", "count": 0}, {"id": 468, "name": "R2rhh", "count": 0}, {"id": 470, "name": "yAClJCq5BO", "count": 0}, {"id": 472, "name": "cou", "count": 0}, {"id": 474, "name": "3V8tlE59Z73VJbpGd4zdSpSmCraytu", "count": 0}, {"id": 486, "name": "5taiTDi6PU", "count": 0}, {"id": 488, "name": "zKZ", "count": 0}, {"id": 490, "name": "jR9Df4fkbkq4gf4nwJbiwrXeas57iy", "count": 0}, {"id": 491, "name": "95ZUQ4WY9IAeJ8W99A0D0DGY5Na1il", "count": 0}, {"id": 492, "name": "7GvOUrahheyigFU8F45tvPRN3Hsye6", "count": 0}, {"id": 493, "name": "SG2nTcPQeD203TVekOm87Gh8TxmYjR", "count": 0}, {"id": 495, "name": "hAv9W0afjYtjJiUz1CrjTGY2GaSrF1", "count": 0}, {"id": 496, "name": "EdPYsrH0IokQ52mwAjE6wKPxrlmOJB", "count": 0}, {"id": 499, "name": "SWh", "count": 0}, {"id": 500, "name": "7Kg77VxZ8qvCJs9V3XCrAxx2qGf10j", "count": 0}, {"id": 504, "name": "ZHI8jJBWVA", "count": 0}, {"id": 505, "name": "pFbk63LnZROpxaC3teRnGr6hnF1A0X", "count": 0}, {"id": 513, "name": "bsMnFvqzjwHv8eAMn3zdCNFF3BHvHX", "count": 0}, {"id": 514, "name": "i1NNAL4x250fug3pMnnvkpCKo8oqcs", "count": 0}, {"id": 515, "name": "PAudcEW0E9O0BxGZa51SiWEo6YXWL6", "count": 0}, {"id": 521, "name": "JMqtbffAbpsQmRxqA7FnyHPK0LZw9P", "count": 0}, {"id": 522, "name": "o242uUPw6iB5Vxk", "count": 0}, {"id": 542, "name": "QLaAf5luC5", "count": 0}, {"id": 544, "name": "HiCKilj71o", "count": 0}, {"id": 546, "name": "Z70qOCMcDk", "count": 0}, {"id": 547, "name": "UoFhyMgYNCXzGeb", "count": 0}, {"id": 548, "name": "\u8c22\u8c22", "count": 0}, {"id": 549, "name": "\u6d0b", "count": 0}, {"id": 550, "name": "PFup9bvvmvQ8qYbWEDG8dNwKkGbZqo", "count": 0}, {"id": 552, "name": "4o1LyLAi1ark0xrQ0fHsischKdLILu", "count": 0}, {"id": 554, "name": "\u5443\u5443\u5443", "count": 0}, {"id": 558, "name": "loEFtyTss3gAbDymORoeZxraga0l3V", "count": 0}, {"id": 569, "name": "weropw12345w", "count": 0}, {"id": 572, "name": "qwertyuiop1234567890", "count": 0}, {"id": 573, "name": "fbyfQBpjnTFYlBegWSirKPw6HN3AKn", "count": 0}, {"id": 577, "name": "2", "count": 0}, {"id": 578, "name": "dsrxFKghzCIIAw4egyNVkhN7v5mCXW", "count": 0}, {"id": 594, "name": "wVAcl7uGs9JLLkv", "count": 0}, {"id": 596, "name": "0IxKqS5RvS6KqJvcXiacSmBfWYZcy9", "count": 0}, {"id": 611, "name": "MffEBaMtAtA2bbCianwNoeYOh5wjcX", "count": 0}, {"id": 613, "name": "rLjCQoa2ZLeR9bEPsfN8dUdZWCTs1u", "count": 0}, {"id": 614, "name": "GDWrRxkVPhntb0vufpz5x9DPnb4NZa", "count": 0}, {"id": 615, "name": "oOUf2aANYBxjd6gycfQ3XE7RUQkY43", "count": 0}, {"id": 616, "name": "k0lFAv5GZsWXLIZA3g04L1vrySdYy4", "count": 0}, {"id": 619, "name": "QqF1lPjIzEdngLerkRz5RLGZm8Z6RI", "count": 0}, {"id": 621, "name": "zrmSN17MnpYdNrVQSpKlFnoHoy8zfY", "count": 0}, {"id": 623, "name": "KxhWpIWY3GjMlRvOZ9QeRSQZQlq96u", "count": 0}, {"id": 624, "name": "B75gbgaKRwE5ef4oYtbp1epWeGrUtn", "count": 0}, {"id": 625, "name": "VNY7Y6CVR5g42etyZCq18tFCJuEsOV", "count": 0}, {"id": 638, "name": "eWMPPSr0WCAyKDocwnkkjaD91zGzS0", "count": 0}, {"id": 641, "name": "\u5e73", "count": 0}, {"id": 642, "name": "pPOBhuXaXJ8TJSw0QtHT8Q9l7hIM4a", "count": 0}, {"id": 646, "name": "FhtNjgTv55F32dsacC8nwZIJy7mrDU", "count": 0}, {"id": 683, "name": "fswiW52fvR4z6jcEDNzsECjBEWO1ut", "count": 0}, {"id": 684, "name": "ZZ6vKyWb19KjaMCstzXusW5lLASCXt", "count": 0}, {"id": 685, "name": "dd85EknZT3OqQaa3uy7ELan4dsW9Oa", "count": 0}, {"id": 688, "name": "DFYfugKDG1zX3Ug", "count": 0}, {"id": 689, "name": "W3NS31Fi5VruXBJ", "count": 0}, {"id": 690, "name": "SkRAVppAKtvhrigVrhfP3XKkpeIV44", "count": 0}, {"id": 696, "name": "nVtOWlny23Jy6xw0uqqtaSY1nPUKYd", "count": 0}, {"id": 697, "name": "yzrETGvUXXRb1Xr", "count": 0}, {"id": 698, "name": "DVBvzk7gBS4bb7Wz2zZD045hZbPWeC", "count": 0}, {"id": 713, "name": "RL5NmBSZP4jOWxHmGxa30IQAGh6VMD", "count": 0}, {"id": 714, "name": "zSzk31Xitm5AiWJYZI86RO763dxXaz", "count": 0}, {"id": 715, "name": "P8Jd48rFnXdI4xQ7PxVQ5wQotDQoyD", "count": 0}, {"id": 716, "name": "Gel7pOR7MBOL9Gp75fTeUGnLuETdjD", "count": 0}, {"id": 717, "name": "5R0fDLXAxnNThcNCLrVuAow0wkFbms", "count": 0}, {"id": 718, "name": "\\u661f\\u6807\\u7ec4", "count": 0}, {"id": 721, "name": "jBi650dP1mRQkUw", "count": 0}, {"id": 722, "name": "xp8GVPX4QjtaN8jMUPPgyn84DRYX6I", "count": 0}, {"id": 733, "name": "zGDZARe6yECgNyN5GscrbNx4tkzKND", "count": 0}, {"id": 738, "name": "v3F2xlO4S22g8ZL2YaAa2cMPBHHGKn", "count": 0}, {"id": 739, "name": "EPrmBEVvoh1Tcs1HhZdjXZPlalfj2G", "count": 0}, {"id": 742, "name": "wQSFcjik4gjKtzBVFFlxop8e4YTNon", "count": 0}, {"id": 743, "name": "LjlaPnGY6whzQwPWbohUWeW2cKeLq0", "count": 0}, {"id": 746, "name": "\u5929\u5929\u6d4b\u8bd5", "count": 0}, {"id": 747, "name": "\u5929\u5929", "count": 0}, {"id": 748, "name": "\u6d4b\u8bd5", "count": 0}, {"id": 749, "name": "\u83dc\u9e1f", "count": 0}, {"id": 750, "name": "\u8e29\u8e29\u8e29", "count": 0}, {"id": 751, "name": "\u5e7f", "count": 0}]}"}
{"CreateTime": "2024-05-16 12:35:02", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【修改用户标签接口】用例1：接口参数都正确- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:35:02", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【修改用户标签接口】用例1：接口参数都正确- 测试用例,执行成功！实际响应结果为：{'errcode': 0, 'errmsg': 'ok'}"}
{"CreateTime": "2024-05-16 12:35:02", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【修改用户标签接口】用例1：接口参数都正确- 测试用例,执行成功！实际响应结果为：{"errcode": 0, "errmsg": "ok"}"}
{"CreateTime": "2024-05-16 12:35:03", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【修改用户标签接口】用例2：id参数缺失/为空- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:35:03", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【修改用户标签接口】用例2：id参数缺失/为空- 测试用例,执行成功！实际响应结果为：{'errcode': 45058, 'errmsg': "can't modify sys tag hint: [rFHcFBeVf-IyTjNA] rid: 66458cf7-0ffa1e4b-129d75fd"}"}
{"CreateTime": "2024-05-16 12:35:03", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【修改用户标签接口】用例2：id参数缺失/为空- 测试用例,执行成功！实际响应结果为：{"errcode": 45058, "errmsg": "can't modify sys tag hint: [rFHcFBeVf-IyTjNA] rid: 66458cf7-0ffa1e4b-129d75fd"}"}
{"CreateTime": "2024-05-16 12:35:03", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【修改用户标签接口】用例3：参数id不存在- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:35:03", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【修改用户标签接口】用例3：参数id不存在- 测试用例,执行成功！实际响应结果为：{'errcode': -1, 'errmsg': 'system error hint: [rFHcs0mre-bflXUA] rid: 66458cf7-7dc4b12a-6fe8783f'}"}
{"CreateTime": "2024-05-16 12:35:03", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【修改用户标签接口】用例3：参数id不存在- 测试用例,执行成功！实际响应结果为：{"errcode": -1, "errmsg": "system error hint: [rFHcs0mre-bflXUA] rid: 66458cf7-7dc4b12a-6fe8783f"}"}
{"CreateTime": "2024-05-16 12:35:03", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【修改用户标签接口】用例4：参数id为系统数据0- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:35:03", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【修改用户标签接口】用例4：参数id为系统数据0- 测试用例,执行成功！实际响应结果为：{'errcode': 45058, 'errmsg': "can't modify sys tag hint: [rFHcc1j2e-J.hhna] rid: 66458cf7-3c61a974-5c45f8b4"}"}
{"CreateTime": "2024-05-16 12:35:03", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【修改用户标签接口】用例4：参数id为系统数据0- 测试用例,执行成功！实际响应结果为：{"errcode": 45058, "errmsg": "can't modify sys tag hint: [rFHcc1j2e-J.hhna] rid: 66458cf7-3c61a974-5c45f8b4"}"}
{"CreateTime": "2024-05-16 12:35:04", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【修改用户标签接口】用例5：参数id为系统数据1- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:35:04", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【修改用户标签接口】用例5：参数id为系统数据1- 测试用例,执行成功！实际响应结果为：{'errcode': 45058, 'errmsg': "can't modify sys tag hint: [rFHcloEVf-Z5gWDA] rid: 66458cf8-1ffade98-098042f2"}"}
{"CreateTime": "2024-05-16 12:35:04", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【修改用户标签接口】用例5：参数id为系统数据1- 测试用例,执行成功！实际响应结果为：{"errcode": 45058, "errmsg": "can't modify sys tag hint: [rFHcloEVf-Z5gWDA] rid: 66458cf8-1ffade98-098042f2"}"}
{"CreateTime": "2024-05-16 12:35:04", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【修改用户标签接口】用例6：参数id为系统数据2- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:35:04", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【修改用户标签接口】用例6：参数id为系统数据2- 测试用例,执行成功！实际响应结果为：{'errcode': 45058, 'errmsg': "can't modify sys tag hint: [rFHcA9sQf-10QCba] rid: 66458cf8-2a44518c-0a5687e3"}"}
{"CreateTime": "2024-05-16 12:35:04", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【修改用户标签接口】用例6：参数id为系统数据2- 测试用例,执行成功！实际响应结果为：{"errcode": 45058, "errmsg": "can't modify sys tag hint: [rFHcA9sQf-10QCba] rid: 66458cf8-2a44518c-0a5687e3"}"}
{"CreateTime": "2024-05-16 12:35:04", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【修改用户标签接口】用例7：参数id为系统数据3- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:35:04", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【修改用户标签接口】用例7：参数id为系统数据3- 测试用例,执行成功！实际响应结果为：{'errcode': 45058, 'errmsg': "can't modify sys tag hint: [rFHcvPyWf-GodQva] rid: 66458cf8-09d7fc09-44b593eb"}"}
{"CreateTime": "2024-05-16 12:35:04", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【修改用户标签接口】用例7：参数id为系统数据3- 测试用例,执行成功！实际响应结果为：{"errcode": 45058, "errmsg": "can't modify sys tag hint: [rFHcvPyWf-GodQva] rid: 66458cf8-09d7fc09-44b593eb"}"}
{"CreateTime": "2024-05-16 12:35:05", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【修改用户标签接口】用例8：参数id格式错误-为小写英文字母- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:35:05", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【修改用户标签接口】用例8：参数id格式错误-为小写英文字母- 测试用例,执行成功！实际响应结果为：{'errcode': 47001, 'errmsg': 'data format error hint: [rFHc9Uj2e-U8LrCA] rid: 66458cf9-379795b0-5d1b83a4'}"}
{"CreateTime": "2024-05-16 12:35:05", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【修改用户标签接口】用例8：参数id格式错误-为小写英文字母- 测试用例,执行成功！实际响应结果为：{"errcode": 47001, "errmsg": "data format error hint: [rFHc9Uj2e-U8LrCA] rid: 66458cf9-379795b0-5d1b83a4"}"}
{"CreateTime": "2024-05-16 12:35:05", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【修改用户标签接口】用例9：参数id格式错误-为大写英文字母- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:35:05", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【修改用户标签接口】用例9：参数id格式错误-为大写英文字母- 测试用例,执行成功！实际响应结果为：{'errcode': 47001, 'errmsg': 'data format error hint: [rFHcORmre-62IYEA] rid: 66458cf9-053dcb0d-2127c194'}"}
{"CreateTime": "2024-05-16 12:35:05", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【修改用户标签接口】用例9：参数id格式错误-为大写英文字母- 测试用例,执行成功！实际响应结果为：{"errcode": 47001, "errmsg": "data format error hint: [rFHcORmre-62IYEA] rid: 66458cf9-053dcb0d-2127c194"}"}
{"CreateTime": "2024-05-16 12:35:05", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【修改用户标签接口】用例10：参数id格式错误-为中文汉字- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:35:05", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【修改用户标签接口】用例10：参数id格式错误-为中文汉字- 测试用例,执行成功！实际响应结果为：{'errcode': 47001, 'errmsg': 'data format error hint: [rFHccQwRf-f9kDFA] rid: 66458cf9-06fcb2c9-0b9e3d27'}"}
{"CreateTime": "2024-05-16 12:35:05", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【修改用户标签接口】用例10：参数id格式错误-为中文汉字- 测试用例,执行成功！实际响应结果为：{"errcode": 47001, "errmsg": "data format error hint: [rFHccQwRf-f9kDFA] rid: 66458cf9-06fcb2c9-0b9e3d27"}"}
{"CreateTime": "2024-05-16 12:35:06", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【修改用户标签接口】用例11：参数id格式错误-含特殊符号- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:35:06", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【修改用户标签接口】用例11：参数id格式错误-含特殊符号- 测试用例,执行成功！实际响应结果为：{'errcode': 47001, 'errmsg': 'data format error hint: [rFHcB9sQf-55NGja] rid: 66458cfa-4cc4fd70-2385d7a8'}"}
{"CreateTime": "2024-05-16 12:35:06", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【修改用户标签接口】用例11：参数id格式错误-含特殊符号- 测试用例,执行成功！实际响应结果为：{"errcode": 47001, "errmsg": "data format error hint: [rFHcB9sQf-55NGja] rid: 66458cfa-4cc4fd70-2385d7a8"}"}
{"CreateTime": "2024-05-16 12:35:06", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【修改用户标签接口】用例12：参数name重复存在- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:35:06", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【修改用户标签接口】用例12：参数name重复存在- 测试用例,执行成功！实际响应结果为：{'errcode': 45157, 'errmsg': 'invalid tag name hint: [rFHcvPyWf-zK] rid: 66458cfa-2a0fbfed-675255b3'}"}
{"CreateTime": "2024-05-16 12:35:06", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【修改用户标签接口】用例12：参数name重复存在- 测试用例,执行成功！实际响应结果为：{"errcode": 45157, "errmsg": "invalid tag name hint: [rFHcvPyWf-zK] rid: 66458cfa-2a0fbfed-675255b3"}"}
{"CreateTime": "2024-05-16 12:38:34", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【拉黑用户至黑名单接口】用例1：openid_list参数正确- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:38:34", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【拉黑用户至黑名单接口】用例1：openid_list参数正确- 测试用例,执行成功！实际响应结果为：{'errcode': 0, 'errmsg': 'ok'}"}
{"CreateTime": "2024-05-16 12:38:34", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【拉黑用户至黑名单接口】用例1：openid_list参数正确- 测试用例,执行成功！实际响应结果为：{"errcode": 0, "errmsg": "ok"}"}
{"CreateTime": "2024-05-16 12:38:34", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【拉黑用户至黑名单接口】用例2：openid为无效数字- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:38:34", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【拉黑用户至黑名单接口】用例2：openid为无效数字- 测试用例,执行成功！实际响应结果为：{'errcode': 40003, 'errmsg': 'invalid openid hint: [SFHc7BsQf-0TyJmA] rid: 66458dca-6152c6df-73f14fa4'}"}
{"CreateTime": "2024-05-16 12:38:34", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【拉黑用户至黑名单接口】用例2：openid为无效数字- 测试用例,执行成功！实际响应结果为：{"errcode": 40003, "errmsg": "invalid openid hint: [SFHc7BsQf-0TyJmA] rid: 66458dca-6152c6df-73f14fa4"}"}
{"CreateTime": "2024-05-16 12:38:34", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【拉黑用户至黑名单接口】用例3：请求body缺失- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:38:34", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【拉黑用户至黑名单接口】用例3：请求body缺失- 测试用例,执行成功！实际响应结果为：{'errcode': 44002, 'errmsg': 'empty post data hint: [SFHcDe3Dk-IFrmNA] rid: 66458dca-258a0645-3889e442'}"}
{"CreateTime": "2024-05-16 12:38:34", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【拉黑用户至黑名单接口】用例3：请求body缺失- 测试用例,执行成功！实际响应结果为：{"errcode": 44002, "errmsg": "empty post data hint: [SFHcDe3Dk-IFrmNA] rid: 66458dca-258a0645-3889e442"}"}
{"CreateTime": "2024-05-16 12:38:35", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【拉黑用户至黑名单接口】用例4：参数openid_list为空- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:38:35", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【拉黑用户至黑名单接口】用例4：参数openid_list为空- 测试用例,执行成功！实际响应结果为：{'errcode': 40003, 'errmsg': 'invalid openid hint: [SFHcs0mre-DibaAa] rid: 66458dcb-5075c788-73b48847'}"}
{"CreateTime": "2024-05-16 12:38:35", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【拉黑用户至黑名单接口】用例4：参数openid_list为空- 测试用例,执行成功！实际响应结果为：{"errcode": 40003, "errmsg": "invalid openid hint: [SFHcs0mre-DibaAa] rid: 66458dcb-5075c788-73b48847"}"}
{"CreateTime": "2024-05-16 12:38:35", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【拉黑用户至黑名单接口】用例5：openid为无效汉字- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:38:35", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【拉黑用户至黑名单接口】用例5：openid为无效汉字- 测试用例,执行成功！实际响应结果为：{'errcode': 40003, 'errmsg': 'invalid openid hint: [SFHcSE6Vf-ja9] rid: 66458dcb-2755d3f7-210a61f6'}"}
{"CreateTime": "2024-05-16 12:38:35", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【拉黑用户至黑名单接口】用例5：openid为无效汉字- 测试用例,执行成功！实际响应结果为：{"errcode": 40003, "errmsg": "invalid openid hint: [SFHcSE6Vf-ja9] rid: 66458dcb-2755d3f7-210a61f6"}"}
{"CreateTime": "2024-05-16 12:38:35", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【取消拉黑用户至黑名单接口】用例1：参数access_token、openid_list都正确- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:38:35", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【取消拉黑用户至黑名单接口】用例1：参数access_token、openid_list都正确- 测试用例,执行成功！实际响应结果为：{'errcode': 0, 'errmsg': 'ok'}"}
{"CreateTime": "2024-05-16 12:38:35", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【取消拉黑用户至黑名单接口】用例1：参数access_token、openid_list都正确- 测试用例,执行成功！实际响应结果为：{"errcode": 0, "errmsg": "ok"}"}
{"CreateTime": "2024-05-16 12:38:36", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【取消拉黑用户至黑名单接口】用例2：openid为无效字符串- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:38:36", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【取消拉黑用户至黑名单接口】用例2：openid为无效字符串- 测试用例,执行成功！实际响应结果为：{'errcode': 40003, 'errmsg': 'invalid openid hint: [SFHc58sQf-L5afva] rid: 66458dcc-1d6881de-12b3f5e0'}"}
{"CreateTime": "2024-05-16 12:38:36", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【取消拉黑用户至黑名单接口】用例2：openid为无效字符串- 测试用例,执行成功！实际响应结果为：{"errcode": 40003, "errmsg": "invalid openid hint: [SFHc58sQf-L5afva] rid: 66458dcc-1d6881de-12b3f5e0"}"}
{"CreateTime": "2024-05-16 12:38:36", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【取消拉黑用户至黑名单接口】用例3：请求body缺失- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:38:36", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【取消拉黑用户至黑名单接口】用例3：请求body缺失- 测试用例,执行成功！实际响应结果为：{'errcode': 44002, 'errmsg': 'empty post data hint: [SFHc2Hj2e-IGy] rid: 66458dcc-49a67bb5-7c52837d'}"}
{"CreateTime": "2024-05-16 12:38:36", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【取消拉黑用户至黑名单接口】用例3：请求body缺失- 测试用例,执行成功！实际响应结果为：{"errcode": 44002, "errmsg": "empty post data hint: [SFHc2Hj2e-IGy] rid: 66458dcc-49a67bb5-7c52837d"}"}
{"CreateTime": "2024-05-16 12:38:37", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【取消拉黑用户至黑名单接口】用例4：openid参数为空- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:38:37", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【取消拉黑用户至黑名单接口】用例4：openid参数为空- 测试用例,执行成功！实际响应结果为：{'errcode': 40003, 'errmsg': 'invalid openid hint: [SFHc7BsQf-uwMn7a] rid: 66458dcd-21dc179e-10320576'}"}
{"CreateTime": "2024-05-16 12:38:37", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【取消拉黑用户至黑名单接口】用例4：openid参数为空- 测试用例,执行成功！实际响应结果为：{"errcode": 40003, "errmsg": "invalid openid hint: [SFHc7BsQf-uwMn7a] rid: 66458dcd-21dc179e-10320576"}"}
{"CreateTime": "2024-05-16 12:38:37", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【获取微信黑名单列表】用例1：参数全部正常- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:38:37", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【获取微信黑名单列表】用例1：参数全部正常- 测试用例,执行成功！实际响应结果为：{"total": 4, "count": 4, "data": {"openid": ["oDqjY5zgUEgHwL0Tas7HJv566208", "oDqjY5xYp972631jH7IsDR3pl2x0", "oDqjY5-wrnuyN9OBXaN0md8rLsyQ", "oDqjY50sO3UCivurTfvnATmCMuN0"]}, "next_openid": "oDqjY50sO3UCivurTfvnATmCMuN0"}"}
{"CreateTime": "2024-05-16 12:38:37", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【获取微信黑名单列表】用例1：参数全部正常- 测试用例,执行成功！实际响应结果为：{"total": 4, "count": 4, "data": {"openid": ["oDqjY5zgUEgHwL0Tas7HJv566208", "oDqjY5xYp972631jH7IsDR3pl2x0", "oDqjY5-wrnuyN9OBXaN0md8rLsyQ", "oDqjY50sO3UCivurTfvnATmCMuN0"]}, "next_openid": "oDqjY50sO3UCivurTfvnATmCMuN0"}"}
{"CreateTime": "2024-05-16 12:38:38", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【获取微信黑名单列表】用例2：参数begin_openid为null- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:38:38", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【获取微信黑名单列表】用例2：参数begin_openid为null- 测试用例,执行成功！实际响应结果为：{"total": 4, "count": 4, "data": {"openid": ["oDqjY5zgUEgHwL0Tas7HJv566208", "oDqjY5xYp972631jH7IsDR3pl2x0", "oDqjY5-wrnuyN9OBXaN0md8rLsyQ", "oDqjY50sO3UCivurTfvnATmCMuN0"]}, "next_openid": "oDqjY50sO3UCivurTfvnATmCMuN0"}"}
{"CreateTime": "2024-05-16 12:38:38", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【获取微信黑名单列表】用例2：参数begin_openid为null- 测试用例,执行成功！实际响应结果为：{"total": 4, "count": 4, "data": {"openid": ["oDqjY5zgUEgHwL0Tas7HJv566208", "oDqjY5xYp972631jH7IsDR3pl2x0", "oDqjY5-wrnuyN9OBXaN0md8rLsyQ", "oDqjY50sO3UCivurTfvnATmCMuN0"]}, "next_openid": "oDqjY50sO3UCivurTfvnATmCMuN0"}"}
{"CreateTime": "2024-05-16 12:38:38", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【获取微信黑名单列表】用例3：参数begin_openid无效- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:38:38", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【获取微信黑名单列表】用例3：参数begin_openid无效- 测试用例,执行成功！实际响应结果为：{'errcode': 40003, 'errmsg': 'invalid openid hint: [SFHcrFeVf-rOeahA] rid: 66458dce-419f1ebc-5652180a'}"}
{"CreateTime": "2024-05-16 12:38:38", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【获取微信黑名单列表】用例3：参数begin_openid无效- 测试用例,执行成功！实际响应结果为：{"errcode": 40003, "errmsg": "invalid openid hint: [SFHcrFeVf-rOeahA] rid: 66458dce-419f1ebc-5652180a"}"}
{"CreateTime": "2024-05-16 12:38:38", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【获取微信黑名单列表】用例4：请求body缺失- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:38:38", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【获取微信黑名单列表】用例4：请求body缺失- 测试用例,执行成功！实际响应结果为：{'errcode': 44002, 'errmsg': 'empty post data hint: [SFHcx0mre-2PiEaa] rid: 66458dce-591dbe8d-5401125c'}"}
{"CreateTime": "2024-05-16 12:38:38", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【获取微信黑名单列表】用例4：请求body缺失- 测试用例,执行成功！实际响应结果为：{"errcode": 44002, "errmsg": "empty post data hint: [SFHcx0mre-2PiEaa] rid: 66458dce-591dbe8d-5401125c"}"}
{"CreateTime": "2024-05-16 12:38:39", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【上传卡券图片接口】用例1：files参数为空- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:38:39", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【上传卡券图片接口】用例1：files参数为空- 测试用例,执行成功！实际响应结果为：{'errcode': 41005, 'errmsg': 'media data missing hint: [IlxgAa03199037] rid: 66458dcf-392fe2fe-3deefc94'}"}
{"CreateTime": "2024-05-16 12:38:39", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【上传卡券图片接口】用例1：files参数为空- 测试用例,执行成功！实际响应结果为：{"errcode": 41005, "errmsg": "media data missing hint: [IlxgAa03199037] rid: 66458dcf-392fe2fe-3deefc94"}"}
{"CreateTime": "2024-05-16 12:38:39", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【上传卡券图片接口】用例2：files格式为txt- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:38:39", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【上传卡券图片接口】用例2：files格式为txt- 测试用例,执行成功！实际响应结果为：{'errcode': 40005, 'errmsg': 'invalid file type hint: [cMpgua0319d117] rid: 66458dcf-39245eaf-21fba6c1'}"}
{"CreateTime": "2024-05-16 12:38:39", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【上传卡券图片接口】用例2：files格式为txt- 测试用例,执行成功！实际响应结果为：{"errcode": 40005, "errmsg": "invalid file type hint: [cMpgua0319d117] rid: 66458dcf-39245eaf-21fba6c1"}"}
{"CreateTime": "2024-05-16 12:38:40", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【上传卡券图片接口】用例3：files格式为png- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:38:40", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【上传卡券图片接口】用例3：files格式为png- 测试用例,执行成功！实际响应结果为：{"url": "http://mmbiz.qpic.cn/mmbiz_jpg/70AOWquMz5GuXFFrwVhoicJjNwFXguHrGoClYtp84wlOLR3Olj4W2xjMcoQLl3lm39Wl7be0EK67LaSge7nJTGA/0?from=appmsg"}"}
{"CreateTime": "2024-05-16 12:38:40", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【上传卡券图片接口】用例4：files格式为jpg- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:38:40", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【上传卡券图片接口】用例4：files格式为jpg- 测试用例,执行成功！实际响应结果为：{"url": "http://mmbiz.qpic.cn/mmbiz_jpg/70AOWquMz5GuXFFrwVhoicJjNwFXguHrGIICn2BZbPAMta5Y9VeeoDA2rM6EFre0nIQDy2nYjrvdtFxiaibxicflAw/0?from=appmsg"}"}
{"CreateTime": "2024-05-16 12:38:40", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【上传卡券图片接口】用例5：files格式为mp3- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:38:40", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【上传卡券图片接口】用例5：files格式为mp3- 测试用例,执行成功！实际响应结果为：{'errcode': 40005, 'errmsg': 'invalid file type hint: [1.sxya03219020] rid: 66458dd0-60657930-2f380cce'}"}
{"CreateTime": "2024-05-16 12:38:40", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【上传卡券图片接口】用例5：files格式为mp3- 测试用例,执行成功！实际响应结果为：{"errcode": 40005, "errmsg": "invalid file type hint: [1.sxya03219020] rid: 66458dd0-60657930-2f380cce"}"}
{"CreateTime": "2024-05-16 12:38:44", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【上传卡券图片接口】用例6：文件大小超过1MB- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:38:44", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【上传卡券图片接口】用例6：文件大小超过1MB- 测试用例,执行成功！实际响应结果为：{'errcode': 40009, 'errmsg': 'invalid image size hint: [R2ByoA03243954] rid: 66458dd1-0335329c-2276d5e9'}"}
{"CreateTime": "2024-05-16 12:38:45", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【上传卡券图片接口】用例6：文件大小超过1MB- 测试用例,执行成功！实际响应结果为：{"errcode": 40009, "errmsg": "invalid image size hint: [R2ByoA03243954] rid: 66458dd1-0335329c-2276d5e9"}"}
{"CreateTime": "2024-05-16 12:38:45", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【创建客服账号接口】用例1：参数全部正确- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:38:45", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【创建客服账号接口】用例1：参数全部正确- 测试用例,执行成功！实际响应结果为：{'errcode': 0, 'errmsg': 'ok'}"}
{"CreateTime": "2024-05-16 12:38:45", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【创建客服账号接口】用例1：参数全部正确- 测试用例,执行成功！实际响应结果为：{"errcode": 0, "errmsg": "ok"}"}
{"CreateTime": "2024-05-16 12:38:45", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【创建客服账号接口】用例2：参数客服账号已存在- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:38:45", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【创建客服账号接口】用例2：参数客服账号已存在- 测试用例,执行成功！实际响应结果为：{'errcode': 65406, 'errmsg': 'custom service account exists hint: [SFHcdMfVf-jL_0oA] rid: 66458dd5-078ecd66-5498183b'}"}
{"CreateTime": "2024-05-16 12:38:45", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【创建客服账号接口】用例2：参数客服账号已存在- 测试用例,执行成功！实际响应结果为：{"errcode": 65406, "errmsg": "custom service account exists hint: [SFHcdMfVf-jL_0oA] rid: 66458dd5-078ecd66-5498183b"}"}
{"CreateTime": "2024-05-16 12:38:46", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【创建客服账号接口】用例3：参数客服账号为空- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:38:46", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【创建客服账号接口】用例3：参数客服账号为空- 测试用例,执行成功！实际响应结果为：{'errcode': 65404, 'errmsg': 'illegal custom service account hint: [SFHcKUore-bq_4GA] rid: 66458dd6-2a0b723c-31406a21'}"}
{"CreateTime": "2024-05-16 12:38:46", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【创建客服账号接口】用例3：参数客服账号为空- 测试用例,执行成功！实际响应结果为：{"errcode": 65404, "errmsg": "illegal custom service account hint: [SFHcKUore-bq_4GA] rid: 66458dd6-2a0b723c-31406a21"}"}
{"CreateTime": "2024-05-16 12:38:46", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【创建客服账号接口】用例4：参数nickname客服昵称为空- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:38:46", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【创建客服账号接口】用例4：参数nickname客服昵称为空- 测试用例,执行成功！实际响应结果为：{'errcode': 0, 'errmsg': 'ok'}"}
{"CreateTime": "2024-05-16 12:38:46", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【创建客服账号接口】用例4：参数nickname客服昵称为空- 测试用例,执行成功！实际响应结果为：{"errcode": 0, "errmsg": "ok"}"}
{"CreateTime": "2024-05-16 12:38:46", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【创建客服账号接口】用例5：参数nickname客服昵称超过16个字符- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:38:46", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【创建客服账号接口】用例5：参数nickname客服昵称超过16个字符- 测试用例,执行成功！实际响应结果为：{'errcode': 65403, 'errmsg': 'illegal nickname hint: [SFHcdMfVf-PpKfHa] rid: 66458dd6-329d0ed4-769e8296'}"}
{"CreateTime": "2024-05-16 12:38:46", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【创建客服账号接口】用例5：参数nickname客服昵称超过16个字符- 测试用例,执行成功！实际响应结果为：{"errcode": 65403, "errmsg": "illegal nickname hint: [SFHcdMfVf-PpKfHa] rid: 66458dd6-329d0ed4-769e8296"}"}
{"CreateTime": "2024-05-16 12:38:47", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【创建客服账号接口】用例6：参数客服账号/前缀超过10个字符- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:38:47", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【创建客服账号接口】用例6：参数客服账号/前缀超过10个字符- 测试用例,执行成功！实际响应结果为：{'errcode': 65404, 'errmsg': 'illegal custom service account hint: [SFHc5FfVf-HIHvza] rid: 66458dd7-7bea2c84-74425677'}"}
{"CreateTime": "2024-05-16 12:38:47", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【创建客服账号接口】用例6：参数客服账号/前缀超过10个字符- 测试用例,执行成功！实际响应结果为：{"errcode": 65404, "errmsg": "illegal custom service account hint: [SFHc5FfVf-HIHvza] rid: 66458dd7-7bea2c84-74425677"}"}
{"CreateTime": "2024-05-16 12:38:47", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【设置客服信息接口】用例1：参数全部正确- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:38:47", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【设置客服信息接口】用例1：参数全部正确- 测试用例,执行成功！实际响应结果为：{'errcode': 0, 'errmsg': 'ok'}"}
{"CreateTime": "2024-05-16 12:38:47", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【设置客服信息接口】用例1：参数全部正确- 测试用例,执行成功！实际响应结果为：{"errcode": 0, "errmsg": "ok"}"}
{"CreateTime": "2024-05-16 12:38:48", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【设置客服信息接口】用例2：客服账号kf_account参数为空- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:38:48", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【设置客服信息接口】用例2：客服账号kf_account参数为空- 测试用例,执行成功！实际响应结果为：{'errcode': 65401, 'errmsg': 'invalid custom service account hint: [SFHcT0I2e-YkNK6a] rid: 66458dd7-3c8b4e0f-1e992b9e'}"}
{"CreateTime": "2024-05-16 12:38:48", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【设置客服信息接口】用例2：客服账号kf_account参数为空- 测试用例,执行成功！实际响应结果为：{"errcode": 65401, "errmsg": "invalid custom service account hint: [SFHcT0I2e-YkNK6a] rid: 66458dd7-3c8b4e0f-1e992b9e"}"}
{"CreateTime": "2024-05-16 12:38:48", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【设置客服信息接口】用例3：请求body数据为空- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:38:48", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【设置客服信息接口】用例3：请求body数据为空- 测试用例,执行成功！实际响应结果为：{'errcode': 44002, 'errmsg': 'empty post data hint: [SFHc6TYWO-G.ugRA] rid: 66458dd8-60c2ffb7-548911a7'}"}
{"CreateTime": "2024-05-16 12:38:48", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【设置客服信息接口】用例3：请求body数据为空- 测试用例,执行成功！实际响应结果为：{"errcode": 44002, "errmsg": "empty post data hint: [SFHc6TYWO-G.ugRA] rid: 66458dd8-60c2ffb7-548911a7"}"}
{"CreateTime": "2024-05-16 12:38:48", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【删除客服账号接口】用例1：参数全部正确- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:38:48", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【删除客服账号接口】用例1：参数全部正确- 测试用例,执行成功！实际响应结果为：{'errcode': 0, 'errmsg': 'ok'}"}
{"CreateTime": "2024-05-16 12:38:48", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【删除客服账号接口】用例1：参数全部正确- 测试用例,执行成功！实际响应结果为：{"errcode": 0, "errmsg": "ok"}"}
{"CreateTime": "2024-05-16 12:38:49", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【删除客服账号接口】用例2：删除的客服账号为无效的自定义服务帐户- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:38:49", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【删除客服账号接口】用例2：删除的客服账号为无效的自定义服务帐户- 测试用例,执行成功！实际响应结果为：{'errcode': 65401, 'errmsg': 'invalid custom service account hint: [SFHcxAyWf-aHrUEA] rid: 66458dd9-5f07119e-65ab4485'}"}
{"CreateTime": "2024-05-16 12:38:49", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【删除客服账号接口】用例2：删除的客服账号为无效的自定义服务帐户- 测试用例,执行成功！实际响应结果为：{"errcode": 65401, "errmsg": "invalid custom service account hint: [SFHcxAyWf-aHrUEA] rid: 66458dd9-5f07119e-65ab4485"}"}
{"CreateTime": "2024-05-16 12:38:49", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【获取客服基础信息接口】用例1：参数全部正确- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:38:49", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【获取客服基础信息接口】用例1：参数全部正确- 测试用例,执行成功！实际响应结果为：{"kf_list": [{"kf_account": "test1@test", "kf_headimgurl": "http://mmbiz.qpic.cn/mmbiz_png/70AOWquMz5GuXFFrwVhoicJjNwFXguHrG3Deic8SAIWZDREjialhFkEkCjHzG1iaXAnNBRMIXNqMQCoyXFafPJE1ug/300?wx_fmt=png/0", "kf_id": 2001, "kf_nick": ""}, {"kf_account": "HD21_w1@test", "kf_headimgurl": "", "kf_id": 2003, "kf_nick": "xs"}, {"kf_account": "2yhU_@H0kh", "kf_headimgurl": "http://mmbiz.qpic.cn/mmbiz_jpg/70AOWquMz5FQcgcaLL2R6wT9fsuic8lptK88NTH1u6MbRicRbiaL2t5iacC6pEfEwcO15XaBOV7IRYVS32b8lGQpHg/300?wx_fmt=jpeg/0", "kf_id": 2004, "kf_nick": "xs"}, {"kf_account": "n5ghnL0c0_@ZJ81bDtlUSL3lEsRC8nGXfoQFufUwu", "kf_headimgurl": "", "kf_id": 2005, "kf_nick": "x212s"}, {"kf_account": "n5ghnL0c0_@21", "kf_headimgurl": "", "kf_id": 2006, "kf_nick": "213"}, {"kf_account": "n5ghnL0c0_@w", "kf_headimgurl": "", "kf_id": 2007, "kf_nick": ""}, {"kf_account": "n5ghnL0c0_@w2121", "kf_headimgurl": "", "kf_id": 2008, "kf_nick": "1"}, {"kf_account": "EK6iI97eN_@2izwrx5IWvfPHQrGMr57WAujazrpOz", "kf_headimgurl": "", "kf_id": 2009, "kf_nick": "pAaezgB1qQw2brQb"}, {"kf_account": "F2Fyr7v0O_@OGWBBEUtZyWe2Tr9iyhZOgYoWNEF0T", "kf_headimgurl": "", "kf_id": 2010, "kf_nick": ""}, {"kf_account": "QpAVaoy2k_@CzUkbY7xXqNto9o89zTLvM5oMxwC4R", "kf_headimgurl": "", "kf_id": 2011, "kf_nick": "JPI4jmVvk67MPnpB"}, {"kf_account": "5D2PKS4hP_@baaqpLLA7LFFqaZKe0MWVKxYKEQDWV", "kf_headimgurl": "", "kf_id": 2012, "kf_nick": ""}, {"kf_account": "dfHBJQenO_@9uNMF5JvFmnKzrvdvbJinRkOmXvKHM", "kf_headimgurl": "", "kf_id": 2013, "kf_nick": "T9y3DQuN8okYbc5V"}, {"kf_account": "xNTix4n9H_@iGor1NP9jIjPDJU8PL1Ytb4UFmGzCP", "kf_headimgurl": "", "kf_id": 2014, "kf_nick": ""}, {"kf_account": "ertvLaKhv_@KIwKFp5Lzji8odIwGx8t484suX8cJ6", "kf_headimgurl": "", "kf_id": 2015, "kf_nick": "8SW7MgAItqZ5VYYY"}, {"kf_account": "gFYGiILCI_@haHaBP5TRuNhibm8Le5LPXuPbhmmjc", "kf_headimgurl": "", "kf_id": 2017, "kf_nick": "N8UknHMi3NiLaeyb"}, {"kf_account": "wb3KlS2uP_@Qzr3IQPD9Do9WCXpsCopCn42Y6LotF", "kf_headimgurl": "", "kf_id": 2019, "kf_nick": "O3jzu6ZDXmBUTgrF"}, {"kf_account": "fxQoMrvSX_@LznktN8oMDr1aWjYp4S6OStFdfw1Lc", "kf_headimgurl": "", "kf_id": 2021, "kf_nick": "RcaGzGy89NSHLJVe"}, {"kf_account": "Siss95TKc_@Q4LU17KQwFWbTMIm5VzHxc44JbJWtK", "kf_headimgurl": "", "kf_id": 2023, "kf_nick": "89uEdc9rftB72Q8H"}, {"kf_account": "mzk3VJdUD_@p5GnPuQcFB8XRYBPKxhgaA17vw9Wps", "kf_headimgurl": "", "kf_id": 2025, "kf_nick": "yXTg131F7LjuqfdW"}, {"kf_account": "RQkmXST9h_@oKF1pe2W2FVWPMgYf92uSGsKpBko7J", "kf_headimgurl": "", "kf_id": 2027, "kf_nick": "NQCkOVLGtPvHsXs4"}, {"kf_account": "NRTw4x7YL_@hdYR4LuWEWJZ0iWoe4xQsNqC2IgoHi", "kf_headimgurl": "", "kf_id": 2029, "kf_nick": "o7GoTY46wcUR01xj"}, {"kf_account": "Sc0NwcNGk_@VEMEOZM7OcI5xki4zl8y3Hvt4VFg45", "kf_headimgurl": "", "kf_id": 2031, "kf_nick": "JT7VIs5Dh044GsQ5"}, {"kf_account": "wCy20qT7H_@45KjVBrI9EIEi4eNouGgCiEjiReqBd", "kf_headimgurl": "", "kf_id": 2033, "kf_nick": "bbvPpBF9ZYQGIYW3"}, {"kf_account": "qSnj5Ax5H_@qB4OcJMOHSIdnmlfTJY6h5o1XBiqme", "kf_headimgurl": "", "kf_id": 2035, "kf_nick": "r9vd7b0QCs328ZyF"}, {"kf_account": "wh9VL9sOF_@Qvh1zgSbujoV12kh9DMZfP8jc85uwJ", "kf_headimgurl": "", "kf_id": 2037, "kf_nick": "TrFoPT8NYAWjF2D6"}, {"kf_account": "adad@111", "kf_headimgurl": "http://mmbiz.qpic.cn/mmbiz_png/70AOWquMz5EWeRhjGXNe18aDevrLcE1WfdvvBNgHoLxVF4JqFrdsq03UicDgVW3Ir2mNpRKhMic4fem2BUWUYF8Q/300?wx_fmt=png/0", "kf_id": 2039, "kf_nick": "\u4e1c\u4e1c"}, {"kf_account": "Sandy12_@test", "kf_headimgurl": "", "kf_id": 2040, "kf_nick": "\u73ca\u8fea"}, {"kf_account": "Sandy666_@test", "kf_headimgurl": "", "kf_id": 2041, "kf_nick": "\u73ca\u8fea"}, {"kf_account": "Sedfsg@testetestetestetestetesteteste", "kf_headimgurl": "", "kf_id": 2042, "kf_nick": "\u73ca\u8fea"}, {"kf_account": "DC57zGQYE_@NB3wV7DnMYwQCeUEt96bRYvKRD0iAg", "kf_headimgurl": "", "kf_id": 2043, "kf_nick": "UCPmuKrrSmUv54AJ"}, {"kf_account": "KxPb8pqEx_@ETxYpWnwJRV29vsmw4dgvjOmECVz3b", "kf_headimgurl": "", "kf_id": 2045, "kf_nick": "CrkexMyMWksO2PRr"}, {"kf_account": "cqU49jXdX_@xpya1m6VpjX4qZQ47dZ9umYr5Hiivu", "kf_headimgurl": "", "kf_id": 2047, "kf_nick": "OmPa836DhAmm89ON"}]}"}
{"CreateTime": "2024-05-16 12:38:49", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【获取客服基础信息接口】用例1：参数全部正确- 测试用例,执行成功！实际响应结果为：{"kf_list": [{"kf_account": "test1@test", "kf_headimgurl": "http://mmbiz.qpic.cn/mmbiz_png/70AOWquMz5GuXFFrwVhoicJjNwFXguHrG3Deic8SAIWZDREjialhFkEkCjHzG1iaXAnNBRMIXNqMQCoyXFafPJE1ug/300?wx_fmt=png/0", "kf_id": 2001, "kf_nick": ""}, {"kf_account": "HD21_w1@test", "kf_headimgurl": "", "kf_id": 2003, "kf_nick": "xs"}, {"kf_account": "2yhU_@H0kh", "kf_headimgurl": "http://mmbiz.qpic.cn/mmbiz_jpg/70AOWquMz5FQcgcaLL2R6wT9fsuic8lptK88NTH1u6MbRicRbiaL2t5iacC6pEfEwcO15XaBOV7IRYVS32b8lGQpHg/300?wx_fmt=jpeg/0", "kf_id": 2004, "kf_nick": "xs"}, {"kf_account": "n5ghnL0c0_@ZJ81bDtlUSL3lEsRC8nGXfoQFufUwu", "kf_headimgurl": "", "kf_id": 2005, "kf_nick": "x212s"}, {"kf_account": "n5ghnL0c0_@21", "kf_headimgurl": "", "kf_id": 2006, "kf_nick": "213"}, {"kf_account": "n5ghnL0c0_@w", "kf_headimgurl": "", "kf_id": 2007, "kf_nick": ""}, {"kf_account": "n5ghnL0c0_@w2121", "kf_headimgurl": "", "kf_id": 2008, "kf_nick": "1"}, {"kf_account": "EK6iI97eN_@2izwrx5IWvfPHQrGMr57WAujazrpOz", "kf_headimgurl": "", "kf_id": 2009, "kf_nick": "pAaezgB1qQw2brQb"}, {"kf_account": "F2Fyr7v0O_@OGWBBEUtZyWe2Tr9iyhZOgYoWNEF0T", "kf_headimgurl": "", "kf_id": 2010, "kf_nick": ""}, {"kf_account": "QpAVaoy2k_@CzUkbY7xXqNto9o89zTLvM5oMxwC4R", "kf_headimgurl": "", "kf_id": 2011, "kf_nick": "JPI4jmVvk67MPnpB"}, {"kf_account": "5D2PKS4hP_@baaqpLLA7LFFqaZKe0MWVKxYKEQDWV", "kf_headimgurl": "", "kf_id": 2012, "kf_nick": ""}, {"kf_account": "dfHBJQenO_@9uNMF5JvFmnKzrvdvbJinRkOmXvKHM", "kf_headimgurl": "", "kf_id": 2013, "kf_nick": "T9y3DQuN8okYbc5V"}, {"kf_account": "xNTix4n9H_@iGor1NP9jIjPDJU8PL1Ytb4UFmGzCP", "kf_headimgurl": "", "kf_id": 2014, "kf_nick": ""}, {"kf_account": "ertvLaKhv_@KIwKFp5Lzji8odIwGx8t484suX8cJ6", "kf_headimgurl": "", "kf_id": 2015, "kf_nick": "8SW7MgAItqZ5VYYY"}, {"kf_account": "gFYGiILCI_@haHaBP5TRuNhibm8Le5LPXuPbhmmjc", "kf_headimgurl": "", "kf_id": 2017, "kf_nick": "N8UknHMi3NiLaeyb"}, {"kf_account": "wb3KlS2uP_@Qzr3IQPD9Do9WCXpsCopCn42Y6LotF", "kf_headimgurl": "", "kf_id": 2019, "kf_nick": "O3jzu6ZDXmBUTgrF"}, {"kf_account": "fxQoMrvSX_@LznktN8oMDr1aWjYp4S6OStFdfw1Lc", "kf_headimgurl": "", "kf_id": 2021, "kf_nick": "RcaGzGy89NSHLJVe"}, {"kf_account": "Siss95TKc_@Q4LU17KQwFWbTMIm5VzHxc44JbJWtK", "kf_headimgurl": "", "kf_id": 2023, "kf_nick": "89uEdc9rftB72Q8H"}, {"kf_account": "mzk3VJdUD_@p5GnPuQcFB8XRYBPKxhgaA17vw9Wps", "kf_headimgurl": "", "kf_id": 2025, "kf_nick": "yXTg131F7LjuqfdW"}, {"kf_account": "RQkmXST9h_@oKF1pe2W2FVWPMgYf92uSGsKpBko7J", "kf_headimgurl": "", "kf_id": 2027, "kf_nick": "NQCkOVLGtPvHsXs4"}, {"kf_account": "NRTw4x7YL_@hdYR4LuWEWJZ0iWoe4xQsNqC2IgoHi", "kf_headimgurl": "", "kf_id": 2029, "kf_nick": "o7GoTY46wcUR01xj"}, {"kf_account": "Sc0NwcNGk_@VEMEOZM7OcI5xki4zl8y3Hvt4VFg45", "kf_headimgurl": "", "kf_id": 2031, "kf_nick": "JT7VIs5Dh044GsQ5"}, {"kf_account": "wCy20qT7H_@45KjVBrI9EIEi4eNouGgCiEjiReqBd", "kf_headimgurl": "", "kf_id": 2033, "kf_nick": "bbvPpBF9ZYQGIYW3"}, {"kf_account": "qSnj5Ax5H_@qB4OcJMOHSIdnmlfTJY6h5o1XBiqme", "kf_headimgurl": "", "kf_id": 2035, "kf_nick": "r9vd7b0QCs328ZyF"}, {"kf_account": "wh9VL9sOF_@Qvh1zgSbujoV12kh9DMZfP8jc85uwJ", "kf_headimgurl": "", "kf_id": 2037, "kf_nick": "TrFoPT8NYAWjF2D6"}, {"kf_account": "adad@111", "kf_headimgurl": "http://mmbiz.qpic.cn/mmbiz_png/70AOWquMz5EWeRhjGXNe18aDevrLcE1WfdvvBNgHoLxVF4JqFrdsq03UicDgVW3Ir2mNpRKhMic4fem2BUWUYF8Q/300?wx_fmt=png/0", "kf_id": 2039, "kf_nick": "\u4e1c\u4e1c"}, {"kf_account": "Sandy12_@test", "kf_headimgurl": "", "kf_id": 2040, "kf_nick": "\u73ca\u8fea"}, {"kf_account": "Sandy666_@test", "kf_headimgurl": "", "kf_id": 2041, "kf_nick": "\u73ca\u8fea"}, {"kf_account": "Sedfsg@testetestetestetestetesteteste", "kf_headimgurl": "", "kf_id": 2042, "kf_nick": "\u73ca\u8fea"}, {"kf_account": "DC57zGQYE_@NB3wV7DnMYwQCeUEt96bRYvKRD0iAg", "kf_headimgurl": "", "kf_id": 2043, "kf_nick": "UCPmuKrrSmUv54AJ"}, {"kf_account": "KxPb8pqEx_@ETxYpWnwJRV29vsmw4dgvjOmECVz3b", "kf_headimgurl": "", "kf_id": 2045, "kf_nick": "CrkexMyMWksO2PRr"}, {"kf_account": "cqU49jXdX_@xpya1m6VpjX4qZQ47dZ9umYr5Hiivu", "kf_headimgurl": "", "kf_id": 2047, "kf_nick": "OmPa836DhAmm89ON"}]}"}
{"CreateTime": "2024-05-16 12:38:49", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【获取客服基础信息接口】用例1：参数全部正确- 测试用例,执行成功！实际响应结果为：{"kf_list": [{"kf_account": "test1@test", "kf_headimgurl": "http://mmbiz.qpic.cn/mmbiz_png/70AOWquMz5GuXFFrwVhoicJjNwFXguHrG3Deic8SAIWZDREjialhFkEkCjHzG1iaXAnNBRMIXNqMQCoyXFafPJE1ug/300?wx_fmt=png/0", "kf_id": 2001, "kf_nick": ""}, {"kf_account": "HD21_w1@test", "kf_headimgurl": "", "kf_id": 2003, "kf_nick": "xs"}, {"kf_account": "2yhU_@H0kh", "kf_headimgurl": "http://mmbiz.qpic.cn/mmbiz_jpg/70AOWquMz5FQcgcaLL2R6wT9fsuic8lptK88NTH1u6MbRicRbiaL2t5iacC6pEfEwcO15XaBOV7IRYVS32b8lGQpHg/300?wx_fmt=jpeg/0", "kf_id": 2004, "kf_nick": "xs"}, {"kf_account": "n5ghnL0c0_@ZJ81bDtlUSL3lEsRC8nGXfoQFufUwu", "kf_headimgurl": "", "kf_id": 2005, "kf_nick": "x212s"}, {"kf_account": "n5ghnL0c0_@21", "kf_headimgurl": "", "kf_id": 2006, "kf_nick": "213"}, {"kf_account": "n5ghnL0c0_@w", "kf_headimgurl": "", "kf_id": 2007, "kf_nick": ""}, {"kf_account": "n5ghnL0c0_@w2121", "kf_headimgurl": "", "kf_id": 2008, "kf_nick": "1"}, {"kf_account": "EK6iI97eN_@2izwrx5IWvfPHQrGMr57WAujazrpOz", "kf_headimgurl": "", "kf_id": 2009, "kf_nick": "pAaezgB1qQw2brQb"}, {"kf_account": "F2Fyr7v0O_@OGWBBEUtZyWe2Tr9iyhZOgYoWNEF0T", "kf_headimgurl": "", "kf_id": 2010, "kf_nick": ""}, {"kf_account": "QpAVaoy2k_@CzUkbY7xXqNto9o89zTLvM5oMxwC4R", "kf_headimgurl": "", "kf_id": 2011, "kf_nick": "JPI4jmVvk67MPnpB"}, {"kf_account": "5D2PKS4hP_@baaqpLLA7LFFqaZKe0MWVKxYKEQDWV", "kf_headimgurl": "", "kf_id": 2012, "kf_nick": ""}, {"kf_account": "dfHBJQenO_@9uNMF5JvFmnKzrvdvbJinRkOmXvKHM", "kf_headimgurl": "", "kf_id": 2013, "kf_nick": "T9y3DQuN8okYbc5V"}, {"kf_account": "xNTix4n9H_@iGor1NP9jIjPDJU8PL1Ytb4UFmGzCP", "kf_headimgurl": "", "kf_id": 2014, "kf_nick": ""}, {"kf_account": "ertvLaKhv_@KIwKFp5Lzji8odIwGx8t484suX8cJ6", "kf_headimgurl": "", "kf_id": 2015, "kf_nick": "8SW7MgAItqZ5VYYY"}, {"kf_account": "gFYGiILCI_@haHaBP5TRuNhibm8Le5LPXuPbhmmjc", "kf_headimgurl": "", "kf_id": 2017, "kf_nick": "N8UknHMi3NiLaeyb"}, {"kf_account": "wb3KlS2uP_@Qzr3IQPD9Do9WCXpsCopCn42Y6LotF", "kf_headimgurl": "", "kf_id": 2019, "kf_nick": "O3jzu6ZDXmBUTgrF"}, {"kf_account": "fxQoMrvSX_@LznktN8oMDr1aWjYp4S6OStFdfw1Lc", "kf_headimgurl": "", "kf_id": 2021, "kf_nick": "RcaGzGy89NSHLJVe"}, {"kf_account": "Siss95TKc_@Q4LU17KQwFWbTMIm5VzHxc44JbJWtK", "kf_headimgurl": "", "kf_id": 2023, "kf_nick": "89uEdc9rftB72Q8H"}, {"kf_account": "mzk3VJdUD_@p5GnPuQcFB8XRYBPKxhgaA17vw9Wps", "kf_headimgurl": "", "kf_id": 2025, "kf_nick": "yXTg131F7LjuqfdW"}, {"kf_account": "RQkmXST9h_@oKF1pe2W2FVWPMgYf92uSGsKpBko7J", "kf_headimgurl": "", "kf_id": 2027, "kf_nick": "NQCkOVLGtPvHsXs4"}, {"kf_account": "NRTw4x7YL_@hdYR4LuWEWJZ0iWoe4xQsNqC2IgoHi", "kf_headimgurl": "", "kf_id": 2029, "kf_nick": "o7GoTY46wcUR01xj"}, {"kf_account": "Sc0NwcNGk_@VEMEOZM7OcI5xki4zl8y3Hvt4VFg45", "kf_headimgurl": "", "kf_id": 2031, "kf_nick": "JT7VIs5Dh044GsQ5"}, {"kf_account": "wCy20qT7H_@45KjVBrI9EIEi4eNouGgCiEjiReqBd", "kf_headimgurl": "", "kf_id": 2033, "kf_nick": "bbvPpBF9ZYQGIYW3"}, {"kf_account": "qSnj5Ax5H_@qB4OcJMOHSIdnmlfTJY6h5o1XBiqme", "kf_headimgurl": "", "kf_id": 2035, "kf_nick": "r9vd7b0QCs328ZyF"}, {"kf_account": "wh9VL9sOF_@Qvh1zgSbujoV12kh9DMZfP8jc85uwJ", "kf_headimgurl": "", "kf_id": 2037, "kf_nick": "TrFoPT8NYAWjF2D6"}, {"kf_account": "adad@111", "kf_headimgurl": "http://mmbiz.qpic.cn/mmbiz_png/70AOWquMz5EWeRhjGXNe18aDevrLcE1WfdvvBNgHoLxVF4JqFrdsq03UicDgVW3Ir2mNpRKhMic4fem2BUWUYF8Q/300?wx_fmt=png/0", "kf_id": 2039, "kf_nick": "\u4e1c\u4e1c"}, {"kf_account": "Sandy12_@test", "kf_headimgurl": "", "kf_id": 2040, "kf_nick": "\u73ca\u8fea"}, {"kf_account": "Sandy666_@test", "kf_headimgurl": "", "kf_id": 2041, "kf_nick": "\u73ca\u8fea"}, {"kf_account": "Sedfsg@testetestetestetestetesteteste", "kf_headimgurl": "", "kf_id": 2042, "kf_nick": "\u73ca\u8fea"}, {"kf_account": "DC57zGQYE_@NB3wV7DnMYwQCeUEt96bRYvKRD0iAg", "kf_headimgurl": "", "kf_id": 2043, "kf_nick": "UCPmuKrrSmUv54AJ"}, {"kf_account": "KxPb8pqEx_@ETxYpWnwJRV29vsmw4dgvjOmECVz3b", "kf_headimgurl": "", "kf_id": 2045, "kf_nick": "CrkexMyMWksO2PRr"}, {"kf_account": "cqU49jXdX_@xpya1m6VpjX4qZQ47dZ9umYr5Hiivu", "kf_headimgurl": "", "kf_id": 2047, "kf_nick": "OmPa836DhAmm89ON"}]}"}
{"CreateTime": "2024-05-16 12:38:49", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【获取客服基础信息接口】用例1：参数全部正确- 测试用例,执行成功！实际响应结果为：{"kf_list": [{"kf_account": "test1@test", "kf_headimgurl": "http://mmbiz.qpic.cn/mmbiz_png/70AOWquMz5GuXFFrwVhoicJjNwFXguHrG3Deic8SAIWZDREjialhFkEkCjHzG1iaXAnNBRMIXNqMQCoyXFafPJE1ug/300?wx_fmt=png/0", "kf_id": 2001, "kf_nick": ""}, {"kf_account": "HD21_w1@test", "kf_headimgurl": "", "kf_id": 2003, "kf_nick": "xs"}, {"kf_account": "2yhU_@H0kh", "kf_headimgurl": "http://mmbiz.qpic.cn/mmbiz_jpg/70AOWquMz5FQcgcaLL2R6wT9fsuic8lptK88NTH1u6MbRicRbiaL2t5iacC6pEfEwcO15XaBOV7IRYVS32b8lGQpHg/300?wx_fmt=jpeg/0", "kf_id": 2004, "kf_nick": "xs"}, {"kf_account": "n5ghnL0c0_@ZJ81bDtlUSL3lEsRC8nGXfoQFufUwu", "kf_headimgurl": "", "kf_id": 2005, "kf_nick": "x212s"}, {"kf_account": "n5ghnL0c0_@21", "kf_headimgurl": "", "kf_id": 2006, "kf_nick": "213"}, {"kf_account": "n5ghnL0c0_@w", "kf_headimgurl": "", "kf_id": 2007, "kf_nick": ""}, {"kf_account": "n5ghnL0c0_@w2121", "kf_headimgurl": "", "kf_id": 2008, "kf_nick": "1"}, {"kf_account": "EK6iI97eN_@2izwrx5IWvfPHQrGMr57WAujazrpOz", "kf_headimgurl": "", "kf_id": 2009, "kf_nick": "pAaezgB1qQw2brQb"}, {"kf_account": "F2Fyr7v0O_@OGWBBEUtZyWe2Tr9iyhZOgYoWNEF0T", "kf_headimgurl": "", "kf_id": 2010, "kf_nick": ""}, {"kf_account": "QpAVaoy2k_@CzUkbY7xXqNto9o89zTLvM5oMxwC4R", "kf_headimgurl": "", "kf_id": 2011, "kf_nick": "JPI4jmVvk67MPnpB"}, {"kf_account": "5D2PKS4hP_@baaqpLLA7LFFqaZKe0MWVKxYKEQDWV", "kf_headimgurl": "", "kf_id": 2012, "kf_nick": ""}, {"kf_account": "dfHBJQenO_@9uNMF5JvFmnKzrvdvbJinRkOmXvKHM", "kf_headimgurl": "", "kf_id": 2013, "kf_nick": "T9y3DQuN8okYbc5V"}, {"kf_account": "xNTix4n9H_@iGor1NP9jIjPDJU8PL1Ytb4UFmGzCP", "kf_headimgurl": "", "kf_id": 2014, "kf_nick": ""}, {"kf_account": "ertvLaKhv_@KIwKFp5Lzji8odIwGx8t484suX8cJ6", "kf_headimgurl": "", "kf_id": 2015, "kf_nick": "8SW7MgAItqZ5VYYY"}, {"kf_account": "gFYGiILCI_@haHaBP5TRuNhibm8Le5LPXuPbhmmjc", "kf_headimgurl": "", "kf_id": 2017, "kf_nick": "N8UknHMi3NiLaeyb"}, {"kf_account": "wb3KlS2uP_@Qzr3IQPD9Do9WCXpsCopCn42Y6LotF", "kf_headimgurl": "", "kf_id": 2019, "kf_nick": "O3jzu6ZDXmBUTgrF"}, {"kf_account": "fxQoMrvSX_@LznktN8oMDr1aWjYp4S6OStFdfw1Lc", "kf_headimgurl": "", "kf_id": 2021, "kf_nick": "RcaGzGy89NSHLJVe"}, {"kf_account": "Siss95TKc_@Q4LU17KQwFWbTMIm5VzHxc44JbJWtK", "kf_headimgurl": "", "kf_id": 2023, "kf_nick": "89uEdc9rftB72Q8H"}, {"kf_account": "mzk3VJdUD_@p5GnPuQcFB8XRYBPKxhgaA17vw9Wps", "kf_headimgurl": "", "kf_id": 2025, "kf_nick": "yXTg131F7LjuqfdW"}, {"kf_account": "RQkmXST9h_@oKF1pe2W2FVWPMgYf92uSGsKpBko7J", "kf_headimgurl": "", "kf_id": 2027, "kf_nick": "NQCkOVLGtPvHsXs4"}, {"kf_account": "NRTw4x7YL_@hdYR4LuWEWJZ0iWoe4xQsNqC2IgoHi", "kf_headimgurl": "", "kf_id": 2029, "kf_nick": "o7GoTY46wcUR01xj"}, {"kf_account": "Sc0NwcNGk_@VEMEOZM7OcI5xki4zl8y3Hvt4VFg45", "kf_headimgurl": "", "kf_id": 2031, "kf_nick": "JT7VIs5Dh044GsQ5"}, {"kf_account": "wCy20qT7H_@45KjVBrI9EIEi4eNouGgCiEjiReqBd", "kf_headimgurl": "", "kf_id": 2033, "kf_nick": "bbvPpBF9ZYQGIYW3"}, {"kf_account": "qSnj5Ax5H_@qB4OcJMOHSIdnmlfTJY6h5o1XBiqme", "kf_headimgurl": "", "kf_id": 2035, "kf_nick": "r9vd7b0QCs328ZyF"}, {"kf_account": "wh9VL9sOF_@Qvh1zgSbujoV12kh9DMZfP8jc85uwJ", "kf_headimgurl": "", "kf_id": 2037, "kf_nick": "TrFoPT8NYAWjF2D6"}, {"kf_account": "adad@111", "kf_headimgurl": "http://mmbiz.qpic.cn/mmbiz_png/70AOWquMz5EWeRhjGXNe18aDevrLcE1WfdvvBNgHoLxVF4JqFrdsq03UicDgVW3Ir2mNpRKhMic4fem2BUWUYF8Q/300?wx_fmt=png/0", "kf_id": 2039, "kf_nick": "\u4e1c\u4e1c"}, {"kf_account": "Sandy12_@test", "kf_headimgurl": "", "kf_id": 2040, "kf_nick": "\u73ca\u8fea"}, {"kf_account": "Sandy666_@test", "kf_headimgurl": "", "kf_id": 2041, "kf_nick": "\u73ca\u8fea"}, {"kf_account": "Sedfsg@testetestetestetestetesteteste", "kf_headimgurl": "", "kf_id": 2042, "kf_nick": "\u73ca\u8fea"}, {"kf_account": "DC57zGQYE_@NB3wV7DnMYwQCeUEt96bRYvKRD0iAg", "kf_headimgurl": "", "kf_id": 2043, "kf_nick": "UCPmuKrrSmUv54AJ"}, {"kf_account": "KxPb8pqEx_@ETxYpWnwJRV29vsmw4dgvjOmECVz3b", "kf_headimgurl": "", "kf_id": 2045, "kf_nick": "CrkexMyMWksO2PRr"}, {"kf_account": "cqU49jXdX_@xpya1m6VpjX4qZQ47dZ9umYr5Hiivu", "kf_headimgurl": "", "kf_id": 2047, "kf_nick": "OmPa836DhAmm89ON"}]}"}
{"CreateTime": "2024-05-16 12:38:50", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【上传客服头像接口】用例1：参数全部正确(jpeg格式)- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:38:50", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【上传客服头像接口】用例1：参数全部正确(jpeg格式)- 测试用例,执行成功！实际响应结果为：{'errcode': 0, 'errmsg': 'ok'}"}
{"CreateTime": "2024-05-16 12:38:50", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【上传客服头像接口】用例1：参数全部正确(jpeg格式)- 测试用例,执行成功！实际响应结果为：{"errcode": 0, "errmsg": "ok"}"}
{"CreateTime": "2024-05-16 12:38:52", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【上传客服头像接口】用例2：头像size超过限制大小- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:38:52", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【上传客服头像接口】用例2：头像size超过限制大小- 测试用例,执行成功！实际响应结果为：{'errcode': 45002, 'errmsg': 'content size out of limit rid: 66458dda-6e513c60-28287d66'}"}
{"CreateTime": "2024-05-16 12:38:52", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【上传客服头像接口】用例2：头像size超过限制大小- 测试用例,执行成功！实际响应结果为：{"errcode": 45002, "errmsg": "content size out of limit rid: 66458dda-6e513c60-28287d66"}"}
{"CreateTime": "2024-05-16 12:38:53", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【上传客服头像接口】用例3：参数全部正确(png格式)- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:38:53", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【上传客服头像接口】用例3：参数全部正确(png格式)- 测试用例,执行成功！实际响应结果为：{'errcode': 0, 'errmsg': 'ok'}"}
{"CreateTime": "2024-05-16 12:38:53", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【上传客服头像接口】用例3：参数全部正确(png格式)- 测试用例,执行成功！实际响应结果为：{"errcode": 0, "errmsg": "ok"}"}
{"CreateTime": "2024-05-16 12:38:53", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【上传客服头像接口】用例4：头像上传为空- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:38:53", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【上传客服头像接口】用例4：头像上传为空- 测试用例,执行成功！实际响应结果为：{'errcode': 41005, 'errmsg': 'media data missing hint: [SFHcWH5Rf-qqTO9a] rid: 66458ddd-3c326f88-12ee9405'}"}
{"CreateTime": "2024-05-16 12:38:53", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【上传客服头像接口】用例4：头像上传为空- 测试用例,执行成功！实际响应结果为：{"errcode": 41005, "errmsg": "media data missing hint: [SFHcWH5Rf-qqTO9a] rid: 66458ddd-3c326f88-12ee9405"}"}
{"CreateTime": "2024-05-16 12:38:54", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【上传客服头像接口】用例5：头像上传格式错误（不支持的媒体类型）- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:38:54", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【上传客服头像接口】用例5：头像上传格式错误（不支持的媒体类型）- 测试用例,执行成功！实际响应结果为：{'errcode': 40005, 'errmsg': 'invalid file type hint: [SFHcKUore-F_XKbA] rid: 66458ddd-3873dc3f-57497274'}"}
{"CreateTime": "2024-05-16 12:38:54", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【上传客服头像接口】用例5：头像上传格式错误（不支持的媒体类型）- 测试用例,执行成功！实际响应结果为：{"errcode": 40005, "errmsg": "invalid file type hint: [SFHcKUore-F_XKbA] rid: 66458ddd-3873dc3f-57497274"}"}
{"CreateTime": "2024-05-16 12:38:54", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【上传客服头像接口】用例6：无效的客服账号- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:38:54", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【上传客服头像接口】用例6：无效的客服账号- 测试用例,执行成功！实际响应结果为：{'errcode': 65401, 'errmsg': 'invalid custom service account hint: [SFHcFeYWO-] rid: 66458dde-16c89299-66f9eef6'}"}
{"CreateTime": "2024-05-16 12:38:54", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【上传客服头像接口】用例6：无效的客服账号- 测试用例,执行成功！实际响应结果为：{"errcode": 65401, "errmsg": "invalid custom service account hint: [SFHcFeYWO-] rid: 66458dde-16c89299-66f9eef6"}"}
{"CreateTime": "2024-05-16 12:38:55", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【获取鉴权接口】用例1：grant_type参数为空/缺失- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:38:55", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【获取鉴权接口】用例1：grant_type参数为空/缺失- 测试用例,执行成功！实际响应结果为：{'errcode': 40002, 'errmsg': 'invalid grant_type rid: 66458ddf-0aaa5c91-386e897a'}"}
{"CreateTime": "2024-05-16 12:38:55", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【获取鉴权接口】用例2：grant_type参数错误- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:38:55", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【获取鉴权接口】用例2：grant_type参数错误- 测试用例,执行成功！实际响应结果为：{'errcode': 40002, 'errmsg': 'invalid grant_type rid: 66458ddf-27337c87-48334890'}"}
{"CreateTime": "2024-05-16 12:38:55", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【获取鉴权接口】用例3：appid参数为空/缺失- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:38:55", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【获取鉴权接口】用例3：appid参数为空/缺失- 测试用例,执行成功！实际响应结果为：{'errcode': 41002, 'errmsg': 'appid missing rid: 66458ddf-518c0d5d-7bcecc36'}"}
{"CreateTime": "2024-05-16 12:38:55", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【获取鉴权接口】用例4：appid参数错误- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:38:55", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【获取鉴权接口】用例4：appid参数错误- 测试用例,执行成功！实际响应结果为：{'errcode': 40013, 'errmsg': 'invalid appid rid: 66458ddf-535f2d1b-29bf9ad8'}"}
{"CreateTime": "2024-05-16 12:38:56", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【获取鉴权接口】用例5：secret参数为空/缺失- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:38:56", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【获取鉴权接口】用例5：secret参数为空/缺失- 测试用例,执行成功！实际响应结果为：{'errcode': 41004, 'errmsg': 'appsecret missing rid: 66458de0-42e6352f-5be7e77b'}"}
{"CreateTime": "2024-05-16 12:38:56", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【获取鉴权接口】用例6：secret参数错误- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:38:56", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【获取鉴权接口】用例6：secret参数错误- 测试用例,执行成功！实际响应结果为：{'errcode': 40125, 'errmsg': 'invalid appsecret rid: 66458de0-3b621982-0de829c7'}"}
{"CreateTime": "2024-05-16 12:38:56", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【获取鉴权接口】用例7：所有参数正确- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:38:56", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【获取鉴权接口】用例7：所有参数正确- 测试用例,执行成功！实际响应结果为：{'access_token': '80_dvU532PwP6i0JNfenW99jaHpNzBZQfAnu2Z7xPst8ftDrF5pazCM2cn7KRCOOcKVaWrkZLmtev_0TTMFFZCwKZqp5vgkUy5WTj4v3haVRbtWEWQ1Wtfmd3FkO6ETPOgAFAHDC', 'expires_in': 7200}"}
{"CreateTime": "2024-05-16 12:38:57", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【创建永久二维码ticket接口】用例1：参数全部正确- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:38:57", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【创建永久二维码ticket接口】用例1：参数全部正确- 测试用例,执行成功！实际响应结果为：{"ticket": "gQEl8TwAAAAAAAAAAS5odHRwOi8vd2VpeGluLnFxLmNvbS9xLzAyN2tjQndyZUVmb0QxMDAwME0wM1cAAgThjUVmAwQAAAAA", "url": "http://weixin.qq.com/q/027kcBwreEfoD10000M03W"}"}
{"CreateTime": "2024-05-16 12:38:57", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【创建永久二维码ticket接口】用例1：参数全部正确- 测试用例,执行成功！实际响应结果为：{"ticket": "gQEl8TwAAAAAAAAAAS5odHRwOi8vd2VpeGluLnFxLmNvbS9xLzAyN2tjQndyZUVmb0QxMDAwME0wM1cAAgThjUVmAwQAAAAA", "url": "http://weixin.qq.com/q/027kcBwreEfoD10000M03W"}"}
{"CreateTime": "2024-05-16 12:38:57", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【通过ticket换取二维码接口】用例1：参数全部正确- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:38:58", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "用例1：参数全部正确(多个用户)- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:38:58", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "用例1：参数全部正确(多个用户)- 测试用例,执行成功！实际响应结果为：{"user_info_list": [{"subscribe": 1, "openid": "oDqjY50sO3UCivurTfvnATmCMuN0", "nickname": "", "sex": 0, "language": "zh_CN", "city": "", "province": "", "country": "", "headimgurl": "", "subscribe_time": 1642558819, "remark": "hq7olqs2hrH178OjZfLoHWubWnx5cp", "groupid": 2, "tagid_list": [2], "subscribe_scene": "ADD_SCENE_QR_CODE", "qr_scene": 0, "qr_scene_str": ""}, {"subscribe": 1, "openid": "oDqjY5-wrnuyN9OBXaN0md8rLsyQ", "nickname": "", "sex": 0, "language": "zh_CN", "city": "", "province": "", "country": "", "headimgurl": "", "subscribe_time": 1642558939, "remark": "", "groupid": 0, "tagid_list": [], "subscribe_scene": "ADD_SCENE_QR_CODE", "qr_scene": 0, "qr_scene_str": ""}]}"}
{"CreateTime": "2024-05-16 12:38:58", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "用例1：参数全部正确(多个用户)- 测试用例,执行成功！实际响应结果为：{"user_info_list": [{"subscribe": 1, "openid": "oDqjY50sO3UCivurTfvnATmCMuN0", "nickname": "", "sex": 0, "language": "zh_CN", "city": "", "province": "", "country": "", "headimgurl": "", "subscribe_time": 1642558819, "remark": "hq7olqs2hrH178OjZfLoHWubWnx5cp", "groupid": 2, "tagid_list": [2], "subscribe_scene": "ADD_SCENE_QR_CODE", "qr_scene": 0, "qr_scene_str": ""}, {"subscribe": 1, "openid": "oDqjY5-wrnuyN9OBXaN0md8rLsyQ", "nickname": "", "sex": 0, "language": "zh_CN", "city": "", "province": "", "country": "", "headimgurl": "", "subscribe_time": 1642558939, "remark": "", "groupid": 0, "tagid_list": [], "subscribe_scene": "ADD_SCENE_QR_CODE", "qr_scene": 0, "qr_scene_str": ""}]}"}
{"CreateTime": "2024-05-16 12:38:58", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "用例2：参数全部正确(单个用户)- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:38:58", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "用例2：参数全部正确(单个用户)- 测试用例,执行成功！实际响应结果为：{"user_info_list": [{"subscribe": 1, "openid": "oDqjY5-wrnuyN9OBXaN0md8rLsyQ", "nickname": "", "sex": 0, "language": "zh_CN", "city": "", "province": "", "country": "", "headimgurl": "", "subscribe_time": 1642558939, "remark": "", "groupid": 0, "tagid_list": [], "subscribe_scene": "ADD_SCENE_QR_CODE", "qr_scene": 0, "qr_scene_str": ""}]}"}
{"CreateTime": "2024-05-16 12:38:58", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "用例2：参数全部正确(单个用户)- 测试用例,执行成功！实际响应结果为：{"user_info_list": [{"subscribe": 1, "openid": "oDqjY5-wrnuyN9OBXaN0md8rLsyQ", "nickname": "", "sex": 0, "language": "zh_CN", "city": "", "province": "", "country": "", "headimgurl": "", "subscribe_time": 1642558939, "remark": "", "groupid": 0, "tagid_list": [], "subscribe_scene": "ADD_SCENE_QR_CODE", "qr_scene": 0, "qr_scene_str": ""}]}"}
{"CreateTime": "2024-05-16 12:38:59", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "用例3：存在单个无效的openid- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:38:59", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "用例3：存在单个无效的openid- 测试用例,执行成功！实际响应结果为：{'errcode': 40003, 'errmsg': 'invalid openid hint: [SFHchBeVf-fLPobA] rid: 66458de3-3060c72a-4f453cb9'}"}
{"CreateTime": "2024-05-16 12:38:59", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "用例3：存在单个无效的openid- 测试用例,执行成功！实际响应结果为：{"errcode": 40003, "errmsg": "invalid openid hint: [SFHchBeVf-fLPobA] rid: 66458de3-3060c72a-4f453cb9"}"}
{"CreateTime": "2024-05-16 12:38:59", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "用例4：存在多个无效的openid- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:38:59", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "用例4：存在多个无效的openid- 测试用例,执行成功！实际响应结果为：{'errcode': 40003, 'errmsg': 'invalid openid hint: [SFHcB9sQf-rIfvvA] rid: 66458de3-14bf1f9f-77a49247'}"}
{"CreateTime": "2024-05-16 12:38:59", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "用例4：存在多个无效的openid- 测试用例,执行成功！实际响应结果为：{"errcode": 40003, "errmsg": "invalid openid hint: [SFHcB9sQf-rIfvvA] rid: 66458de3-14bf1f9f-77a49247"}"}
{"CreateTime": "2024-05-16 12:38:59", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "用例5：empty post data- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:38:59", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "用例5：empty post data- 测试用例,执行成功！实际响应结果为：{'errcode': 44002, 'errmsg': 'empty post data hint: [tFHcNqDVf-ImAHgA] rid: 66458de3-606fb527-667bba8b'}"}
{"CreateTime": "2024-05-16 12:38:59", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "用例5：empty post data- 测试用例,执行成功！实际响应结果为：{"errcode": 44002, "errmsg": "empty post data hint: [tFHcNqDVf-ImAHgA] rid: 66458de3-606fb527-667bba8b"}"}
{"CreateTime": "2024-05-16 12:39:00", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "用例1：参数openid存在- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:39:00", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "用例1：参数openid存在- 测试用例,执行成功！实际响应结果为：{'subscribe': 1, 'openid': 'oDqjY5xYp972631jH7IsDR3pl2x0', 'nickname': '', 'sex': 0, 'language': 'zh_CN', 'city': '', 'province': '', 'country': '', 'headimgurl': '', 'subscribe_time': 1642564111, 'remark': 'XR5jotds1xRoweG97jQxTv6BCroabf', 'groupid': 0, 'tagid_list': [], 'subscribe_scene': 'ADD_SCENE_QR_CODE', 'qr_scene': 0, 'qr_scene_str': ''}"}
{"CreateTime": "2024-05-16 12:39:00", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "用例1：参数openid存在- 测试用例,执行成功！实际响应结果为：{'subscribe': 1, 'openid': 'oDqjY5xYp972631jH7IsDR3pl2x0', 'nickname': '', 'sex': 0, 'language': 'zh_CN', 'city': '', 'province': '', 'country': '', 'headimgurl': '', 'subscribe_time': 1642564111, 'remark': 'XR5jotds1xRoweG97jQxTv6BCroabf', 'groupid': 0, 'tagid_list': [], 'subscribe_scene': 'ADD_SCENE_QR_CODE', 'qr_scene': 0, 'qr_scene_str': ''}"}
{"CreateTime": "2024-05-16 12:39:00", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "用例2：openid参数无效- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:39:00", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "用例2：openid参数无效- 测试用例,执行成功！实际响应结果为：{'errcode': 40003, 'errmsg': 'invalid openid hint: [tFHcDe3Dk-DwholA] rid: 66458de4-22d5597d-25cca845'}"}
{"CreateTime": "2024-05-16 12:39:00", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "用例2：openid参数无效- 测试用例,执行成功！实际响应结果为：{"errcode": 40003, "errmsg": "invalid openid hint: [tFHcDe3Dk-DwholA] rid: 66458de4-22d5597d-25cca845"}"}
{"CreateTime": "2024-05-16 12:39:01", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "用例3：openid为null- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:39:01", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "用例3：openid为null- 测试用例,执行成功！实际响应结果为：{'errcode': 40003, 'errmsg': 'invalid openid hint: [tFHcA9sQf-BcsFjA] rid: 66458de5-7176d87c-3f0af40b'}"}
{"CreateTime": "2024-05-16 12:39:01", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "用例3：openid为null- 测试用例,执行成功！实际响应结果为：{"errcode": 40003, "errmsg": "invalid openid hint: [tFHcA9sQf-BcsFjA] rid: 66458de5-7176d87c-3f0af40b"}"}
{"CreateTime": "2024-05-16 12:39:01", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "用例4：openid为空- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:39:01", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "用例4：openid为空- 测试用例,执行成功！实际响应结果为：{'errcode': 40003, 'errmsg': 'invalid openid hint: [tFHc58sQf-o] rid: 66458de5-2e9ce45c-2feaa165'}"}
{"CreateTime": "2024-05-16 12:39:01", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "用例4：openid为空- 测试用例,执行成功！实际响应结果为：{"errcode": 40003, "errmsg": "invalid openid hint: [tFHc58sQf-o] rid: 66458de5-2e9ce45c-2feaa165"}"}
{"CreateTime": "2024-05-16 12:39:01", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【获取用户列表接口】用例1：所有参数正常- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:39:01", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【获取用户列表接口】用例1：所有参数正常- 测试用例,执行成功！实际响应结果为：{"total": 4, "count": 4, "data": {"openid": ["oDqjY5zgUEgHwL0Tas7HJv566208", "oDqjY5xYp972631jH7IsDR3pl2x0", "oDqjY5-wrnuyN9OBXaN0md8rLsyQ", "oDqjY50sO3UCivurTfvnATmCMuN0"]}, "next_openid": "oDqjY50sO3UCivurTfvnATmCMuN0"}"}
{"CreateTime": "2024-05-16 12:39:01", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【获取用户列表接口】用例1：所有参数正常- 测试用例,执行成功！实际响应结果为：{"total": 4, "count": 4, "data": {"openid": ["oDqjY5zgUEgHwL0Tas7HJv566208", "oDqjY5xYp972631jH7IsDR3pl2x0", "oDqjY5-wrnuyN9OBXaN0md8rLsyQ", "oDqjY50sO3UCivurTfvnATmCMuN0"]}, "next_openid": "oDqjY50sO3UCivurTfvnATmCMuN0"}"}
{"CreateTime": "2024-05-16 12:39:01", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【获取用户列表接口】用例1：所有参数正常- 测试用例,执行成功！实际响应结果为：{"total": 4, "count": 4, "data": {"openid": ["oDqjY5zgUEgHwL0Tas7HJv566208", "oDqjY5xYp972631jH7IsDR3pl2x0", "oDqjY5-wrnuyN9OBXaN0md8rLsyQ", "oDqjY50sO3UCivurTfvnATmCMuN0"]}, "next_openid": "oDqjY50sO3UCivurTfvnATmCMuN0"}"}
{"CreateTime": "2024-05-16 12:39:02", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【获取用户列表接口】用例2：next_openid无效为数字，参数无效- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:39:02", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【获取用户列表接口】用例2：next_openid无效为数字，参数无效- 测试用例,执行成功！实际响应结果为：{'errcode': 40003, 'errmsg': 'invalid openid hint: [tFHcmi5rf-fresLA] rid: 66458de6-5afb3f06-27777eb1'}"}
{"CreateTime": "2024-05-16 12:39:02", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【获取用户列表接口】用例2：next_openid无效为数字，参数无效- 测试用例,执行成功！实际响应结果为：{"errcode": 40003, "errmsg": "invalid openid hint: [tFHcmi5rf-fresLA] rid: 66458de6-5afb3f06-27777eb1"}"}
{"CreateTime": "2024-05-16 12:39:02", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【获取用户列表接口】用例3：next_openid为大小写字母，参数无效- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:39:02", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【获取用户列表接口】用例3：next_openid为大小写字母，参数无效- 测试用例,执行成功！实际响应结果为：{'errcode': 40003, 'errmsg': 'invalid openid hint: [tFHcJryWf-R6cbHA] rid: 66458de6-197b6004-34da6150'}"}
{"CreateTime": "2024-05-16 12:39:02", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【获取用户列表接口】用例3：next_openid为大小写字母，参数无效- 测试用例,执行成功！实际响应结果为：{"errcode": 40003, "errmsg": "invalid openid hint: [tFHcJryWf-R6cbHA] rid: 66458de6-197b6004-34da6150"}"}
{"CreateTime": "2024-05-16 12:39:02", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【设置用户备注名接口】用例1：所有参数正常- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:39:02", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【设置用户备注名接口】用例1：所有参数正常- 测试用例,执行成功！实际响应结果为：{'errcode': 0, 'errmsg': 'ok'}"}
{"CreateTime": "2024-05-16 12:39:02", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【设置用户备注名接口】用例1：所有参数正常- 测试用例,执行成功！实际响应结果为：{"errcode": 0, "errmsg": "ok"}"}
{"CreateTime": "2024-05-16 12:39:03", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【设置用户备注名接口】用例2：openid参数为空- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:39:03", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【设置用户备注名接口】用例2：openid参数为空- 测试用例,执行成功！实际响应结果为：{'errcode': 40003, 'errmsg': 'invalid openid hint: [tFHcc1j2e-.OrXga] rid: 66458de7-44c3c625-415755f4'}"}
{"CreateTime": "2024-05-16 12:39:03", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【设置用户备注名接口】用例2：openid参数为空- 测试用例,执行成功！实际响应结果为：{"errcode": 40003, "errmsg": "invalid openid hint: [tFHcc1j2e-.OrXga] rid: 66458de7-44c3c625-415755f4"}"}
{"CreateTime": "2024-05-16 12:39:03", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【设置用户备注名接口】用例3：openid参数不符合规则- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:39:03", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【设置用户备注名接口】用例3：openid参数不符合规则- 测试用例,执行成功！实际响应结果为：{'errcode': 40003, 'errmsg': 'invalid openid hint: [tFHcjBeVf-9WUP2a] rid: 66458de7-1c354822-406c300a'}"}
{"CreateTime": "2024-05-16 12:39:03", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【设置用户备注名接口】用例3：openid参数不符合规则- 测试用例,执行成功！实际响应结果为：{"errcode": 40003, "errmsg": "invalid openid hint: [tFHcjBeVf-9WUP2a] rid: 66458de7-1c354822-406c300a"}"}
{"CreateTime": "2024-05-16 12:39:03", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【设置用户备注名接口】用例4：remark参数为空- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:39:03", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【设置用户备注名接口】用例4：remark参数为空- 测试用例,执行成功！实际响应结果为：{'errcode': 0, 'errmsg': 'ok'}"}
{"CreateTime": "2024-05-16 12:39:03", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【设置用户备注名接口】用例4：remark参数为空- 测试用例,执行成功！实际响应结果为：{"errcode": 0, "errmsg": "ok"}"}
{"CreateTime": "2024-05-16 12:39:04", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【设置用户备注名接口】用例5：openid不存在/没注册- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:39:04", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【设置用户备注名接口】用例5：openid不存在/没注册- 测试用例,执行成功！实际响应结果为：{'errcode': 43004, 'errmsg': 'require subscribe hint: [tFHcNmNTO-K1fCWa] rid: 66458de8-0cf40327-5389b3ab'}"}
{"CreateTime": "2024-05-16 12:39:04", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【设置用户备注名接口】用例5：openid不存在/没注册- 测试用例,执行成功！实际响应结果为：{"errcode": 43004, "errmsg": "require subscribe hint: [tFHcNmNTO-K1fCWa] rid: 66458de8-0cf40327-5389b3ab"}"}
{"CreateTime": "2024-05-16 12:39:04", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【创建用户标签接口】用例1：参数全部正确- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:39:05", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【创建用户标签接口】用例2：参数name为""- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:39:05", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【创建用户标签接口】用例2：参数name为""- 测试用例,执行成功！实际响应结果为：{'errcode': 45157, 'errmsg': 'invalid tag name hint: [tFHccQwRf-S.2VIa] rid: 66458de9-5e3f61d4-4b345353'}"}
{"CreateTime": "2024-05-16 12:39:05", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【创建用户标签接口】用例2：参数name为""- 测试用例,执行成功！实际响应结果为：{"errcode": 45157, "errmsg": "invalid tag name hint: [tFHccQwRf-S.2VIa] rid: 66458de9-5e3f61d4-4b345353"}"}
{"CreateTime": "2024-05-16 12:39:05", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【创建用户标签接口】用例3：参数name已存在- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:39:05", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【创建用户标签接口】用例3：参数name已存在- 测试用例,执行成功！实际响应结果为：{'errcode': 45157, 'errmsg': 'invalid tag name hint: [tFHcnE6Vf-r.RS0a] rid: 66458de9-2004e323-33429871'}"}
{"CreateTime": "2024-05-16 12:39:05", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【创建用户标签接口】用例3：参数name已存在- 测试用例,执行成功！实际响应结果为：{"errcode": 45157, "errmsg": "invalid tag name hint: [tFHcnE6Vf-r.RS0a] rid: 66458de9-2004e323-33429871"}"}
{"CreateTime": "2024-05-16 12:39:06", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【创建用户标签接口】用例4：参数name为null- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:39:06", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【创建用户标签接口】用例4：参数name为null- 测试用例,执行成功！实际响应结果为：{'errcode': 45157, 'errmsg': 'invalid tag name hint: [tFHcGBeVf-Rfo97] rid: 66458dea-5a87c8a9-2cdecebc'}"}
{"CreateTime": "2024-05-16 12:39:06", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【创建用户标签接口】用例4：参数name为null- 测试用例,执行成功！实际响应结果为：{"errcode": 45157, "errmsg": "invalid tag name hint: [tFHcGBeVf-Rfo97] rid: 66458dea-5a87c8a9-2cdecebc"}"}
{"CreateTime": "2024-05-16 12:39:06", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【创建用户标签接口】用例5：参数name超过30个字节- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:39:06", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【创建用户标签接口】用例5：参数name超过30个字节- 测试用例,执行成功！实际响应结果为：{'errcode': 45158, 'errmsg': 'tag name too long hint: [tFHclxtEO-INY6uA] rid: 66458dea-401ab481-0f75e573'}"}
{"CreateTime": "2024-05-16 12:39:06", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【创建用户标签接口】用例5：参数name超过30个字节- 测试用例,执行成功！实际响应结果为：{"errcode": 45158, "errmsg": "tag name too long hint: [tFHclxtEO-INY6uA] rid: 66458dea-401ab481-0f75e573"}"}
{"CreateTime": "2024-05-16 12:39:06", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【创建用户标签接口】用例6：请求body缺失- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:39:06", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【创建用户标签接口】用例6：请求body缺失- 测试用例,执行成功！实际响应结果为：{'errcode': 44002, 'errmsg': 'empty post data hint: [tFHcdpEVf-19Tq.A] rid: 66458dea-0062958d-693a62e8'}"}
{"CreateTime": "2024-05-16 12:39:06", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【创建用户标签接口】用例6：请求body缺失- 测试用例,执行成功！实际响应结果为：{"errcode": 44002, "errmsg": "empty post data hint: [tFHcdpEVf-19Tq.A] rid: 66458dea-0062958d-693a62e8"}"}
{"CreateTime": "2024-05-16 12:39:07", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【删除用户标签接口】用例1：全部参数正确- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:39:07", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【删除用户标签接口】用例1：全部参数正确- 测试用例,执行成功！实际响应结果为：{'errcode': 0, 'errmsg': 'ok'}"}
{"CreateTime": "2024-05-16 12:39:07", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【删除用户标签接口】用例1：全部参数正确- 测试用例,执行成功！实际响应结果为：{"errcode": 0, "errmsg": "ok"}"}
{"CreateTime": "2024-05-16 12:39:07", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【删除用户标签接口】用例2：删除用户标签-id参数为空/缺失- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:39:07", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【删除用户标签接口】用例2：删除用户标签-id参数为空/缺失- 测试用例,执行成功！实际响应结果为：{'errcode': 45058, 'errmsg': "can't modify sys tag hint: [tFHc6F4Vf-J] rid: 66458deb-6e0a5b2f-3bddefce"}"}
{"CreateTime": "2024-05-16 12:39:07", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【删除用户标签接口】用例2：删除用户标签-id参数为空/缺失- 测试用例,执行成功！实际响应结果为：{"errcode": 45058, "errmsg": "can't modify sys tag hint: [tFHc6F4Vf-J] rid: 66458deb-6e0a5b2f-3bddefce"}"}
{"CreateTime": "2024-05-16 12:39:07", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【删除用户标签接口】用例3：删除用户标签-参数id为小数- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:39:07", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【删除用户标签接口】用例3：删除用户标签-参数id为小数- 测试用例,执行成功！实际响应结果为：{'errcode': 47001, 'errmsg': 'data format error hint: [tFHcgBeVf-IattLA] rid: 66458deb-408761cf-081451e4'}"}
{"CreateTime": "2024-05-16 12:39:07", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【删除用户标签接口】用例3：删除用户标签-参数id为小数- 测试用例,执行成功！实际响应结果为：{"errcode": 47001, "errmsg": "data format error hint: [tFHcgBeVf-IattLA] rid: 66458deb-408761cf-081451e4"}"}
{"CreateTime": "2024-05-16 12:39:08", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【删除用户标签接口】用例4：删除用户标签-参数id为中文汉字- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:39:08", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【删除用户标签接口】用例4：删除用户标签-参数id为中文汉字- 测试用例,执行成功！实际响应结果为：{'errcode': 47001, 'errmsg': 'data format error hint: [tFHcr0mre-rItLFa] rid: 66458dec-615a10e4-253890f7'}"}
{"CreateTime": "2024-05-16 12:39:08", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【删除用户标签接口】用例4：删除用户标签-参数id为中文汉字- 测试用例,执行成功！实际响应结果为：{"errcode": 47001, "errmsg": "data format error hint: [tFHcr0mre-rItLFa] rid: 66458dec-615a10e4-253890f7"}"}
{"CreateTime": "2024-05-16 12:39:08", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【删除用户标签接口】用例5：删除用户标签-参数id含特殊符号- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:39:08", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【删除用户标签接口】用例5：删除用户标签-参数id含特殊符号- 测试用例,执行成功！实际响应结果为：{'errcode': 47001, 'errmsg': 'data format error hint: [tFHclxtEO-Vzhy4a] rid: 66458dec-2082cda0-13340f20'}"}
{"CreateTime": "2024-05-16 12:39:08", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【删除用户标签接口】用例5：删除用户标签-参数id含特殊符号- 测试用例,执行成功！实际响应结果为：{"errcode": 47001, "errmsg": "data format error hint: [tFHclxtEO-Vzhy4a] rid: 66458dec-2082cda0-13340f20"}"}
{"CreateTime": "2024-05-16 12:39:09", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【删除用户标签接口】用例6：删除用户标签-参数id为系统id=1- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:39:09", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【删除用户标签接口】用例6：删除用户标签-参数id为系统id=1- 测试用例,执行成功！实际响应结果为：{'errcode': 45058, 'errmsg': "can't modify sys tag hint: [tFHc9Uj2e-0TtPla] rid: 66458dec-6606c20c-355b80a9"}"}
{"CreateTime": "2024-05-16 12:39:09", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【删除用户标签接口】用例6：删除用户标签-参数id为系统id=1- 测试用例,执行成功！实际响应结果为：{"errcode": 45058, "errmsg": "can't modify sys tag hint: [tFHc9Uj2e-0TtPla] rid: 66458dec-6606c20c-355b80a9"}"}
{"CreateTime": "2024-05-16 12:39:09", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【删除用户标签接口】用例7：删除用户标签-参数id为系统id=2- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:39:09", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【删除用户标签接口】用例7：删除用户标签-参数id为系统id=2- 测试用例,执行成功！实际响应结果为：{'errcode': 45058, 'errmsg': "can't modify sys tag hint: [tFHc6F4Vf-eLOECA] rid: 66458ded-1adfe78d-6f442fd0"}"}
{"CreateTime": "2024-05-16 12:39:09", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【删除用户标签接口】用例7：删除用户标签-参数id为系统id=2- 测试用例,执行成功！实际响应结果为：{"errcode": 45058, "errmsg": "can't modify sys tag hint: [tFHc6F4Vf-eLOECA] rid: 66458ded-1adfe78d-6f442fd0"}"}
{"CreateTime": "2024-05-16 12:39:09", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【删除用户标签接口】用例8：删除用户标签-参数id为系统id=3- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:39:09", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【删除用户标签接口】用例8：删除用户标签-参数id为系统id=3- 测试用例,执行成功！实际响应结果为：{'errcode': 45058, 'errmsg': "can't modify sys tag hint: [tFHclxtEO-BjZ8Aa] rid: 66458ded-5f5563b9-5ef9abe3"}"}
{"CreateTime": "2024-05-16 12:39:09", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【删除用户标签接口】用例8：删除用户标签-参数id为系统id=3- 测试用例,执行成功！实际响应结果为：{"errcode": 45058, "errmsg": "can't modify sys tag hint: [tFHclxtEO-BjZ8Aa] rid: 66458ded-5f5563b9-5ef9abe3"}"}
{"CreateTime": "2024-05-16 12:39:10", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【获取标签下粉丝列表】用例1：参数正确- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:39:10", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【获取标签下粉丝列表】用例1：参数正确- 测试用例,执行成功！实际响应结果为：{"count": 0}"}
{"CreateTime": "2024-05-16 12:39:10", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【获取标签下粉丝列表】用例2：next_openid非法- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:39:10", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【获取标签下粉丝列表】用例2：next_openid非法- 测试用例,执行成功！实际响应结果为：{'errcode': 40003, 'errmsg': 'invalid openid hint: [tFHcSE6Vf-ocaXwA] rid: 66458dee-2082ef49-6eb6478f'}"}
{"CreateTime": "2024-05-16 12:39:10", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【获取标签下粉丝列表】用例2：next_openid非法- 测试用例,执行成功！实际响应结果为：{"errcode": 40003, "errmsg": "invalid openid hint: [tFHcSE6Vf-ocaXwA] rid: 66458dee-2082ef49-6eb6478f"}"}
{"CreateTime": "2024-05-16 12:39:10", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【查询用户标签接口】用例3：参数正确- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:39:10", "filename": "Assert.py", "line": "37", "levelname": "ERROR", "message": "【查询用户标签接口】用例3：参数正确,执行失败！实际响应结果中不包含：星标组,实际结果为：{"tags": [{"id": 2, "name": "\u661f\u6807\u7ec4", "count": 2}, {"id": 437, "name": "6NAhh", "count": 0}, {"id": 446, "name": "bM345i0jia4mn6fPBFmJ7QGWmik9ys", "count": 0}, {"id": 465, "name": "n6xrg4uVm6ZyjxX", "count": 0}, {"id": 468, "name": "R2rhh", "count": 0}, {"id": 470, "name": "yAClJCq5BO", "count": 0}, {"id": 472, "name": "cou", "count": 0}, {"id": 474, "name": "3V8tlE59Z73VJbpGd4zdSpSmCraytu", "count": 0}, {"id": 486, "name": "5taiTDi6PU", "count": 0}, {"id": 488, "name": "zKZ", "count": 0}, {"id": 490, "name": "jR9Df4fkbkq4gf4nwJbiwrXeas57iy", "count": 0}, {"id": 491, "name": "95ZUQ4WY9IAeJ8W99A0D0DGY5Na1il", "count": 0}, {"id": 492, "name": "7GvOUrahheyigFU8F45tvPRN3Hsye6", "count": 0}, {"id": 493, "name": "SG2nTcPQeD203TVekOm87Gh8TxmYjR", "count": 0}, {"id": 495, "name": "hAv9W0afjYtjJiUz1CrjTGY2GaSrF1", "count": 0}, {"id": 496, "name": "EdPYsrH0IokQ52mwAjE6wKPxrlmOJB", "count": 0}, {"id": 499, "name": "SWh", "count": 0}, {"id": 500, "name": "7Kg77VxZ8qvCJs9V3XCrAxx2qGf10j", "count": 0}, {"id": 504, "name": "ZHI8jJBWVA", "count": 0}, {"id": 505, "name": "pFbk63LnZROpxaC3teRnGr6hnF1A0X", "count": 0}, {"id": 513, "name": "bsMnFvqzjwHv8eAMn3zdCNFF3BHvHX", "count": 0}, {"id": 514, "name": "i1NNAL4x250fug3pMnnvkpCKo8oqcs", "count": 0}, {"id": 515, "name": "PAudcEW0E9O0BxGZa51SiWEo6YXWL6", "count": 0}, {"id": 521, "name": "JMqtbffAbpsQmRxqA7FnyHPK0LZw9P", "count": 0}, {"id": 522, "name": "o242uUPw6iB5Vxk", "count": 0}, {"id": 542, "name": "QLaAf5luC5", "count": 0}, {"id": 544, "name": "HiCKilj71o", "count": 0}, {"id": 546, "name": "Z70qOCMcDk", "count": 0}, {"id": 547, "name": "UoFhyMgYNCXzGeb", "count": 0}, {"id": 548, "name": "\u8c22\u8c22", "count": 0}, {"id": 549, "name": "\u6d0b", "count": 0}, {"id": 550, "name": "PFup9bvvmvQ8qYbWEDG8dNwKkGbZqo", "count": 0}, {"id": 552, "name": "4o1LyLAi1ark0xrQ0fHsischKdLILu", "count": 0}, {"id": 554, "name": "\u5443\u5443\u5443", "count": 0}, {"id": 558, "name": "loEFtyTss3gAbDymORoeZxraga0l3V", "count": 0}, {"id": 569, "name": "weropw12345w", "count": 0}, {"id": 572, "name": "qwertyuiop1234567890", "count": 0}, {"id": 573, "name": "fbyfQBpjnTFYlBegWSirKPw6HN3AKn", "count": 0}, {"id": 577, "name": "2", "count": 0}, {"id": 578, "name": "dsrxFKghzCIIAw4egyNVkhN7v5mCXW", "count": 0}, {"id": 594, "name": "wVAcl7uGs9JLLkv", "count": 0}, {"id": 596, "name": "0IxKqS5RvS6KqJvcXiacSmBfWYZcy9", "count": 0}, {"id": 611, "name": "MffEBaMtAtA2bbCianwNoeYOh5wjcX", "count": 0}, {"id": 613, "name": "rLjCQoa2ZLeR9bEPsfN8dUdZWCTs1u", "count": 0}, {"id": 614, "name": "GDWrRxkVPhntb0vufpz5x9DPnb4NZa", "count": 0}, {"id": 615, "name": "oOUf2aANYBxjd6gycfQ3XE7RUQkY43", "count": 0}, {"id": 616, "name": "k0lFAv5GZsWXLIZA3g04L1vrySdYy4", "count": 0}, {"id": 619, "name": "QqF1lPjIzEdngLerkRz5RLGZm8Z6RI", "count": 0}, {"id": 621, "name": "zrmSN17MnpYdNrVQSpKlFnoHoy8zfY", "count": 0}, {"id": 623, "name": "KxhWpIWY3GjMlRvOZ9QeRSQZQlq96u", "count": 0}, {"id": 624, "name": "B75gbgaKRwE5ef4oYtbp1epWeGrUtn", "count": 0}, {"id": 625, "name": "VNY7Y6CVR5g42etyZCq18tFCJuEsOV", "count": 0}, {"id": 638, "name": "eWMPPSr0WCAyKDocwnkkjaD91zGzS0", "count": 0}, {"id": 641, "name": "\u5e73", "count": 0}, {"id": 642, "name": "pPOBhuXaXJ8TJSw0QtHT8Q9l7hIM4a", "count": 0}, {"id": 646, "name": "FhtNjgTv55F32dsacC8nwZIJy7mrDU", "count": 0}, {"id": 683, "name": "fswiW52fvR4z6jcEDNzsECjBEWO1ut", "count": 0}, {"id": 684, "name": "ZZ6vKyWb19KjaMCstzXusW5lLASCXt", "count": 0}, {"id": 685, "name": "dd85EknZT3OqQaa3uy7ELan4dsW9Oa", "count": 0}, {"id": 688, "name": "DFYfugKDG1zX3Ug", "count": 0}, {"id": 689, "name": "W3NS31Fi5VruXBJ", "count": 0}, {"id": 690, "name": "SkRAVppAKtvhrigVrhfP3XKkpeIV44", "count": 0}, {"id": 696, "name": "nVtOWlny23Jy6xw0uqqtaSY1nPUKYd", "count": 0}, {"id": 697, "name": "yzrETGvUXXRb1Xr", "count": 0}, {"id": 698, "name": "DVBvzk7gBS4bb7Wz2zZD045hZbPWeC", "count": 0}, {"id": 713, "name": "RL5NmBSZP4jOWxHmGxa30IQAGh6VMD", "count": 0}, {"id": 714, "name": "zSzk31Xitm5AiWJYZI86RO763dxXaz", "count": 0}, {"id": 715, "name": "P8Jd48rFnXdI4xQ7PxVQ5wQotDQoyD", "count": 0}, {"id": 716, "name": "Gel7pOR7MBOL9Gp75fTeUGnLuETdjD", "count": 0}, {"id": 717, "name": "5R0fDLXAxnNThcNCLrVuAow0wkFbms", "count": 0}, {"id": 718, "name": "\\u661f\\u6807\\u7ec4", "count": 0}, {"id": 721, "name": "jBi650dP1mRQkUw", "count": 0}, {"id": 722, "name": "xp8GVPX4QjtaN8jMUPPgyn84DRYX6I", "count": 0}, {"id": 733, "name": "zGDZARe6yECgNyN5GscrbNx4tkzKND", "count": 0}, {"id": 738, "name": "v3F2xlO4S22g8ZL2YaAa2cMPBHHGKn", "count": 0}, {"id": 739, "name": "EPrmBEVvoh1Tcs1HhZdjXZPlalfj2G", "count": 0}, {"id": 742, "name": "wQSFcjik4gjKtzBVFFlxop8e4YTNon", "count": 0}, {"id": 743, "name": "LjlaPnGY6whzQwPWbohUWeW2cKeLq0", "count": 0}, {"id": 746, "name": "\u5929\u5929\u6d4b\u8bd5", "count": 0}, {"id": 747, "name": "\u5929\u5929", "count": 0}, {"id": 748, "name": "\u6d4b\u8bd5", "count": 0}, {"id": 749, "name": "\u83dc\u9e1f", "count": 0}, {"id": 750, "name": "\u8e29\u8e29\u8e29", "count": 0}, {"id": 751, "name": "\u5e7f", "count": 0}]}"}
{"CreateTime": "2024-05-16 12:39:11", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【修改用户标签接口】用例1：接口参数都正确- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:39:11", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【修改用户标签接口】用例1：接口参数都正确- 测试用例,执行成功！实际响应结果为：{'errcode': 0, 'errmsg': 'ok'}"}
{"CreateTime": "2024-05-16 12:39:11", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【修改用户标签接口】用例1：接口参数都正确- 测试用例,执行成功！实际响应结果为：{"errcode": 0, "errmsg": "ok"}"}
{"CreateTime": "2024-05-16 12:39:11", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【修改用户标签接口】用例2：id参数缺失/为空- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:39:11", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【修改用户标签接口】用例2：id参数缺失/为空- 测试用例,执行成功！实际响应结果为：{'errcode': 45058, 'errmsg': "can't modify sys tag hint: [tFHc6BsQf-j6Krba] rid: 66458def-1ed80df2-5837d7aa"}"}
{"CreateTime": "2024-05-16 12:39:11", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【修改用户标签接口】用例2：id参数缺失/为空- 测试用例,执行成功！实际响应结果为：{"errcode": 45058, "errmsg": "can't modify sys tag hint: [tFHc6BsQf-j6Krba] rid: 66458def-1ed80df2-5837d7aa"}"}
{"CreateTime": "2024-05-16 12:39:12", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【修改用户标签接口】用例3：参数id不存在- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:39:12", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【修改用户标签接口】用例3：参数id不存在- 测试用例,执行成功！实际响应结果为：{'errcode': -1, 'errmsg': 'system error hint: [tFHcevj2e-PNjKdA] rid: 66458def-48e7e158-3e163f4b'}"}
{"CreateTime": "2024-05-16 12:39:12", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【修改用户标签接口】用例3：参数id不存在- 测试用例,执行成功！实际响应结果为：{"errcode": -1, "errmsg": "system error hint: [tFHcevj2e-PNjKdA] rid: 66458def-48e7e158-3e163f4b"}"}
{"CreateTime": "2024-05-16 12:39:12", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【修改用户标签接口】用例4：参数id为系统数据0- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:39:12", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【修改用户标签接口】用例4：参数id为系统数据0- 测试用例,执行成功！实际响应结果为：{'errcode': 45058, 'errmsg': "can't modify sys tag hint: [tFHchBeVf-QrdMdA] rid: 66458df0-3fb45b41-01e4caf2"}"}
{"CreateTime": "2024-05-16 12:39:12", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【修改用户标签接口】用例4：参数id为系统数据0- 测试用例,执行成功！实际响应结果为：{"errcode": 45058, "errmsg": "can't modify sys tag hint: [tFHchBeVf-QrdMdA] rid: 66458df0-3fb45b41-01e4caf2"}"}
{"CreateTime": "2024-05-16 12:39:12", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【修改用户标签接口】用例5：参数id为系统数据1- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:39:12", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【修改用户标签接口】用例5：参数id为系统数据1- 测试用例,执行成功！实际响应结果为：{'errcode': 45058, 'errmsg': "can't modify sys tag hint: [tFHcLoEVf-o1Dika] rid: 66458df0-32ccc175-61cb3d3a"}"}
{"CreateTime": "2024-05-16 12:39:12", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【修改用户标签接口】用例5：参数id为系统数据1- 测试用例,执行成功！实际响应结果为：{"errcode": 45058, "errmsg": "can't modify sys tag hint: [tFHcLoEVf-o1Dika] rid: 66458df0-32ccc175-61cb3d3a"}"}
{"CreateTime": "2024-05-16 12:39:13", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【修改用户标签接口】用例6：参数id为系统数据2- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:39:13", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【修改用户标签接口】用例6：参数id为系统数据2- 测试用例,执行成功！实际响应结果为：{'errcode': 45058, 'errmsg': "can't modify sys tag hint: [tFHcloEVf-oCZtSA] rid: 66458df1-0ebbeadf-37c7480f"}"}
{"CreateTime": "2024-05-16 12:39:13", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【修改用户标签接口】用例6：参数id为系统数据2- 测试用例,执行成功！实际响应结果为：{"errcode": 45058, "errmsg": "can't modify sys tag hint: [tFHcloEVf-oCZtSA] rid: 66458df1-0ebbeadf-37c7480f"}"}
{"CreateTime": "2024-05-16 12:39:13", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【修改用户标签接口】用例7：参数id为系统数据3- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:39:13", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【修改用户标签接口】用例7：参数id为系统数据3- 测试用例,执行成功！实际响应结果为：{'errcode': 45058, 'errmsg': "can't modify sys tag hint: [tFHcmi5rf-ZK3aca] rid: 66458df1-40b083b4-6c1861bc"}"}
{"CreateTime": "2024-05-16 12:39:13", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【修改用户标签接口】用例7：参数id为系统数据3- 测试用例,执行成功！实际响应结果为：{"errcode": 45058, "errmsg": "can't modify sys tag hint: [tFHcmi5rf-ZK3aca] rid: 66458df1-40b083b4-6c1861bc"}"}
{"CreateTime": "2024-05-16 12:39:13", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【修改用户标签接口】用例8：参数id格式错误-为小写英文字母- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:39:13", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【修改用户标签接口】用例8：参数id格式错误-为小写英文字母- 测试用例,执行成功！实际响应结果为：{'errcode': 47001, 'errmsg': 'data format error hint: [tFHc68sQf-Z143Ra] rid: 66458df1-6a274ad3-5dea99ce'}"}
{"CreateTime": "2024-05-16 12:39:13", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【修改用户标签接口】用例8：参数id格式错误-为小写英文字母- 测试用例,执行成功！实际响应结果为：{"errcode": 47001, "errmsg": "data format error hint: [tFHc68sQf-Z143Ra] rid: 66458df1-6a274ad3-5dea99ce"}"}
{"CreateTime": "2024-05-16 12:39:14", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【修改用户标签接口】用例9：参数id格式错误-为大写英文字母- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:39:14", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【修改用户标签接口】用例9：参数id格式错误-为大写英文字母- 测试用例,执行成功！实际响应结果为：{'errcode': 47001, 'errmsg': 'data format error hint: [tFHcFBeVf-1QsHXa] rid: 66458df2-29c1c10e-13a35177'}"}
{"CreateTime": "2024-05-16 12:39:14", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【修改用户标签接口】用例9：参数id格式错误-为大写英文字母- 测试用例,执行成功！实际响应结果为：{"errcode": 47001, "errmsg": "data format error hint: [tFHcFBeVf-1QsHXa] rid: 66458df2-29c1c10e-13a35177"}"}
{"CreateTime": "2024-05-16 12:39:14", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【修改用户标签接口】用例10：参数id格式错误-为中文汉字- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:39:14", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【修改用户标签接口】用例10：参数id格式错误-为中文汉字- 测试用例,执行成功！实际响应结果为：{'errcode': 47001, 'errmsg': 'data format error hint: [tFHcJryWf-RQZGaA] rid: 66458df2-70386177-08c34550'}"}
{"CreateTime": "2024-05-16 12:39:14", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【修改用户标签接口】用例10：参数id格式错误-为中文汉字- 测试用例,执行成功！实际响应结果为：{"errcode": 47001, "errmsg": "data format error hint: [tFHcJryWf-RQZGaA] rid: 66458df2-70386177-08c34550"}"}
{"CreateTime": "2024-05-16 12:39:14", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【修改用户标签接口】用例11：参数id格式错误-含特殊符号- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:39:14", "filename": "Assert.py", "line": "13", "levelname": "INFO", "message": "【修改用户标签接口】用例11：参数id格式错误-含特殊符号- 测试用例,执行成功！实际响应结果为：{'errcode': 47001, 'errmsg': 'data format error hint: [tFHcloEVf-E4p] rid: 66458df2-695fc7b9-2be338e0'}"}
{"CreateTime": "2024-05-16 12:39:14", "filename": "Assert.py", "line": "32", "levelname": "INFO", "message": "【修改用户标签接口】用例11：参数id格式错误-含特殊符号- 测试用例,执行成功！实际响应结果为：{"errcode": 47001, "errmsg": "data format error hint: [tFHcloEVf-E4p] rid: 66458df2-695fc7b9-2be338e0"}"}
{"CreateTime": "2024-05-16 12:39:15", "filename": "Assert.py", "line": "47", "levelname": "INFO", "message": "【修改用户标签接口】用例12：参数name重复存在- 测试用例,执行成功！实际响应码为：200"}
{"CreateTime": "2024-05-16 12:39:15", "filename": "Assert.py", "line": "17", "levelname": "ERROR", "message": "【修改用户标签接口】用例12：参数name重复存在,执行失败！实际响应结果为：0,预期结果为：45157"}
