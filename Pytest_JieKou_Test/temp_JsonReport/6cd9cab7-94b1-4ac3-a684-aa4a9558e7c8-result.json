{"name": "test_UpdateTag[args11]", "status": "failed", "statusDetails": {"message": "AssertionError", "trace": "self = <testcase.user_tags.test_updateTag.Test_userTag object at 0x000001F1CEF4D688>\nargs = {'caseName': '【修改用户标签接口】用例12：参数name重复存在', 'data': {'tag': {'id': '722', 'name': '星标组'}}, 'errcode': 45157, 'errmsg': 'invalid tag name', ...}\nsession_fixture = '80_X82t0TCzj4kqvz_hPUNm_fwwH6n5C02pX2-TiwEO29cTixMpxdwrzI6VtbvtcfIt25uj478i0demenIv-ZIgYwQKZIQZ9vzepHSTWxF5JUIdb2fbL24UKOPp12AELIdAGAVCZ'\n\n    @pytest.mark.parametrize('args', read_testCase(\"user_tags\\\\update_tag.yaml\"))\n    @allure.story(\"修改用户标签接口\")\n    def test_UpdateTag(self, args, session_fixture):\n        token = session_fixture\n        with allure.step(\"执行接口：\"):\n            body = requests_def(args['method'], url=read_config(\"env\", \"test\") + args['url'],\n                                params={'access_token': token}, json=args['data'])\n            assret_statusCode(args['caseName'], body.status_code, args['statusCode'])\n    \n        with allure.step(\"断言响应体\"):\n>           assret_body(args['caseName'], body, 'errcode', args['errcode'])\n\ntestcase\\user_tags\\test_updateTag.py:22: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\ncommon\\Assert.py:18: in assret_body\n    raise e\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\ncaseName = '【修改用户标签接口】用例12：参数name重复存在', body = <Response [200]>, msg = 'errcode'\nassret_txt = 45157\n\n    def assret_body(caseName, body, msg, assret_txt):\n        # caseName：测试用例名称\n        # boby：响应body\n        # msg：  需要判断的响应body里的任意字段/属性（实际结果）,,,,,,通过jsonpath获取、或通过正则去获取\n        # assret_msg： 预期结果\n        try:\n>           assert body.json()[msg] == assret_txt\nE           AssertionError\n\ncommon\\Assert.py:12: AssertionError"}, "steps": [{"name": "执行接口：", "status": "passed", "start": 1715834354799, "stop": 1715834355096}, {"name": "断言响应体", "status": "failed", "statusDetails": {"message": "AssertionError\n", "trace": "  File \"D:\\Python_Code\\Pytest_JieKou_Test\\testcase\\user_tags\\test_updateTag.py\", line 22, in test_UpdateTag\n    assret_body(args['caseName'], body, 'errcode', args['errcode'])\n  File \"D:\\Python_Code\\Pytest_JieKou_Test\\common\\Assert.py\", line 18, in assret_body\n    raise e\n  File \"D:\\Python_Code\\Pytest_JieKou_Test\\common\\Assert.py\", line 12, in assret_body\n    assert body.json()[msg] == assret_txt\n"}, "start": 1715834355096, "stop": 1715834355097}], "attachments": [{"name": "log", "source": "787a06f2-00e4-4660-afbd-3c92d7c223eb-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "args", "value": "{'caseName': '【修改用户标签接口】用例12：参数name重复存在', 'method': 'post', 'url': '/cgi-bin/tags/update', 'data': {'tag': {'id': '722', 'name': '星标组'}}, 'errcode': 45157, 'errmsg': 'invalid tag name', 'statusCode': 200}"}], "start": 1715834354799, "stop": 1715834355098, "uuid": "d614f694-03f4-4105-afd8-56185ef360df", "historyId": "0849e141b605056a8edb1526f0222bf6", "testCaseId": "474fbbabcac0749738f52cbc87c10a99", "fullName": "testcase.user_tags.test_updateTag.Test_userTag#test_UpdateTag", "labels": [{"name": "story", "value": "修改用户标签接口"}, {"name": "epic", "value": "微信项目"}, {"name": "feature", "value": "用户标签管理模块"}, {"name": "parentSuite", "value": "testcase.user_tags"}, {"name": "suite", "value": "test_updateTag"}, {"name": "subSuite", "value": "Test_userTag"}, {"name": "host", "value": "DESKTOP-IG8PJM0"}, {"name": "thread", "value": "4692-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcase.user_tags.test_updateTag"}]}